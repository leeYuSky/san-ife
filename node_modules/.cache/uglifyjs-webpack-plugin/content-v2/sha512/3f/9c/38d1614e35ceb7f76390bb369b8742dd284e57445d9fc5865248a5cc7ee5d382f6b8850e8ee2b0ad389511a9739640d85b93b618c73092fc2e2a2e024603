{"map":"{\"version\":3,\"sources\":[\"webpack/bootstrap\"],\"names\":[\"installedModules\",\"__webpack_require__\",\"moduleId\",\"exports\",\"module\",\"i\",\"l\",\"modules\",\"call\",\"m\",\"c\",\"d\",\"name\",\"getter\",\"o\",\"Object\",\"defineProperty\",\"configurable\",\"enumerable\",\"get\",\"r\",\"value\",\"n\",\"__esModule\",\"object\",\"property\",\"prototype\",\"hasOwnProperty\",\"p\",\"s\"],\"mappings\":\"aACA,IAAAA,KAGA,SAAAC,EAAAC,GAGA,GAAAF,EAAAE,GACA,OAAAF,EAAAE,GAAAC,QAGA,IAAAC,EAAAJ,EAAAE,IACAG,EAAAH,EACAI,GAAA,EACAH,YAUA,OANAI,EAAAL,GAAAM,KAAAJ,EAAAD,QAAAC,EAAAA,EAAAD,QAAAF,GAGAG,EAAAE,GAAA,EAGAF,EAAAD,QAKAF,EAAAQ,EAAAF,EAGAN,EAAAS,EAAAV,EAGAC,EAAAU,EAAA,SAAAR,EAAAS,EAAAC,GACAZ,EAAAa,EAAAX,EAAAS,IACAG,OAAAC,eAAAb,EAAAS,GACAK,cAAA,EACAC,YAAA,EACAC,IAAAN,KAMAZ,EAAAmB,EAAA,SAAAjB,GACAY,OAAAC,eAAAb,EAAA,cAAiDkB,OAAA,KAIjDpB,EAAAqB,EAAA,SAAAlB,GACA,IAAAS,EAAAT,GAAAA,EAAAmB,WACA,WAA2B,OAAAnB,EAAA,SAC3B,WAAiC,OAAAA,GAEjC,OADAH,EAAAU,EAAAE,EAAA,IAAAA,GACAA,GAIAZ,EAAAa,EAAA,SAAAU,EAAAC,GAAsD,OAAAV,OAAAW,UAAAC,eAAAnB,KAAAgB,EAAAC,IAGtDxB,EAAA2B,EAAA,GAIA3B,EAAAA,EAAA4B,EAAA\",\"sourcesContent\":[\" \\t// The module cache\\n \\tvar installedModules = {};\\n\\n \\t// The require function\\n \\tfunction __webpack_require__(moduleId) {\\n\\n \\t\\t// Check if module is in cache\\n \\t\\tif(installedModules[moduleId]) {\\n \\t\\t\\treturn installedModules[moduleId].exports;\\n \\t\\t}\\n \\t\\t// Create a new module (and put it into the cache)\\n \\t\\tvar module = installedModules[moduleId] = {\\n \\t\\t\\ti: moduleId,\\n \\t\\t\\tl: false,\\n \\t\\t\\texports: {}\\n \\t\\t};\\n\\n \\t\\t// Execute the module function\\n \\t\\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\\n\\n \\t\\t// Flag the module as loaded\\n \\t\\tmodule.l = true;\\n\\n \\t\\t// Return the exports of the module\\n \\t\\treturn module.exports;\\n \\t}\\n\\n\\n \\t// expose the modules object (__webpack_modules__)\\n \\t__webpack_require__.m = modules;\\n\\n \\t// expose the module cache\\n \\t__webpack_require__.c = installedModules;\\n\\n \\t// define getter function for harmony exports\\n \\t__webpack_require__.d = function(exports, name, getter) {\\n \\t\\tif(!__webpack_require__.o(exports, name)) {\\n \\t\\t\\tObject.defineProperty(exports, name, {\\n \\t\\t\\t\\tconfigurable: false,\\n \\t\\t\\t\\tenumerable: true,\\n \\t\\t\\t\\tget: getter\\n \\t\\t\\t});\\n \\t\\t}\\n \\t};\\n\\n \\t// define __esModule on exports\\n \\t__webpack_require__.r = function(exports) {\\n \\t\\tObject.defineProperty(exports, '__esModule', { value: true });\\n \\t};\\n\\n \\t// getDefaultExport function for compatibility with non-harmony modules\\n \\t__webpack_require__.n = function(module) {\\n \\t\\tvar getter = module && module.__esModule ?\\n \\t\\t\\tfunction getDefault() { return module['default']; } :\\n \\t\\t\\tfunction getModuleExports() { return module; };\\n \\t\\t__webpack_require__.d(getter, 'a', getter);\\n \\t\\treturn getter;\\n \\t};\\n\\n \\t// Object.prototype.hasOwnProperty.call\\n \\t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\\n\\n \\t// __webpack_public_path__\\n \\t__webpack_require__.p = \\\"\\\";\\n\\n\\n \\t// Load entry module and return exports\\n \\treturn __webpack_require__(__webpack_require__.s = 15);\\n\"]}","code":"!function(g){var I={};function n(C){if(I[C])return I[C].exports;var e=I[C]={i:C,l:!1,exports:{}};return g[C].call(e.exports,e,e.exports,n),e.l=!0,e.exports}n.m=g,n.c=I,n.d=function(g,I,C){n.o(g,I)||Object.defineProperty(g,I,{configurable:!1,enumerable:!0,get:C})},n.r=function(g){Object.defineProperty(g,\"__esModule\",{value:!0})},n.n=function(g){var I=g&&g.__esModule?function(){return g.default}:function(){return g};return n.d(I,\"a\",I),I},n.o=function(g,I){return Object.prototype.hasOwnProperty.call(g,I)},n.p=\"\",n(n.s=15)}([function(module,exports,__webpack_require__){eval('/*\\n\\tMIT License http://www.opensource.org/licenses/mit-license.php\\n\\tAuthor Tobias Koppers @sokra\\n*/\\n\\nvar stylesInDom = {};\\n\\nvar\\tmemoize = function (fn) {\\n\\tvar memo;\\n\\n\\treturn function () {\\n\\t\\tif (typeof memo === \"undefined\") memo = fn.apply(this, arguments);\\n\\t\\treturn memo;\\n\\t};\\n};\\n\\nvar isOldIE = memoize(function () {\\n\\t// Test for IE <= 9 as proposed by Browserhacks\\n\\t// @see http://browserhacks.com/#hack-e71d8692f65334173fee715c222cb805\\n\\t// Tests for existence of standard globals is to allow style-loader\\n\\t// to operate correctly into non-standard environments\\n\\t// @see https://github.com/webpack-contrib/style-loader/issues/177\\n\\treturn window && document && document.all && !window.atob;\\n});\\n\\nvar getTarget = function (target) {\\n  return document.querySelector(target);\\n};\\n\\nvar getElement = (function (fn) {\\n\\tvar memo = {};\\n\\n\\treturn function(target) {\\n                // If passing function in options, then use it for resolve \"head\" element.\\n                // Useful for Shadow Root style i.e\\n                // {\\n                //   insertInto: function () { return document.querySelector(\"#foo\").shadowRoot }\\n                // }\\n                if (typeof target === \\'function\\') {\\n                        return target();\\n                }\\n                if (typeof memo[target] === \"undefined\") {\\n\\t\\t\\tvar styleTarget = getTarget.call(this, target);\\n\\t\\t\\t// Special case to return head of iframe instead of iframe itself\\n\\t\\t\\tif (window.HTMLIFrameElement && styleTarget instanceof window.HTMLIFrameElement) {\\n\\t\\t\\t\\ttry {\\n\\t\\t\\t\\t\\t// This will throw an exception if access to iframe is blocked\\n\\t\\t\\t\\t\\t// due to cross-origin restrictions\\n\\t\\t\\t\\t\\tstyleTarget = styleTarget.contentDocument.head;\\n\\t\\t\\t\\t} catch(e) {\\n\\t\\t\\t\\t\\tstyleTarget = null;\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t\\tmemo[target] = styleTarget;\\n\\t\\t}\\n\\t\\treturn memo[target]\\n\\t};\\n})();\\n\\nvar singleton = null;\\nvar\\tsingletonCounter = 0;\\nvar\\tstylesInsertedAtTop = [];\\n\\nvar\\tfixUrls = __webpack_require__(9);\\n\\nmodule.exports = function(list, options) {\\n\\tif (typeof DEBUG !== \"undefined\" && DEBUG) {\\n\\t\\tif (typeof document !== \"object\") throw new Error(\"The style-loader cannot be used in a non-browser environment\");\\n\\t}\\n\\n\\toptions = options || {};\\n\\n\\toptions.attrs = typeof options.attrs === \"object\" ? options.attrs : {};\\n\\n\\t// Force single-tag solution on IE6-9, which has a hard limit on the # of <style>\\n\\t// tags it will allow on a page\\n\\tif (!options.singleton && typeof options.singleton !== \"boolean\") options.singleton = isOldIE();\\n\\n\\t// By default, add <style> tags to the <head> element\\n        if (!options.insertInto) options.insertInto = \"head\";\\n\\n\\t// By default, add <style> tags to the bottom of the target\\n\\tif (!options.insertAt) options.insertAt = \"bottom\";\\n\\n\\tvar styles = listToStyles(list, options);\\n\\n\\taddStylesToDom(styles, options);\\n\\n\\treturn function update (newList) {\\n\\t\\tvar mayRemove = [];\\n\\n\\t\\tfor (var i = 0; i < styles.length; i++) {\\n\\t\\t\\tvar item = styles[i];\\n\\t\\t\\tvar domStyle = stylesInDom[item.id];\\n\\n\\t\\t\\tdomStyle.refs--;\\n\\t\\t\\tmayRemove.push(domStyle);\\n\\t\\t}\\n\\n\\t\\tif(newList) {\\n\\t\\t\\tvar newStyles = listToStyles(newList, options);\\n\\t\\t\\taddStylesToDom(newStyles, options);\\n\\t\\t}\\n\\n\\t\\tfor (var i = 0; i < mayRemove.length; i++) {\\n\\t\\t\\tvar domStyle = mayRemove[i];\\n\\n\\t\\t\\tif(domStyle.refs === 0) {\\n\\t\\t\\t\\tfor (var j = 0; j < domStyle.parts.length; j++) domStyle.parts[j]();\\n\\n\\t\\t\\t\\tdelete stylesInDom[domStyle.id];\\n\\t\\t\\t}\\n\\t\\t}\\n\\t};\\n};\\n\\nfunction addStylesToDom (styles, options) {\\n\\tfor (var i = 0; i < styles.length; i++) {\\n\\t\\tvar item = styles[i];\\n\\t\\tvar domStyle = stylesInDom[item.id];\\n\\n\\t\\tif(domStyle) {\\n\\t\\t\\tdomStyle.refs++;\\n\\n\\t\\t\\tfor(var j = 0; j < domStyle.parts.length; j++) {\\n\\t\\t\\t\\tdomStyle.parts[j](item.parts[j]);\\n\\t\\t\\t}\\n\\n\\t\\t\\tfor(; j < item.parts.length; j++) {\\n\\t\\t\\t\\tdomStyle.parts.push(addStyle(item.parts[j], options));\\n\\t\\t\\t}\\n\\t\\t} else {\\n\\t\\t\\tvar parts = [];\\n\\n\\t\\t\\tfor(var j = 0; j < item.parts.length; j++) {\\n\\t\\t\\t\\tparts.push(addStyle(item.parts[j], options));\\n\\t\\t\\t}\\n\\n\\t\\t\\tstylesInDom[item.id] = {id: item.id, refs: 1, parts: parts};\\n\\t\\t}\\n\\t}\\n}\\n\\nfunction listToStyles (list, options) {\\n\\tvar styles = [];\\n\\tvar newStyles = {};\\n\\n\\tfor (var i = 0; i < list.length; i++) {\\n\\t\\tvar item = list[i];\\n\\t\\tvar id = options.base ? item[0] + options.base : item[0];\\n\\t\\tvar css = item[1];\\n\\t\\tvar media = item[2];\\n\\t\\tvar sourceMap = item[3];\\n\\t\\tvar part = {css: css, media: media, sourceMap: sourceMap};\\n\\n\\t\\tif(!newStyles[id]) styles.push(newStyles[id] = {id: id, parts: [part]});\\n\\t\\telse newStyles[id].parts.push(part);\\n\\t}\\n\\n\\treturn styles;\\n}\\n\\nfunction insertStyleElement (options, style) {\\n\\tvar target = getElement(options.insertInto)\\n\\n\\tif (!target) {\\n\\t\\tthrow new Error(\"Couldn\\'t find a style target. This probably means that the value for the \\'insertInto\\' parameter is invalid.\");\\n\\t}\\n\\n\\tvar lastStyleElementInsertedAtTop = stylesInsertedAtTop[stylesInsertedAtTop.length - 1];\\n\\n\\tif (options.insertAt === \"top\") {\\n\\t\\tif (!lastStyleElementInsertedAtTop) {\\n\\t\\t\\ttarget.insertBefore(style, target.firstChild);\\n\\t\\t} else if (lastStyleElementInsertedAtTop.nextSibling) {\\n\\t\\t\\ttarget.insertBefore(style, lastStyleElementInsertedAtTop.nextSibling);\\n\\t\\t} else {\\n\\t\\t\\ttarget.appendChild(style);\\n\\t\\t}\\n\\t\\tstylesInsertedAtTop.push(style);\\n\\t} else if (options.insertAt === \"bottom\") {\\n\\t\\ttarget.appendChild(style);\\n\\t} else if (typeof options.insertAt === \"object\" && options.insertAt.before) {\\n\\t\\tvar nextSibling = getElement(options.insertInto + \" \" + options.insertAt.before);\\n\\t\\ttarget.insertBefore(style, nextSibling);\\n\\t} else {\\n\\t\\tthrow new Error(\"[Style Loader]\\\\n\\\\n Invalid value for parameter \\'insertAt\\' (\\'options.insertAt\\') found.\\\\n Must be \\'top\\', \\'bottom\\', or Object.\\\\n (https://github.com/webpack-contrib/style-loader#insertat)\\\\n\");\\n\\t}\\n}\\n\\nfunction removeStyleElement (style) {\\n\\tif (style.parentNode === null) return false;\\n\\tstyle.parentNode.removeChild(style);\\n\\n\\tvar idx = stylesInsertedAtTop.indexOf(style);\\n\\tif(idx >= 0) {\\n\\t\\tstylesInsertedAtTop.splice(idx, 1);\\n\\t}\\n}\\n\\nfunction createStyleElement (options) {\\n\\tvar style = document.createElement(\"style\");\\n\\n\\tif(options.attrs.type === undefined) {\\n\\t\\toptions.attrs.type = \"text/css\";\\n\\t}\\n\\n\\taddAttrs(style, options.attrs);\\n\\tinsertStyleElement(options, style);\\n\\n\\treturn style;\\n}\\n\\nfunction createLinkElement (options) {\\n\\tvar link = document.createElement(\"link\");\\n\\n\\tif(options.attrs.type === undefined) {\\n\\t\\toptions.attrs.type = \"text/css\";\\n\\t}\\n\\toptions.attrs.rel = \"stylesheet\";\\n\\n\\taddAttrs(link, options.attrs);\\n\\tinsertStyleElement(options, link);\\n\\n\\treturn link;\\n}\\n\\nfunction addAttrs (el, attrs) {\\n\\tObject.keys(attrs).forEach(function (key) {\\n\\t\\tel.setAttribute(key, attrs[key]);\\n\\t});\\n}\\n\\nfunction addStyle (obj, options) {\\n\\tvar style, update, remove, result;\\n\\n\\t// If a transform function was defined, run it on the css\\n\\tif (options.transform && obj.css) {\\n\\t    result = options.transform(obj.css);\\n\\n\\t    if (result) {\\n\\t    \\t// If transform returns a value, use that instead of the original css.\\n\\t    \\t// This allows running runtime transformations on the css.\\n\\t    \\tobj.css = result;\\n\\t    } else {\\n\\t    \\t// If the transform function returns a falsy value, don\\'t add this css.\\n\\t    \\t// This allows conditional loading of css\\n\\t    \\treturn function() {\\n\\t    \\t\\t// noop\\n\\t    \\t};\\n\\t    }\\n\\t}\\n\\n\\tif (options.singleton) {\\n\\t\\tvar styleIndex = singletonCounter++;\\n\\n\\t\\tstyle = singleton || (singleton = createStyleElement(options));\\n\\n\\t\\tupdate = applyToSingletonTag.bind(null, style, styleIndex, false);\\n\\t\\tremove = applyToSingletonTag.bind(null, style, styleIndex, true);\\n\\n\\t} else if (\\n\\t\\tobj.sourceMap &&\\n\\t\\ttypeof URL === \"function\" &&\\n\\t\\ttypeof URL.createObjectURL === \"function\" &&\\n\\t\\ttypeof URL.revokeObjectURL === \"function\" &&\\n\\t\\ttypeof Blob === \"function\" &&\\n\\t\\ttypeof btoa === \"function\"\\n\\t) {\\n\\t\\tstyle = createLinkElement(options);\\n\\t\\tupdate = updateLink.bind(null, style, options);\\n\\t\\tremove = function () {\\n\\t\\t\\tremoveStyleElement(style);\\n\\n\\t\\t\\tif(style.href) URL.revokeObjectURL(style.href);\\n\\t\\t};\\n\\t} else {\\n\\t\\tstyle = createStyleElement(options);\\n\\t\\tupdate = applyToTag.bind(null, style);\\n\\t\\tremove = function () {\\n\\t\\t\\tremoveStyleElement(style);\\n\\t\\t};\\n\\t}\\n\\n\\tupdate(obj);\\n\\n\\treturn function updateStyle (newObj) {\\n\\t\\tif (newObj) {\\n\\t\\t\\tif (\\n\\t\\t\\t\\tnewObj.css === obj.css &&\\n\\t\\t\\t\\tnewObj.media === obj.media &&\\n\\t\\t\\t\\tnewObj.sourceMap === obj.sourceMap\\n\\t\\t\\t) {\\n\\t\\t\\t\\treturn;\\n\\t\\t\\t}\\n\\n\\t\\t\\tupdate(obj = newObj);\\n\\t\\t} else {\\n\\t\\t\\tremove();\\n\\t\\t}\\n\\t};\\n}\\n\\nvar replaceText = (function () {\\n\\tvar textStore = [];\\n\\n\\treturn function (index, replacement) {\\n\\t\\ttextStore[index] = replacement;\\n\\n\\t\\treturn textStore.filter(Boolean).join(\\'\\\\n\\');\\n\\t};\\n})();\\n\\nfunction applyToSingletonTag (style, index, remove, obj) {\\n\\tvar css = remove ? \"\" : obj.css;\\n\\n\\tif (style.styleSheet) {\\n\\t\\tstyle.styleSheet.cssText = replaceText(index, css);\\n\\t} else {\\n\\t\\tvar cssNode = document.createTextNode(css);\\n\\t\\tvar childNodes = style.childNodes;\\n\\n\\t\\tif (childNodes[index]) style.removeChild(childNodes[index]);\\n\\n\\t\\tif (childNodes.length) {\\n\\t\\t\\tstyle.insertBefore(cssNode, childNodes[index]);\\n\\t\\t} else {\\n\\t\\t\\tstyle.appendChild(cssNode);\\n\\t\\t}\\n\\t}\\n}\\n\\nfunction applyToTag (style, obj) {\\n\\tvar css = obj.css;\\n\\tvar media = obj.media;\\n\\n\\tif(media) {\\n\\t\\tstyle.setAttribute(\"media\", media)\\n\\t}\\n\\n\\tif(style.styleSheet) {\\n\\t\\tstyle.styleSheet.cssText = css;\\n\\t} else {\\n\\t\\twhile(style.firstChild) {\\n\\t\\t\\tstyle.removeChild(style.firstChild);\\n\\t\\t}\\n\\n\\t\\tstyle.appendChild(document.createTextNode(css));\\n\\t}\\n}\\n\\nfunction updateLink (link, options, obj) {\\n\\tvar css = obj.css;\\n\\tvar sourceMap = obj.sourceMap;\\n\\n\\t/*\\n\\t\\tIf convertToAbsoluteUrls isn\\'t defined, but sourcemaps are enabled\\n\\t\\tand there is no publicPath defined then lets turn convertToAbsoluteUrls\\n\\t\\ton by default.  Otherwise default to the convertToAbsoluteUrls option\\n\\t\\tdirectly\\n\\t*/\\n\\tvar autoFixUrls = options.convertToAbsoluteUrls === undefined && sourceMap;\\n\\n\\tif (options.convertToAbsoluteUrls || autoFixUrls) {\\n\\t\\tcss = fixUrls(css);\\n\\t}\\n\\n\\tif (sourceMap) {\\n\\t\\t// http://stackoverflow.com/a/26603875\\n\\t\\tcss += \"\\\\n/*# sourceMappingURL=data:application/json;base64,\" + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + \" */\";\\n\\t}\\n\\n\\tvar blob = new Blob([css], { type: \"text/css\" });\\n\\n\\tvar oldSrc = link.href;\\n\\n\\tlink.href = URL.createObjectURL(blob);\\n\\n\\tif(oldSrc) URL.revokeObjectURL(oldSrc);\\n}\\n//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\\n//# sourceURL=webpack-internal:///0\\n')},function(module,exports){eval('/*\\n\\tMIT License http://www.opensource.org/licenses/mit-license.php\\n\\tAuthor Tobias Koppers @sokra\\n*/\\n// css base code, injected by the css-loader\\nmodule.exports = function(useSourceMap) {\\n\\tvar list = [];\\n\\n\\t// return the list of modules as css string\\n\\tlist.toString = function toString() {\\n\\t\\treturn this.map(function (item) {\\n\\t\\t\\tvar content = cssWithMappingToString(item, useSourceMap);\\n\\t\\t\\tif(item[2]) {\\n\\t\\t\\t\\treturn \"@media \" + item[2] + \"{\" + content + \"}\";\\n\\t\\t\\t} else {\\n\\t\\t\\t\\treturn content;\\n\\t\\t\\t}\\n\\t\\t}).join(\"\");\\n\\t};\\n\\n\\t// import a list of modules into the list\\n\\tlist.i = function(modules, mediaQuery) {\\n\\t\\tif(typeof modules === \"string\")\\n\\t\\t\\tmodules = [[null, modules, \"\"]];\\n\\t\\tvar alreadyImportedModules = {};\\n\\t\\tfor(var i = 0; i < this.length; i++) {\\n\\t\\t\\tvar id = this[i][0];\\n\\t\\t\\tif(typeof id === \"number\")\\n\\t\\t\\t\\talreadyImportedModules[id] = true;\\n\\t\\t}\\n\\t\\tfor(i = 0; i < modules.length; i++) {\\n\\t\\t\\tvar item = modules[i];\\n\\t\\t\\t// skip already imported module\\n\\t\\t\\t// this implementation is not 100% perfect for weird media query combinations\\n\\t\\t\\t//  when a module is imported multiple times with different media queries.\\n\\t\\t\\t//  I hope this will never occur (Hey this way we have smaller bundles)\\n\\t\\t\\tif(typeof item[0] !== \"number\" || !alreadyImportedModules[item[0]]) {\\n\\t\\t\\t\\tif(mediaQuery && !item[2]) {\\n\\t\\t\\t\\t\\titem[2] = mediaQuery;\\n\\t\\t\\t\\t} else if(mediaQuery) {\\n\\t\\t\\t\\t\\titem[2] = \"(\" + item[2] + \") and (\" + mediaQuery + \")\";\\n\\t\\t\\t\\t}\\n\\t\\t\\t\\tlist.push(item);\\n\\t\\t\\t}\\n\\t\\t}\\n\\t};\\n\\treturn list;\\n};\\n\\nfunction cssWithMappingToString(item, useSourceMap) {\\n\\tvar content = item[1] || \\'\\';\\n\\tvar cssMapping = item[3];\\n\\tif (!cssMapping) {\\n\\t\\treturn content;\\n\\t}\\n\\n\\tif (useSourceMap && typeof btoa === \\'function\\') {\\n\\t\\tvar sourceMapping = toComment(cssMapping);\\n\\t\\tvar sourceURLs = cssMapping.sources.map(function (source) {\\n\\t\\t\\treturn \\'/*# sourceURL=\\' + cssMapping.sourceRoot + source + \\' */\\'\\n\\t\\t});\\n\\n\\t\\treturn [content].concat(sourceURLs).concat([sourceMapping]).join(\\'\\\\n\\');\\n\\t}\\n\\n\\treturn [content].join(\\'\\\\n\\');\\n}\\n\\n// Adapted from convert-source-map (MIT)\\nfunction toComment(sourceMap) {\\n\\t// eslint-disable-next-line no-undef\\n\\tvar base64 = btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap))));\\n\\tvar data = \\'sourceMappingURL=data:application/json;charset=utf-8;base64,\\' + base64;\\n\\n\\treturn \\'/*# \\' + data + \\' */\\';\\n}\\n//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9saWIvY3NzLWJhc2UuanM/MjM1MCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsbUNBQW1DLGdCQUFnQjtBQUNuRCxJQUFJO0FBQ0o7QUFDQTtBQUNBLEdBQUc7QUFDSDs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZ0JBQWdCLGlCQUFpQjtBQUNqQztBQUNBO0FBQ0E7QUFDQTtBQUNBLFlBQVksb0JBQW9CO0FBQ2hDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHOztBQUVIO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG9EQUFvRCxjQUFjOztBQUVsRTtBQUNBIiwiZmlsZSI6IjEuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvKlxuXHRNSVQgTGljZW5zZSBodHRwOi8vd3d3Lm9wZW5zb3VyY2Uub3JnL2xpY2Vuc2VzL21pdC1saWNlbnNlLnBocFxuXHRBdXRob3IgVG9iaWFzIEtvcHBlcnMgQHNva3JhXG4qL1xuLy8gY3NzIGJhc2UgY29kZSwgaW5qZWN0ZWQgYnkgdGhlIGNzcy1sb2FkZXJcbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24odXNlU291cmNlTWFwKSB7XG5cdHZhciBsaXN0ID0gW107XG5cblx0Ly8gcmV0dXJuIHRoZSBsaXN0IG9mIG1vZHVsZXMgYXMgY3NzIHN0cmluZ1xuXHRsaXN0LnRvU3RyaW5nID0gZnVuY3Rpb24gdG9TdHJpbmcoKSB7XG5cdFx0cmV0dXJuIHRoaXMubWFwKGZ1bmN0aW9uIChpdGVtKSB7XG5cdFx0XHR2YXIgY29udGVudCA9IGNzc1dpdGhNYXBwaW5nVG9TdHJpbmcoaXRlbSwgdXNlU291cmNlTWFwKTtcblx0XHRcdGlmKGl0ZW1bMl0pIHtcblx0XHRcdFx0cmV0dXJuIFwiQG1lZGlhIFwiICsgaXRlbVsyXSArIFwie1wiICsgY29udGVudCArIFwifVwiO1xuXHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0cmV0dXJuIGNvbnRlbnQ7XG5cdFx0XHR9XG5cdFx0fSkuam9pbihcIlwiKTtcblx0fTtcblxuXHQvLyBpbXBvcnQgYSBsaXN0IG9mIG1vZHVsZXMgaW50byB0aGUgbGlzdFxuXHRsaXN0LmkgPSBmdW5jdGlvbihtb2R1bGVzLCBtZWRpYVF1ZXJ5KSB7XG5cdFx0aWYodHlwZW9mIG1vZHVsZXMgPT09IFwic3RyaW5nXCIpXG5cdFx0XHRtb2R1bGVzID0gW1tudWxsLCBtb2R1bGVzLCBcIlwiXV07XG5cdFx0dmFyIGFscmVhZHlJbXBvcnRlZE1vZHVsZXMgPSB7fTtcblx0XHRmb3IodmFyIGkgPSAwOyBpIDwgdGhpcy5sZW5ndGg7IGkrKykge1xuXHRcdFx0dmFyIGlkID0gdGhpc1tpXVswXTtcblx0XHRcdGlmKHR5cGVvZiBpZCA9PT0gXCJudW1iZXJcIilcblx0XHRcdFx0YWxyZWFkeUltcG9ydGVkTW9kdWxlc1tpZF0gPSB0cnVlO1xuXHRcdH1cblx0XHRmb3IoaSA9IDA7IGkgPCBtb2R1bGVzLmxlbmd0aDsgaSsrKSB7XG5cdFx0XHR2YXIgaXRlbSA9IG1vZHVsZXNbaV07XG5cdFx0XHQvLyBza2lwIGFscmVhZHkgaW1wb3J0ZWQgbW9kdWxlXG5cdFx0XHQvLyB0aGlzIGltcGxlbWVudGF0aW9uIGlzIG5vdCAxMDAlIHBlcmZlY3QgZm9yIHdlaXJkIG1lZGlhIHF1ZXJ5IGNvbWJpbmF0aW9uc1xuXHRcdFx0Ly8gIHdoZW4gYSBtb2R1bGUgaXMgaW1wb3J0ZWQgbXVsdGlwbGUgdGltZXMgd2l0aCBkaWZmZXJlbnQgbWVkaWEgcXVlcmllcy5cblx0XHRcdC8vICBJIGhvcGUgdGhpcyB3aWxsIG5ldmVyIG9jY3VyIChIZXkgdGhpcyB3YXkgd2UgaGF2ZSBzbWFsbGVyIGJ1bmRsZXMpXG5cdFx0XHRpZih0eXBlb2YgaXRlbVswXSAhPT0gXCJudW1iZXJcIiB8fCAhYWxyZWFkeUltcG9ydGVkTW9kdWxlc1tpdGVtWzBdXSkge1xuXHRcdFx0XHRpZihtZWRpYVF1ZXJ5ICYmICFpdGVtWzJdKSB7XG5cdFx0XHRcdFx0aXRlbVsyXSA9IG1lZGlhUXVlcnk7XG5cdFx0XHRcdH0gZWxzZSBpZihtZWRpYVF1ZXJ5KSB7XG5cdFx0XHRcdFx0aXRlbVsyXSA9IFwiKFwiICsgaXRlbVsyXSArIFwiKSBhbmQgKFwiICsgbWVkaWFRdWVyeSArIFwiKVwiO1xuXHRcdFx0XHR9XG5cdFx0XHRcdGxpc3QucHVzaChpdGVtKTtcblx0XHRcdH1cblx0XHR9XG5cdH07XG5cdHJldHVybiBsaXN0O1xufTtcblxuZnVuY3Rpb24gY3NzV2l0aE1hcHBpbmdUb1N0cmluZyhpdGVtLCB1c2VTb3VyY2VNYXApIHtcblx0dmFyIGNvbnRlbnQgPSBpdGVtWzFdIHx8ICcnO1xuXHR2YXIgY3NzTWFwcGluZyA9IGl0ZW1bM107XG5cdGlmICghY3NzTWFwcGluZykge1xuXHRcdHJldHVybiBjb250ZW50O1xuXHR9XG5cblx0aWYgKHVzZVNvdXJjZU1hcCAmJiB0eXBlb2YgYnRvYSA9PT0gJ2Z1bmN0aW9uJykge1xuXHRcdHZhciBzb3VyY2VNYXBwaW5nID0gdG9Db21tZW50KGNzc01hcHBpbmcpO1xuXHRcdHZhciBzb3VyY2VVUkxzID0gY3NzTWFwcGluZy5zb3VyY2VzLm1hcChmdW5jdGlvbiAoc291cmNlKSB7XG5cdFx0XHRyZXR1cm4gJy8qIyBzb3VyY2VVUkw9JyArIGNzc01hcHBpbmcuc291cmNlUm9vdCArIHNvdXJjZSArICcgKi8nXG5cdFx0fSk7XG5cblx0XHRyZXR1cm4gW2NvbnRlbnRdLmNvbmNhdChzb3VyY2VVUkxzKS5jb25jYXQoW3NvdXJjZU1hcHBpbmddKS5qb2luKCdcXG4nKTtcblx0fVxuXG5cdHJldHVybiBbY29udGVudF0uam9pbignXFxuJyk7XG59XG5cbi8vIEFkYXB0ZWQgZnJvbSBjb252ZXJ0LXNvdXJjZS1tYXAgKE1JVClcbmZ1bmN0aW9uIHRvQ29tbWVudChzb3VyY2VNYXApIHtcblx0Ly8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLXVuZGVmXG5cdHZhciBiYXNlNjQgPSBidG9hKHVuZXNjYXBlKGVuY29kZVVSSUNvbXBvbmVudChKU09OLnN0cmluZ2lmeShzb3VyY2VNYXApKSkpO1xuXHR2YXIgZGF0YSA9ICdzb3VyY2VNYXBwaW5nVVJMPWRhdGE6YXBwbGljYXRpb24vanNvbjtjaGFyc2V0PXV0Zi04O2Jhc2U2NCwnICsgYmFzZTY0O1xuXG5cdHJldHVybiAnLyojICcgKyBkYXRhICsgJyAqLyc7XG59XG4iXSwic291cmNlUm9vdCI6IiJ9\\n//# sourceURL=webpack-internal:///1\\n')},function(module,exports){eval('var g;\\n\\n// This works in non-strict mode\\ng = (function() {\\n\\treturn this;\\n})();\\n\\ntry {\\n\\t// This works if eval is allowed (see CSP)\\n\\tg = g || Function(\"return this\")() || (1, eval)(\"this\");\\n} catch (e) {\\n\\t// This works if the window reference is available\\n\\tif (typeof window === \"object\") g = window;\\n}\\n\\n// g can still be undefined, but nothing to do about it...\\n// We return undefined, instead of nothing here, so it\\'s\\n// easier to handle this case. if(!global) { ...}\\n\\nmodule.exports = g;\\n//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vKHdlYnBhY2spL2J1aWxkaW4vZ2xvYmFsLmpzP2NkMDAiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsQ0FBQzs7QUFFRDtBQUNBO0FBQ0E7QUFDQSxDQUFDO0FBQ0Q7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSw0Q0FBNEM7O0FBRTVDIiwiZmlsZSI6IjIuanMiLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgZztcblxuLy8gVGhpcyB3b3JrcyBpbiBub24tc3RyaWN0IG1vZGVcbmcgPSAoZnVuY3Rpb24oKSB7XG5cdHJldHVybiB0aGlzO1xufSkoKTtcblxudHJ5IHtcblx0Ly8gVGhpcyB3b3JrcyBpZiBldmFsIGlzIGFsbG93ZWQgKHNlZSBDU1ApXG5cdGcgPSBnIHx8IEZ1bmN0aW9uKFwicmV0dXJuIHRoaXNcIikoKSB8fCAoMSwgZXZhbCkoXCJ0aGlzXCIpO1xufSBjYXRjaCAoZSkge1xuXHQvLyBUaGlzIHdvcmtzIGlmIHRoZSB3aW5kb3cgcmVmZXJlbmNlIGlzIGF2YWlsYWJsZVxuXHRpZiAodHlwZW9mIHdpbmRvdyA9PT0gXCJvYmplY3RcIikgZyA9IHdpbmRvdztcbn1cblxuLy8gZyBjYW4gc3RpbGwgYmUgdW5kZWZpbmVkLCBidXQgbm90aGluZyB0byBkbyBhYm91dCBpdC4uLlxuLy8gV2UgcmV0dXJuIHVuZGVmaW5lZCwgaW5zdGVhZCBvZiBub3RoaW5nIGhlcmUsIHNvIGl0J3Ncbi8vIGVhc2llciB0byBoYW5kbGUgdGhpcyBjYXNlLiBpZighZ2xvYmFsKSB7IC4uLn1cblxubW9kdWxlLmV4cG9ydHMgPSBnO1xuIl0sInNvdXJjZVJvb3QiOiIifQ==\\n//# sourceURL=webpack-internal:///2\\n')},function(module,exports,__webpack_require__){eval(\"/* WEBPACK VAR INJECTION */(function(setImmediate) {/**\\n * San\\n * Copyright 2016 Baidu Inc. All rights reserved.\\n *\\n * @file 主文件\\n * @author errorrik(errorrik@gmail.com)\\n *         otakustay(otakustay@gmail.com)\\n *         junmer(junmer@foxmail.com)\\n */\\n\\n(function (root) {\\n    // 人工调整打包代码顺序，通过注释手工写一些依赖\\n//     // require('./util/guid');\\n//     // require('./util/empty');\\n//     // require('./util/extend');\\n//     // require('./util/inherits');\\n//     // require('./util/each');\\n//     // require('./util/contains');\\n//     // require('./util/bind');\\n//     // require('./browser/on');\\n//     // require('./browser/un');\\n//     // require('./browser/svg-tags');\\n//     // require('./browser/create-el');\\n//     // require('./browser/remove-el');\\n//     // require('./util/next-tick');\\n//     // require('./browser/ie');\\n//     // require('./browser/ie-old-than-9');\\n//     // require('./browser/input-event-compatible');\\n//     // require('./browser/auto-close-tags');\\n//     // require('./util/data-types.js');\\n//     // require('./util/create-data-types-checker.js');\\n//     // require('./parser/walker');\\n//     // require('./parser/create-a-node');\\n//     // require('./parser/parse-template');\\n//     // require('./runtime/change-expr-compare');\\n//     // require('./runtime/data-change-type');\\n//     // require('./runtime/default-filters');\\n//     // require('./view/life-cycle');\\n//     // require('./view/node-type');\\n//     // require('./view/get-prop-handler');\\n//     // require('./view/is-data-change-by-element');\\n//     // require('./view/event-declaration-listener');\\n//     // require('./view/create-node');\\n\\n\\n    /**\\n * @file 生成唯一id\\n * @author errorrik(errorrik@gmail.com)\\n */\\n\\n\\n/**\\n * 唯一id的起始值\\n *\\n * @inner\\n * @type {number}\\n */\\nvar guidIndex = 1;\\n\\n/**\\n * 唯一id的前缀\\n *\\n * @inner\\n * @type {string}\\n */\\nvar guidPrefix = (new Date()).getTime().toString(16).slice(8);\\n\\n/**\\n * 获取唯一id\\n *\\n * @inner\\n * @return {string} 唯一id\\n */\\nfunction guid() {\\n    return '_' + guidPrefix + (guidIndex++);\\n}\\n\\n// exports = module.exports = guid;\\n\\n\\n/**\\n * @file 空函数\\n * @author errorrik(errorrik@gmail.com)\\n */\\n\\n\\n/**\\n * 啥都不干\\n */\\nfunction empty() {}\\n\\n// exports = module.exports = empty;\\n\\n\\n/**\\n * @file 属性拷贝\\n * @author errorrik(errorrik@gmail.com)\\n */\\n\\n/**\\n * 对象属性拷贝\\n *\\n * @param {Object} target 目标对象\\n * @param {Object} source 源对象\\n * @return {Object} 返回目标对象\\n */\\nfunction extend(target, source) {\\n    for (var key in source) {\\n        if (source.hasOwnProperty(key)) {\\n            var value = source[key];\\n            if (typeof value !== 'undefined') {\\n                target[key] = value;\\n            }\\n        }\\n    }\\n\\n    return target;\\n}\\n\\n// exports = module.exports = extend;\\n\\n\\n/**\\n * @file 构建类之间的继承关系\\n * @author errorrik(errorrik@gmail.com)\\n */\\n\\n// var extend = require('./extend');\\n\\n/**\\n * 构建类之间的继承关系\\n *\\n * @param {Function} subClass 子类函数\\n * @param {Function} superClass 父类函数\\n */\\nfunction inherits(subClass, superClass) {\\n    /* jshint -W054 */\\n    var subClassProto = subClass.prototype;\\n    var F = new Function();\\n    F.prototype = superClass.prototype;\\n    subClass.prototype = new F();\\n    subClass.prototype.constructor = subClass;\\n    extend(subClass.prototype, subClassProto);\\n    /* jshint +W054 */\\n}\\n\\n// exports = module.exports = inherits;\\n\\n\\n/**\\n * @file 遍历数组\\n * @author errorrik(errorrik@gmail.com)\\n */\\n\\n\\n/**\\n * 遍历数组集合\\n *\\n * @param {Array} array 数组源\\n * @param {function(Any,number):boolean} iterator 遍历函数\\n */\\nfunction each(array, iterator) {\\n    if (array && array.length > 0) {\\n        for (var i = 0, l = array.length; i < l; i++) {\\n            if (iterator(array[i], i) === false) {\\n                break;\\n            }\\n        }\\n    }\\n}\\n\\n// exports = module.exports = each;\\n\\n\\n/**\\n * @file 判断数组中是否包含某项\\n * @author errorrik(errorrik@gmail.com)\\n */\\n\\n// var each = require('./each');\\n\\n/**\\n * 判断数组中是否包含某项\\n *\\n * @param {Array} array 数组\\n * @param {*} value 包含的项\\n * @return {boolean}\\n */\\nfunction contains(array, value) {\\n    var result = false;\\n    each(array, function (item) {\\n        result = item === value;\\n        return !result;\\n    });\\n\\n    return result;\\n}\\n\\n// exports = module.exports = contains;\\n\\n\\n/**\\n * @file bind函数\\n * @author errorrik(errorrik@gmail.com)\\n */\\n\\n/**\\n * Function.prototype.bind 方法的兼容性封装\\n *\\n * @param {Function} func 要bind的函数\\n * @param {Object} thisArg this指向对象\\n * @param {...*} args 预设的初始参数\\n * @return {Function}\\n */\\nfunction bind(func, thisArg) {\\n    var nativeBind = Function.prototype.bind;\\n    var slice = Array.prototype.slice;\\n    // #[begin] allua\\n    if (nativeBind && func.bind === nativeBind) {\\n    // #[end]\\n        return nativeBind.apply(func, slice.call(arguments, 1));\\n    // #[begin] allua\\n    }\\n\\n    var args = slice.call(arguments, 2);\\n    return function () {\\n        return func.apply(thisArg, args.concat(slice.call(arguments)));\\n    };\\n    // #[end]\\n}\\n\\n// exports = module.exports = bind;\\n\\n\\n/**\\n * @file DOM 事件挂载\\n * @author errorrik(errorrik@gmail.com)\\n */\\n\\n/**\\n * DOM 事件挂载\\n *\\n * @inner\\n * @param {HTMLElement} el DOM元素\\n * @param {string} eventName 事件名\\n * @param {Function} listener 监听函数\\n * @param {boolean} capture 是否是捕获阶段\\n */\\nfunction on(el, eventName, listener, capture) {\\n    // #[begin] allua\\n    if (el.addEventListener) {\\n    // #[end]\\n        el.addEventListener(eventName, listener, capture);\\n    // #[begin] allua\\n    }\\n    else {\\n        el.attachEvent('on' + eventName, listener);\\n    }\\n    // #[end]\\n}\\n\\n// exports = module.exports = on;\\n\\n\\n/**\\n * @file DOM 事件卸载\\n * @author errorrik(errorrik@gmail.com)\\n */\\n\\n/**\\n * DOM 事件卸载\\n *\\n * @inner\\n * @param {HTMLElement} el DOM元素\\n * @param {string} eventName 事件名\\n * @param {Function} listener 监听函数\\n * @param {boolean} capture 是否是捕获阶段\\n */\\nfunction un(el, eventName, listener, capture) {\\n    // #[begin] allua\\n    if (el.addEventListener) {\\n    // #[end]\\n        el.removeEventListener(eventName, listener, capture);\\n    // #[begin] allua\\n    }\\n    else {\\n        el.detachEvent('on' + eventName, listener);\\n    }\\n    // #[end]\\n}\\n\\n// exports = module.exports = un;\\n\\n\\n/**\\n * @file 将字符串逗号切分返回对象\\n * @author errorrik(errorrik@gmail.com)\\n */\\n\\n// var each = require('../util/each');\\n\\n/**\\n * 将字符串逗号切分返回对象\\n *\\n * @param {string} source 源字符串\\n * @return {Object}\\n */\\nfunction splitStr2Obj(source) {\\n    var result = {};\\n    each(\\n        source.split(','),\\n        function (key) {\\n            result[key] = 1;\\n        }\\n    );\\n    return result;\\n}\\n\\n// exports = module.exports = splitStr2Obj;\\n\\n\\n/**\\n * @file SVG标签表\\n * @author errorrik(errorrik@gmail.com)\\n */\\n\\n// var splitStr2Obj = require('../util/split-str-2-obj');\\n\\n/**\\n * svgTags\\n *\\n * @see https://www.w3.org/TR/SVG/svgdtd.html 只取常用\\n * @type {Object}\\n */\\nvar svgTags = splitStr2Obj(''\\n    // structure\\n    + 'svg,g,defs,desc,metadata,symbol,use,'\\n    // image & shape\\n    + 'image,path,rect,circle,line,ellipse,polyline,polygon,'\\n    // text\\n    + 'text,tspan,tref,textpath,'\\n    // other\\n    + 'marker,pattern,clippath,mask,filter,cursor,view,animate,'\\n    // font\\n    + 'font,font-face,glyph,missing-glyph');\\n\\n// exports = module.exports = svgTags;\\n\\n\\n/**\\n * @file DOM创建\\n * @author errorrik(errorrik@gmail.com)\\n */\\n\\n// var svgTags = require('./svg-tags');\\n\\n/**\\n * 创建 DOM 元素\\n *\\n * @param  {string} tagName tagName\\n * @return {HTMLElement}\\n */\\nfunction createEl(tagName) {\\n    if (svgTags[tagName]) {\\n        return document.createElementNS('http://www.w3.org/2000/svg', tagName);\\n    }\\n\\n    return document.createElement(tagName);\\n}\\n\\n// exports = module.exports = createEl;\\n\\n\\n/**\\n * @file 移除DOM\\n * @author errorrik(errorrik@gmail.com)\\n */\\n\\n/**\\n * 将 DOM 从页面中移除\\n *\\n * @param {HTMLElement} el DOM元素\\n */\\nfunction removeEl(el) {\\n    if (el && el.parentNode) {\\n        el.parentNode.removeChild(el);\\n    }\\n}\\n\\n// exports = module.exports = removeEl;\\n\\n\\n/**\\n * @file 在下一个时间周期运行任务\\n * @author errorrik(errorrik@gmail.com)\\n */\\n\\n// 该方法参照了vue2.5.0的实现，感谢vue团队\\n// SEE: https://github.com/vuejs/vue/blob/0948d999f2fddf9f90991956493f976273c5da1f/src/core/util/env.js#L68\\n\\n\\n// var bind = require('./bind');\\n\\n/**\\n * 下一个周期要执行的任务列表\\n *\\n * @inner\\n * @type {Array}\\n */\\nvar nextTasks = [];\\n\\n/**\\n * 执行下一个周期任务的函数\\n *\\n * @inner\\n * @type {Function}\\n */\\nvar nextHandler;\\n\\n/**\\n * 浏览器是否支持原生Promise\\n * 对Promise做判断，是为了禁用一些不严谨的Promise的polyfill\\n *\\n * @inner\\n * @type {boolean}\\n */\\nvar isNativePromise = typeof Promise === 'function' && /native code/.test(Promise);\\n\\n/**\\n * 在下一个时间周期运行任务\\n *\\n * @inner\\n * @param {Function} fn 要运行的任务函数\\n * @param {Object=} thisArg this指向对象\\n */\\nfunction nextTick(fn, thisArg) {\\n    if (thisArg) {\\n        fn = bind(fn, thisArg);\\n    }\\n    nextTasks.push(fn);\\n\\n    if (nextHandler) {\\n        return;\\n    }\\n\\n    nextHandler = function () {\\n        var tasks = nextTasks.slice(0);\\n        nextTasks = [];\\n        nextHandler = null;\\n\\n        for (var i = 0, l = tasks.length; i < l; i++) {\\n            tasks[i]();\\n        }\\n    };\\n\\n    // 非标准方法，但是此方法非常吻合要求。\\n    if (typeof setImmediate === 'function') {\\n        setImmediate(nextHandler);\\n    }\\n    // 用MessageChannel去做setImmediate的polyfill\\n    // 原理是将新的message事件加入到原有的dom events之后\\n    else if (typeof MessageChannel === 'function') {\\n        var channel = new MessageChannel();\\n        var port = channel.port2;\\n        channel.port1.onmessage = nextHandler;\\n        port.postMessage(1);\\n    }\\n    // for native app\\n    else if (isNativePromise) {\\n        Promise.resolve().then(nextHandler);\\n    }\\n    else {\\n        setTimeout(nextHandler, 0);\\n    }\\n}\\n\\n// exports = module.exports = nextTick;\\n\\n\\n/**\\n * @file ie版本号\\n * @author errorrik(errorrik@gmail.com)\\n */\\n\\n/**\\n * 从userAgent中ie版本号的匹配信息\\n *\\n * @type {Array}\\n */\\nvar ieVersionMatch = typeof navigator !== 'undefined'\\n    && navigator.userAgent.match(/msie\\\\s*([0-9]+)/i);\\n\\n/**\\n * ie版本号，非ie时为0\\n *\\n * @type {number}\\n */\\nvar ie = ieVersionMatch ? ieVersionMatch[1] - 0 : 0;\\n\\n// exports = module.exports = ie;\\n\\n\\n/**\\n * @file 是否 IE 并且小于 9\\n * @author errorrik(errorrik@gmail.com)\\n */\\n\\n// var ie = require('./ie');\\n\\n// HACK:\\n// 1. IE8下，设置innerHTML时如果以html comment开头，comment会被自动滤掉\\n//    为了保证stump存在，需要设置完html后，createComment并appendChild/insertBefore\\n// 2. IE8下，innerHTML还不支持custom element，所以需要用div替代，不用createElement\\n// 3. 虽然IE8已经优化了字符串+连接，碎片化连接性能不再退化\\n//    但是由于上面多个兼容场景都用 < 9 判断，所以字符串连接也沿用\\n//    所以结果是IE8下字符串连接用的是数组join的方式\\n\\n// #[begin] allua\\n/**\\n * 是否 IE 并且小于 9\\n */\\nvar ieOldThan9 = ie && ie < 9;\\n// #[end]\\n\\n// exports = module.exports = ieOldThan9;\\n\\n\\n/**\\n * @file DOM 事件挂载\\n * @author dafrok(o.o@mug.dog)\\n */\\n\\n/**\\n * DOM 事件挂载\\n *\\n * @inner\\n * @param {HTMLElement} el DOM元素\\n * @param {string} eventName 事件名\\n */\\nfunction trigger(el, eventName) {\\n    var event = document.createEvent('HTMLEvents');\\n    event.initEvent(eventName, true, true);\\n    el.dispatchEvent(event);\\n}\\n\\n// exports = module.exports = trigger;\\n\\n\\n/**\\n * @file 解决 IE9 在表单元素中删除字符时不触发事件的问题\\n * @author dafrok(o.o@mug.dog)\\n */\\n\\n// var ie = require('./ie');\\n// var on = require('./on');\\n// var trigger = require('./trigger');\\n\\n// #[begin] allua\\nif (ie === 9) {\\n    on(document, 'selectionchange', function () {\\n        var el = document.activeElement;\\n        if (el.tagName === 'TEXTAREA' || el.tagName === 'INPUT') {\\n            trigger(el, 'input');\\n        }\\n    });\\n}\\n// #[end]\\n\\n\\n/**\\n * @file 自闭合标签表\\n * @author errorrik(errorrik@gmail.com)\\n */\\n\\n// var splitStr2Obj = require('../util/split-str-2-obj');\\n\\n/**\\n * 自闭合标签列表\\n *\\n * @type {Object}\\n */\\nvar autoCloseTags = splitStr2Obj('area,base,br,col,embed,hr,img,input,keygen,param,source,track,wbr');\\n\\n// exports = module.exports = autoCloseTags;\\n\\n\\n/**\\n * @file data types\\n * @author leon <ludafa@outlook.com>\\n */\\n\\n// var bind = require('./bind');\\n// var empty = require('./empty');\\n// var extend = require('./extend');\\n\\n// #[begin] error\\nvar ANONYMOUS_CLASS_NAME = '<<anonymous>>';\\n\\n/**\\n * 获取精确的类型\\n *\\n * @NOTE 如果 obj 是一个 DOMElement，我们会返回 `element`；\\n *\\n * @param  {*} obj 目标\\n * @return {string}\\n */\\nfunction getDataType(obj) {\\n\\n    if (obj && obj.nodeType === 1) {\\n        return 'element';\\n    }\\n\\n    return Object.prototype.toString\\n        .call(obj)\\n        .slice(8, -1)\\n        .toLowerCase();\\n}\\n// #[end]\\n\\n/**\\n * 创建链式的数据类型校验器\\n *\\n * @param  {Function} validate 真正的校验器\\n * @return {Function}\\n */\\nfunction createChainableChecker(validate) {\\n    var chainedChecker = function () {};\\n    chainedChecker.isRequired = empty;\\n\\n    // 只在 error 功能启用时才有实际上的 dataTypes 检测\\n    // #[begin] error\\n    var checkType = function (isRequired, data, dataName, componentName, fullDataName) {\\n\\n        var dataValue = data[dataName];\\n        var dataType = getDataType(dataValue);\\n\\n        componentName = componentName || ANONYMOUS_CLASS_NAME;\\n\\n        // 如果是 null 或 undefined，那么要提前返回啦\\n        if (dataValue == null) {\\n            // 是 required 就报错\\n            if (isRequired) {\\n                throw new Error('[SAN ERROR] '\\n                    + 'The `' + dataName + '` '\\n                    + 'is marked as required in `' + componentName + '`, '\\n                    + 'but its value is ' + dataType\\n                );\\n            }\\n            // 不是 required，那就是 ok 的\\n            return;\\n        }\\n\\n        validate(data, dataName, componentName, fullDataName);\\n\\n    };\\n\\n    chainedChecker = bind(checkType, null, false);\\n    chainedChecker.isRequired = bind(checkType, null, true);\\n    // #[end]\\n\\n\\n\\n    return chainedChecker;\\n\\n}\\n\\n// #[begin] error\\n/**\\n * 生成主要类型数据校验器\\n *\\n * @param  {string} type 主类型\\n * @return {Function}\\n */\\nfunction createPrimaryTypeChecker(type) {\\n\\n    return createChainableChecker(function (data, dataName, componentName, fullDataName) {\\n\\n        var dataValue = data[dataName];\\n        var dataType = getDataType(dataValue);\\n\\n        if (dataType !== type) {\\n            throw new Error('[SAN ERROR] '\\n                + 'Invalid ' + componentName + ' data `' + fullDataName + '` of type'\\n                + '(' + dataType + ' supplied to ' + componentName + ', '\\n                + 'expected ' + type + ')'\\n            );\\n        }\\n\\n    });\\n\\n}\\n\\n\\n\\n/**\\n * 生成 arrayOf 校验器\\n *\\n * @param  {Function} arrayItemChecker 数组中每项数据的校验器\\n * @return {Function}\\n */\\nfunction createArrayOfChecker(arrayItemChecker) {\\n\\n    return createChainableChecker(function (data, dataName, componentName, fullDataName) {\\n\\n        if (typeof arrayItemChecker !== 'function') {\\n            throw new Error('[SAN ERROR] '\\n                + 'Data `' + dataName + '` of `' + componentName + '` has invalid '\\n                + 'DataType notation inside `arrayOf`, expected `function`'\\n            );\\n        }\\n\\n        var dataValue = data[dataName];\\n        var dataType = getDataType(dataValue);\\n\\n        if (dataType !== 'array') {\\n            throw new Error('[SAN ERROR] '\\n                + 'Invalid ' + componentName + ' data `' + fullDataName + '` of type'\\n                + '(' + dataType + ' supplied to ' + componentName + ', '\\n                + 'expected array)'\\n            );\\n        }\\n\\n        for (var i = 0, len = dataValue.length; i < len; i++) {\\n            arrayItemChecker(dataValue, i, componentName, fullDataName + '[' + i + ']');\\n        }\\n\\n    });\\n\\n}\\n\\n/**\\n * 生成 instanceOf 检测器\\n *\\n * @param  {Function|Class} expectedClass 期待的类\\n * @return {Function}\\n */\\nfunction createInstanceOfChecker(expectedClass) {\\n\\n    return createChainableChecker(function (data, dataName, componentName, fullDataName) {\\n\\n        var dataValue = data[dataName];\\n\\n        if (dataValue instanceof expectedClass) {\\n            return;\\n        }\\n\\n        var dataValueClassName = dataValue.constructor && dataValue.constructor.name\\n            ? dataValue.constructor.name\\n            : ANONYMOUS_CLASS_NAME;\\n\\n        var expectedClassName = expectedClass.name || ANONYMOUS_CLASS_NAME;\\n\\n        throw new Error('[SAN ERROR] '\\n            + 'Invalid ' + componentName + ' data `' + fullDataName + '` of type'\\n            + '(' + dataValueClassName + ' supplied to ' + componentName + ', '\\n            + 'expected instance of ' + expectedClassName + ')'\\n        );\\n\\n\\n    });\\n\\n}\\n\\n/**\\n * 生成 shape 校验器\\n *\\n * @param  {Object} shapeTypes shape 校验规则\\n * @return {Function}\\n */\\nfunction createShapeChecker(shapeTypes) {\\n\\n    return createChainableChecker(function (data, dataName, componentName, fullDataName) {\\n\\n        if (getDataType(shapeTypes) !== 'object') {\\n            throw new Error('[SAN ERROR] '\\n                + 'Data `' + fullDataName + '` of `' + componentName + '` has invalid '\\n                + 'DataType notation inside `shape`, expected `object`'\\n            );\\n        }\\n\\n        var dataValue = data[dataName];\\n        var dataType = getDataType(dataValue);\\n\\n        if (dataType !== 'object') {\\n            throw new Error('[SAN ERROR] '\\n                + 'Invalid ' + componentName + ' data `' + fullDataName + '` of type'\\n                + '(' + dataType + ' supplied to ' + componentName + ', '\\n                + 'expected object)'\\n            );\\n        }\\n\\n        for (var shapeKeyName in shapeTypes) {\\n            if (shapeTypes.hasOwnProperty(shapeKeyName)) {\\n                var checker = shapeTypes[shapeKeyName];\\n                if (typeof checker === 'function') {\\n                    checker(dataValue, shapeKeyName, componentName, fullDataName + '.' + shapeKeyName);\\n                }\\n            }\\n        }\\n\\n    });\\n\\n}\\n\\n/**\\n * 生成 oneOf 校验器\\n *\\n * @param  {Array} expectedEnumValues 期待的枚举值\\n * @return {Function}\\n */\\nfunction createOneOfChecker(expectedEnumValues) {\\n\\n    return createChainableChecker(function (data, dataName, componentName, fullDataName) {\\n\\n        if (getDataType(expectedEnumValues) !== 'array') {\\n            throw new Error('[SAN ERROR] '\\n                + 'Data `' + fullDataName + '` of `' + componentName + '` has invalid '\\n                + 'DataType notation inside `oneOf`, array is expected.'\\n            );\\n        }\\n\\n        var dataValue = data[dataName];\\n\\n        for (var i = 0, len = expectedEnumValues.length; i < len; i++) {\\n            if (dataValue === expectedEnumValues[i]) {\\n                return;\\n            }\\n        }\\n\\n        throw new Error('[SAN ERROR] '\\n            + 'Invalid ' + componentName + ' data `' + fullDataName + '` of value'\\n            + '(`' + dataValue + '` supplied to ' + componentName + ', '\\n            + 'expected one of ' + expectedEnumValues.join(',') + ')'\\n        );\\n\\n    });\\n\\n}\\n\\n/**\\n * 生成 oneOfType 校验器\\n *\\n * @param  {Array<Function>} expectedEnumOfTypeValues 期待的枚举类型\\n * @return {Function}\\n */\\nfunction createOneOfTypeChecker(expectedEnumOfTypeValues) {\\n\\n    return createChainableChecker(function (data, dataName, componentName, fullDataName) {\\n\\n        if (getDataType(expectedEnumOfTypeValues) !== 'array') {\\n            throw new Error('[SAN ERROR] '\\n                + 'Data `' + dataName + '` of `' + componentName + '` has invalid '\\n                + 'DataType notation inside `oneOf`, array is expected.'\\n            );\\n        }\\n\\n        var dataValue = data[dataName];\\n\\n        for (var i = 0, len = expectedEnumOfTypeValues.length; i < len; i++) {\\n\\n            var checker = expectedEnumOfTypeValues[i];\\n\\n            if (typeof checker !== 'function') {\\n                continue;\\n            }\\n\\n            try {\\n                checker(data, dataName, componentName, fullDataName);\\n                // 如果 checker 完成校验没报错，那就返回了\\n                return;\\n            }\\n            catch (e) {\\n                // 如果有错误，那么应该把错误吞掉\\n            }\\n\\n        }\\n\\n        // 所有的可接受 type 都失败了，才丢一个异常\\n        throw new Error('[SAN ERROR] '\\n            + 'Invalid ' + componentName + ' data `' + dataName + '` of value'\\n            + '(`' + dataValue + '` supplied to ' + componentName + ')'\\n        );\\n\\n    });\\n\\n}\\n\\n/**\\n * 生成 objectOf 校验器\\n *\\n * @param  {Function} typeChecker 对象属性值校验器\\n * @return {Function}\\n */\\nfunction createObjectOfChecker(typeChecker) {\\n\\n    return createChainableChecker(function (data, dataName, componentName, fullDataName) {\\n\\n        if (typeof typeChecker !== 'function') {\\n            throw new Error('[SAN ERROR] '\\n                + 'Data `' + dataName + '` of `' + componentName + '` has invalid '\\n                + 'DataType notation inside `objectOf`, expected function'\\n            );\\n        }\\n\\n        var dataValue = data[dataName];\\n        var dataType = getDataType(dataValue);\\n\\n        if (dataType !== 'object') {\\n            throw new Error('[SAN ERROR] '\\n                + 'Invalid ' + componentName + ' data `' + dataName + '` of type'\\n                + '(' + dataType + ' supplied to ' + componentName + ', '\\n                + 'expected object)'\\n            );\\n        }\\n\\n        for (var dataKeyName in dataValue) {\\n            if (dataValue.hasOwnProperty(dataKeyName)) {\\n                typeChecker(\\n                    dataValue,\\n                    dataKeyName,\\n                    componentName,\\n                    fullDataName + '.' + dataKeyName\\n                );\\n            }\\n        }\\n\\n\\n    });\\n\\n}\\n\\n/**\\n * 生成 exact 校验器\\n *\\n * @param  {Object} shapeTypes object 形态定义\\n * @return {Function}\\n */\\nfunction createExactChecker(shapeTypes) {\\n\\n    return createChainableChecker(function (data, dataName, componentName, fullDataName, secret) {\\n\\n        if (getDataType(shapeTypes) !== 'object') {\\n            throw new Error('[SAN ERROR] '\\n                + 'Data `' + dataName + '` of `' + componentName + '` has invalid '\\n                + 'DataType notation inside `exact`'\\n            );\\n        }\\n\\n        var dataValue = data[dataName];\\n        var dataValueType = getDataType(dataValue);\\n\\n        if (dataValueType !== 'object') {\\n            throw new Error('[SAN ERROR] '\\n                + 'Invalid data `' + fullDataName + '` of type `' + dataValueType + '`'\\n                + '(supplied to ' + componentName + ', expected `object`)'\\n            );\\n        }\\n\\n        var allKeys = {};\\n\\n        // 先合入 shapeTypes\\n        extend(allKeys, shapeTypes);\\n        // 再合入 dataValue\\n        extend(allKeys, dataValue);\\n        // 保证 allKeys 的类型正确\\n\\n        for (var key in allKeys) {\\n            if (allKeys.hasOwnProperty(key)) {\\n                var checker = shapeTypes[key];\\n\\n                // dataValue 中有一个多余的数据项\\n                if (!checker) {\\n                    throw new Error('[SAN ERROR] '\\n                        + 'Invalid data `' + fullDataName + '` key `' + key + '` '\\n                        + 'supplied to `' + componentName + '`. '\\n                        + '(`' + key + '` is not defined in `DataTypes.exact`)'\\n                    );\\n                }\\n\\n                if (!(key in dataValue)) {\\n                    throw new Error('[SAN ERROR] '\\n                        + 'Invalid data `' + fullDataName + '` key `' + key + '` '\\n                        + 'supplied to `' + componentName + '`. '\\n                        + '(`' + key + '` is marked `required` in `DataTypes.exact`)'\\n                    );\\n                }\\n\\n                checker(\\n                    dataValue,\\n                    key,\\n                    componentName,\\n                    fullDataName + '.' + key,\\n                    secret\\n                );\\n\\n            }\\n        }\\n\\n    });\\n\\n}\\n// #[end]\\n\\n\\n\\n/* eslint-disable fecs-valid-var-jsdoc */\\nvar DataTypes = {\\n    array: createChainableChecker(empty),\\n    object: createChainableChecker(empty),\\n    func: createChainableChecker(empty),\\n    string: createChainableChecker(empty),\\n    number: createChainableChecker(empty),\\n    bool: createChainableChecker(empty),\\n    symbol: createChainableChecker(empty),\\n    any: createChainableChecker,\\n    arrayOf: createChainableChecker,\\n    instanceOf: createChainableChecker,\\n    shape: createChainableChecker,\\n    oneOf: createChainableChecker,\\n    oneOfType: createChainableChecker,\\n    objectOf: createChainableChecker,\\n    exact: createChainableChecker\\n};\\n\\n// #[begin] error\\nDataTypes = {\\n\\n    any: createChainableChecker(empty),\\n\\n    // 类型检测\\n    array: createPrimaryTypeChecker('array'),\\n    object: createPrimaryTypeChecker('object'),\\n    func: createPrimaryTypeChecker('function'),\\n    string: createPrimaryTypeChecker('string'),\\n    number: createPrimaryTypeChecker('number'),\\n    bool: createPrimaryTypeChecker('boolean'),\\n    symbol: createPrimaryTypeChecker('symbol'),\\n\\n    // 复合类型检测\\n    arrayOf: createArrayOfChecker,\\n    instanceOf: createInstanceOfChecker,\\n    shape: createShapeChecker,\\n    oneOf: createOneOfChecker,\\n    oneOfType: createOneOfTypeChecker,\\n    objectOf: createObjectOfChecker,\\n    exact: createExactChecker\\n\\n};\\n/* eslint-enable fecs-valid-var-jsdoc */\\n// #[end]\\n\\n\\n// module.exports = DataTypes;\\n\\n\\n/**\\n * @file 创建数据检测函数\\n * @author leon<ludafa@outlook.com>\\n */\\n\\n\\n// #[begin] error\\n\\n/**\\n * 创建数据检测函数\\n *\\n * @param  {Object} dataTypes     数据格式\\n * @param  {string} componentName 组件名\\n * @return {Function}\\n */\\nfunction createDataTypesChecker(dataTypes, componentName) {\\n\\n    /**\\n     * 校验 data 是否满足 data types 的格式\\n     *\\n     * @param  {*} data 数据\\n     */\\n    return function (data) {\\n\\n        for (var dataTypeName in dataTypes) {\\n\\n            if (dataTypes.hasOwnProperty(dataTypeName)) {\\n\\n                var dataTypeChecker = dataTypes[dataTypeName];\\n\\n                if (typeof dataTypeChecker !== 'function') {\\n                    throw new Error('[SAN ERROR] '\\n                        + componentName + ':' + dataTypeName + ' is invalid; '\\n                        + 'it must be a function, usually from san.DataTypes'\\n                    );\\n                }\\n\\n                dataTypeChecker(\\n                    data,\\n                    dataTypeName,\\n                    componentName,\\n                    dataTypeName\\n                );\\n\\n\\n            }\\n        }\\n\\n    };\\n\\n}\\n\\n// #[end]\\n\\n// module.exports = createDataTypesChecker;\\n\\n\\n/**\\n * @file 字符串源码读取类\\n * @author errorrik(errorrik@gmail.com)\\n */\\n\\n\\n/**\\n * 字符串源码读取类，用于模板字符串解析过程\\n *\\n * @class\\n * @param {string} source 要读取的字符串\\n */\\nfunction Walker(source) {\\n    this.source = source;\\n    this.len = this.source.length;\\n    this.index = 0;\\n}\\n\\n/**\\n * 获取当前字符码\\n *\\n * @return {number}\\n */\\nWalker.prototype.currentCode = function () {\\n    return this.charCode(this.index);\\n};\\n\\n/**\\n * 截取字符串片段\\n *\\n * @param {number} start 起始位置\\n * @param {number} end 结束位置\\n * @return {string}\\n */\\nWalker.prototype.cut = function (start, end) {\\n    return this.source.slice(start, end);\\n};\\n\\n/**\\n * 向前读取字符\\n *\\n * @param {number} distance 读取字符数\\n */\\nWalker.prototype.go = function (distance) {\\n    this.index += distance;\\n};\\n\\n/**\\n * 读取下一个字符，返回下一个字符的 code\\n *\\n * @return {number}\\n */\\nWalker.prototype.nextCode = function () {\\n    this.go(1);\\n    return this.currentCode();\\n};\\n\\n/**\\n * 获取相应位置字符的 code\\n *\\n * @param {number} index 字符位置\\n * @return {number}\\n */\\nWalker.prototype.charCode = function (index) {\\n    return this.source.charCodeAt(index);\\n};\\n\\n/**\\n * 向前读取字符，直到遇到指定字符再停止\\n *\\n * @param {number=} charCode 指定字符的code\\n * @return {boolean} 当指定字符时，返回是否碰到指定的字符\\n */\\nWalker.prototype.goUntil = function (charCode) {\\n    var code;\\n    while (this.index < this.len && (code = this.currentCode())) {\\n        switch (code) {\\n            case 32:\\n            case 9:\\n                this.index++;\\n                break;\\n            default:\\n                if (code === charCode) {\\n                    this.index++;\\n                    return 1;\\n                }\\n                return;\\n        }\\n    }\\n};\\n\\n/**\\n * 向前读取符合规则的字符片段，并返回规则匹配结果\\n *\\n * @param {RegExp} reg 字符片段的正则表达式\\n * @return {Array}\\n */\\nWalker.prototype.match = function (reg) {\\n    reg.lastIndex = this.index;\\n\\n    var match = reg.exec(this.source);\\n    if (match) {\\n        this.index = reg.lastIndex;\\n    }\\n\\n    return match;\\n};\\n\\n// exports = module.exports = Walker;\\n\\n\\n\\n/**\\n * @file 模板解析生成的抽象节点\\n * @author errorrik(errorrik@gmail.com)\\n */\\n\\n/**\\n * 创建模板解析生成的抽象节点\\n *\\n * @param {Object=} options 节点参数\\n * @param {string=} options.tagName 标签名\\n * @param {ANode=} options.parent 父节点\\n * @param {boolean=} options.textExpr 文本节点表达式对象\\n * @return {Object}\\n */\\nfunction createANode(options) {\\n    options = options || {};\\n\\n    if (!options.textExpr) {\\n        options.directives = options.directives || {};\\n        options.props = options.props || [];\\n        options.events = options.events || [];\\n        options.children = options.children || [];\\n    }\\n\\n    return options;\\n}\\n\\n// exports = module.exports = createANode;\\n\\n\\n/**\\n * @file 把 kebab case 字符串转换成 camel case\\n * @author errorrik(errorrik@gmail.com)\\n */\\n\\n/**\\n * 把 kebab case 字符串转换成 camel case\\n *\\n * @param {string} source 源字符串\\n * @return {string}\\n */\\nfunction kebab2camel(source) {\\n    return source.replace(/-([a-z])/g, function (match, alpha) {\\n        return alpha.toUpperCase();\\n    });\\n}\\n\\n// exports = module.exports = kebab2camel;\\n\\n\\n/**\\n * @file 表达式类型\\n * @author errorrik(errorrik@gmail.com)\\n */\\n\\n/**\\n * 表达式类型\\n *\\n * @const\\n * @type {Object}\\n */\\nvar ExprType = {\\n    STRING: 1,\\n    NUMBER: 2,\\n    BOOL: 3,\\n    ACCESSOR: 4,\\n    INTERP: 5,\\n    CALL: 6,\\n    TEXT: 7,\\n    BINARY: 8,\\n    UNARY: 9,\\n    TERTIARY: 10\\n};\\n\\n// exports = module.exports = ExprType;\\n\\n\\n/**\\n * @file 创建访问表达式对象\\n * @author errorrik(errorrik@gmail.com)\\n */\\n\\n// var ExprType = require('./expr-type');\\n\\n/**\\n * 创建访问表达式对象\\n *\\n * @param {Array} paths 访问路径\\n * @return {Object}\\n */\\nfunction createAccessor(paths) {\\n    return {\\n        type: ExprType.ACCESSOR,\\n        paths: paths\\n    };\\n}\\n\\n// exports = module.exports = createAccessor;\\n\\n\\n/**\\n * @file 读取字符串\\n * @author errorrik(errorrik@gmail.com)\\n */\\n\\n\\n// var ExprType = require('./expr-type');\\n\\n/**\\n * 读取字符串\\n *\\n * @param {Walker} walker 源码读取对象\\n * @return {Object}\\n */\\nfunction readString(walker) {\\n    var startCode = walker.currentCode();\\n    var startIndex = walker.index;\\n    var charCode;\\n\\n    walkLoop: while ((charCode = walker.nextCode())) {\\n        switch (charCode) {\\n            case 92: // \\\\\\n                walker.go(1);\\n                break;\\n            case startCode:\\n                walker.go(1);\\n                break walkLoop;\\n        }\\n    }\\n\\n    var literal = walker.cut(startIndex, walker.index);\\n    return {\\n        type: ExprType.STRING,\\n        value: (new Function('return ' + literal))()\\n    };\\n}\\n\\n// exports = module.exports = readString;\\n\\n\\n/**\\n * @file 读取数字\\n * @author errorrik(errorrik@gmail.com)\\n */\\n\\n\\n// var ExprType = require('./expr-type');\\n\\n/**\\n * 读取数字\\n *\\n * @inner\\n * @param {Walker} walker 源码读取对象\\n * @return {Object}\\n */\\nfunction readNumber(walker) {\\n    var match = walker.match(/\\\\s*(-?[0-9]+(\\\\.[0-9]+)?)/g);\\n\\n    return {\\n        type: ExprType.NUMBER,\\n        value: match[1] - 0\\n    };\\n}\\n\\n// exports = module.exports = readNumber;\\n\\n\\n/**\\n * @file 读取ident\\n * @author errorrik(errorrik@gmail.com)\\n */\\n\\n/**\\n * 读取ident\\n *\\n * @inner\\n * @param {Walker} walker 源码读取对象\\n * @return {string}\\n */\\nfunction readIdent(walker) {\\n    var match = walker.match(/\\\\s*([\\\\$0-9a-z_]+)/ig);\\n    return match[1];\\n}\\n\\n// exports = module.exports = readIdent;\\n\\n\\n/**\\n * @file 读取三元表达式\\n * @author errorrik(errorrik@gmail.com)\\n */\\n\\n// var ExprType = require('./expr-type');\\n// var readLogicalORExpr = require('./read-logical-or-expr');\\n\\n/**\\n * 读取三元表达式\\n *\\n * @param {Walker} walker 源码读取对象\\n * @return {Object}\\n */\\nfunction readTertiaryExpr(walker) {\\n    var conditional = readLogicalORExpr(walker);\\n    walker.goUntil();\\n\\n    if (walker.currentCode() === 63) { // ?\\n        walker.go(1);\\n        var yesExpr = readTertiaryExpr(walker);\\n        walker.goUntil();\\n\\n        if (walker.currentCode() === 58) { // :\\n            walker.go(1);\\n            return {\\n                type: ExprType.TERTIARY,\\n                segs: [\\n                    conditional,\\n                    yesExpr,\\n                    readTertiaryExpr(walker)\\n                ]\\n            };\\n        }\\n    }\\n\\n    return conditional;\\n}\\n\\n// exports = module.exports = readTertiaryExpr;\\n\\n\\n/**\\n * @file 读取访问表达式\\n * @author errorrik(errorrik@gmail.com)\\n */\\n\\n// var ExprType = require('./expr-type');\\n// var createAccessor = require('./create-accessor');\\n// var readIdent = require('./read-ident');\\n// var readTertiaryExpr = require('./read-tertiary-expr');\\n\\n/**\\n * 读取访问表达式\\n *\\n * @param {Walker} walker 源码读取对象\\n * @return {Object}\\n */\\nfunction readAccessor(walker) {\\n    var firstSeg = readIdent(walker);\\n    switch (firstSeg) {\\n        case 'true':\\n        case 'false':\\n            return {\\n                type: ExprType.BOOL,\\n                value: firstSeg === 'true'\\n            };\\n    }\\n\\n    var result = createAccessor([\\n        {\\n            type: ExprType.STRING,\\n            value: firstSeg\\n        }\\n    ]);\\n\\n    /* eslint-disable no-constant-condition */\\n    accessorLoop: while (1) {\\n    /* eslint-enable no-constant-condition */\\n\\n        switch (walker.currentCode()) {\\n            case 46: // .\\n                walker.go(1);\\n\\n                // ident as string\\n                result.paths.push({\\n                    type: ExprType.STRING,\\n                    value: readIdent(walker)\\n                });\\n                break;\\n\\n            case 91: // [\\n                walker.go(1);\\n                result.paths.push(readTertiaryExpr(walker));\\n                walker.goUntil(93); // ]\\n                break;\\n\\n            default:\\n                break accessorLoop;\\n        }\\n    }\\n\\n    return result;\\n}\\n\\n// exports = module.exports = readAccessor;\\n\\n\\n/**\\n * @file 读取括号表达式\\n * @author errorrik(errorrik@gmail.com)\\n */\\n\\n// var readTertiaryExpr = require('./read-tertiary-expr');\\n\\n/**\\n * 读取括号表达式\\n *\\n * @param {Walker} walker 源码读取对象\\n * @return {Object}\\n */\\nfunction readParenthesizedExpr(walker) {\\n    walker.go(1);\\n    var expr = readTertiaryExpr(walker);\\n    walker.goUntil(41); // )\\n\\n    return expr;\\n}\\n\\n// exports = module.exports = readParenthesizedExpr;\\n\\n\\n/**\\n * @file 读取一元表达式\\n * @author errorrik(errorrik@gmail.com)\\n */\\n\\n// var ExprType = require('./expr-type');\\n// var readString = require('./read-string');\\n// var readNumber = require('./read-number');\\n// var readAccessor = require('./read-accessor');\\n// var readParenthesizedExpr = require('./read-parenthesized-expr');\\n\\n\\n/**\\n * 读取一元表达式\\n *\\n * @param {Walker} walker 源码读取对象\\n * @return {Object}\\n */\\nfunction readUnaryExpr(walker) {\\n    walker.goUntil();\\n\\n    switch (walker.currentCode()) {\\n        case 33: // !\\n            walker.go(1);\\n            return {\\n                type: ExprType.UNARY,\\n                expr: readUnaryExpr(walker)\\n            };\\n        case 34: // \\\"\\n        case 39: // '\\n            return readString(walker);\\n        case 45: // number\\n        case 48:\\n        case 49:\\n        case 50:\\n        case 51:\\n        case 52:\\n        case 53:\\n        case 54:\\n        case 55:\\n        case 56:\\n        case 57:\\n            return readNumber(walker);\\n        case 40: // (\\n            return readParenthesizedExpr(walker);\\n    }\\n\\n    return readAccessor(walker);\\n}\\n\\n// exports = module.exports = readUnaryExpr;\\n\\n\\n/**\\n * @file 读取乘法表达式\\n * @author errorrik(errorrik@gmail.com)\\n */\\n\\n// var ExprType = require('./expr-type');\\n// var readUnaryExpr = require('./read-unary-expr');\\n\\n/**\\n * 读取乘法表达式\\n *\\n * @param {Walker} walker 源码读取对象\\n * @return {Object}\\n */\\nfunction readMultiplicativeExpr(walker) {\\n    var expr = readUnaryExpr(walker);\\n\\n    while (1) {\\n        walker.goUntil();\\n\\n        var code = walker.currentCode();\\n        switch (code) {\\n            case 37: // %\\n            case 42: // *\\n            case 47: // /\\n                walker.go(1);\\n                expr = {\\n                    type: ExprType.BINARY,\\n                    operator: code,\\n                    segs: [expr, readUnaryExpr(walker)]\\n                };\\n                continue;\\n        }\\n\\n        break;\\n    }\\n\\n\\n    return expr;\\n}\\n\\n// exports = module.exports = readMultiplicativeExpr;\\n\\n\\n/**\\n * @file 读取加法表达式\\n * @author errorrik(errorrik@gmail.com)\\n */\\n\\n// var ExprType = require('./expr-type');\\n// var readMultiplicativeExpr = require('./read-multiplicative-expr');\\n\\n\\n/**\\n * 读取加法表达式\\n *\\n * @param {Walker} walker 源码读取对象\\n * @return {Object}\\n */\\nfunction readAdditiveExpr(walker) {\\n    var expr = readMultiplicativeExpr(walker);\\n\\n    while (1) {\\n        walker.goUntil();\\n        var code = walker.currentCode();\\n\\n        switch (code) {\\n            case 43: // +\\n            case 45: // -\\n                walker.go(1);\\n                expr = {\\n                    type: ExprType.BINARY,\\n                    operator: code,\\n                    segs: [expr, readMultiplicativeExpr(walker)]\\n                };\\n                continue;\\n        }\\n\\n        break;\\n    }\\n\\n    return expr;\\n}\\n\\n// exports = module.exports = readAdditiveExpr;\\n\\n\\n/**\\n * @file 读取关系判断表达式\\n * @author errorrik(errorrik@gmail.com)\\n */\\n\\n// var ExprType = require('./expr-type');\\n// var readAdditiveExpr = require('./read-additive-expr');\\n\\n/**\\n * 读取关系判断表达式\\n *\\n * @param {Walker} walker 源码读取对象\\n * @return {Object}\\n */\\nfunction readRelationalExpr(walker) {\\n    var expr = readAdditiveExpr(walker);\\n    walker.goUntil();\\n\\n    var code = walker.currentCode();\\n    switch (code) {\\n        case 60: // <\\n        case 62: // >\\n            if (walker.nextCode() === 61) {\\n                code += 61;\\n                walker.go(1);\\n            }\\n\\n            return {\\n                type: ExprType.BINARY,\\n                operator: code,\\n                segs: [expr, readAdditiveExpr(walker)]\\n            };\\n    }\\n\\n    return expr;\\n}\\n\\n// exports = module.exports = readRelationalExpr;\\n\\n\\n/**\\n * @file 读取相等比对表达式\\n * @author errorrik(errorrik@gmail.com)\\n */\\n\\n// var ExprType = require('./expr-type');\\n// var readRelationalExpr = require('./read-relational-expr');\\n\\n/**\\n * 读取相等比对表达式\\n *\\n * @param {Walker} walker 源码读取对象\\n * @return {Object}\\n */\\nfunction readEqualityExpr(walker) {\\n    var expr = readRelationalExpr(walker);\\n    walker.goUntil();\\n\\n    var code = walker.currentCode();\\n    switch (code) {\\n        case 61: // =\\n        case 33: // !\\n            if (walker.nextCode() === 61) {\\n                code += 61;\\n                if (walker.nextCode() === 61) {\\n                    code += 61;\\n                    walker.go(1);\\n                }\\n\\n                return {\\n                    type: ExprType.BINARY,\\n                    operator: code,\\n                    segs: [expr, readRelationalExpr(walker)]\\n                };\\n            }\\n\\n            walker.go(-1);\\n    }\\n\\n    return expr;\\n}\\n\\n// exports = module.exports = readEqualityExpr;\\n\\n\\n/**\\n * @file 读取逻辑与表达式\\n * @author errorrik(errorrik@gmail.com)\\n */\\n\\n// var ExprType = require('./expr-type');\\n// var readEqualityExpr = require('./read-equality-expr');\\n\\n/**\\n * 读取逻辑与表达式\\n *\\n * @param {Walker} walker 源码读取对象\\n * @return {Object}\\n */\\nfunction readLogicalANDExpr(walker) {\\n    var expr = readEqualityExpr(walker);\\n    walker.goUntil();\\n\\n    if (walker.currentCode() === 38) { // &\\n        if (walker.nextCode() === 38) {\\n            walker.go(1);\\n            return {\\n                type: ExprType.BINARY,\\n                operator: 76,\\n                segs: [expr, readLogicalANDExpr(walker)]\\n            };\\n        }\\n\\n        walker.go(-1);\\n    }\\n\\n    return expr;\\n}\\n\\n// exports = module.exports = readLogicalANDExpr;\\n\\n\\n/**\\n * @file 读取逻辑或表达式\\n * @author errorrik(errorrik@gmail.com)\\n */\\n\\n// var ExprType = require('./expr-type');\\n// var readLogicalANDExpr = require('./read-logical-and-expr');\\n\\n/**\\n * 读取逻辑或表达式\\n *\\n * @param {Walker} walker 源码读取对象\\n * @return {Object}\\n */\\nfunction readLogicalORExpr(walker) {\\n    var expr = readLogicalANDExpr(walker);\\n    walker.goUntil();\\n\\n    if (walker.currentCode() === 124) { // |\\n        if (walker.nextCode() === 124) {\\n            walker.go(1);\\n            return {\\n                type: ExprType.BINARY,\\n                operator: 248,\\n                segs: [expr, readLogicalORExpr(walker)]\\n            };\\n        }\\n\\n        walker.go(-1);\\n    }\\n\\n    return expr;\\n}\\n\\n// exports = module.exports = readLogicalORExpr;\\n\\n\\n/**\\n * @file 解析表达式\\n * @author errorrik(errorrik@gmail.com)\\n */\\n\\n// var Walker = require('./walker');\\n// var readTertiaryExpr = require('./read-tertiary-expr');\\n\\n/**\\n * 解析表达式\\n *\\n * @param {string} source 源码\\n * @return {Object}\\n */\\nfunction parseExpr(source) {\\n    if (typeof source === 'object' && source.type) {\\n        return source;\\n    }\\n\\n    var expr = readTertiaryExpr(new Walker(source));\\n    expr.raw = source;\\n    return expr;\\n}\\n\\n// exports = module.exports = parseExpr;\\n\\n\\n/**\\n * @file 读取调用\\n * @author errorrik(errorrik@gmail.com)\\n */\\n\\n// var ExprType = require('./expr-type');\\n// var readAccessor = require('./read-accessor');\\n// var readTertiaryExpr = require('./read-tertiary-expr');\\n\\n/**\\n * 读取调用\\n *\\n * @param {Walker} walker 源码读取对象\\n * @param {Array=} defaultArgs 默认参数\\n * @return {Object}\\n */\\nfunction readCall(walker, defaultArgs) {\\n    walker.goUntil();\\n    var ident = readAccessor(walker);\\n    var args = [];\\n\\n    if (walker.goUntil(40)) { // (\\n        while (!walker.goUntil(41)) { // )\\n            args.push(readTertiaryExpr(walker));\\n            walker.goUntil(44); // ,\\n        }\\n    }\\n    else if (defaultArgs) {\\n        args = defaultArgs;\\n    }\\n\\n    return {\\n        type: ExprType.CALL,\\n        name: ident,\\n        args: args\\n    };\\n}\\n\\n// exports = module.exports = readCall;\\n\\n\\n/**\\n * @file 解析调用\\n * @author errorrik(errorrik@gmail.com)\\n */\\n\\n\\n// var Walker = require('./walker');\\n// var readCall = require('./read-call');\\n\\n/**\\n * 解析调用\\n *\\n * @param {string} source 源码\\n * @param {Array=} defaultArgs 默认参数\\n * @return {Object}\\n */\\nfunction parseCall(source, defaultArgs) {\\n    var expr = readCall(new Walker(source), defaultArgs);\\n    expr.raw = source;\\n    return expr;\\n}\\n\\n// exports = module.exports = parseCall;\\n\\n\\n/**\\n * @file 解析插值替换\\n * @author errorrik(errorrik@gmail.com)\\n */\\n\\n// var Walker = require('./walker');\\n// var readTertiaryExpr = require('./read-tertiary-expr');\\n// var ExprType = require('./expr-type');\\n// var readCall = require('./read-call');\\n\\n/**\\n * 解析插值替换\\n *\\n * @param {string} source 源码\\n * @return {Object}\\n */\\nfunction parseInterp(source) {\\n    var walker = new Walker(source);\\n\\n    var interp = {\\n        type: ExprType.INTERP,\\n        expr: readTertiaryExpr(walker),\\n        filters: [],\\n        raw: source\\n    };\\n\\n    while (walker.goUntil(124)) { // |\\n        var callExpr = readCall(walker);\\n        switch (callExpr.name.paths[0].value) {\\n            case 'html':\\n                break;\\n            case 'raw':\\n                interp.original = 1;\\n                break;\\n            default:\\n                interp.filters.push(callExpr);\\n        }\\n    }\\n\\n    return interp;\\n}\\n\\n// exports = module.exports = parseInterp;\\n\\n\\n/**\\n * @file 解码 HTML 字符实体\\n * @author errorrik(errorrik@gmail.com)\\n */\\n\\nvar ENTITY_DECODE_MAP = {\\n    lt: '<',\\n    gt: '>',\\n    nbsp: ' ',\\n    quot: '\\\\\\\"',\\n    emsp: '\\\\u2003',\\n    ensp: '\\\\u2002',\\n    thinsp: '\\\\u2009',\\n    copy: '\\\\xa9',\\n    reg: '\\\\xae',\\n    zwnj: '\\\\u200c',\\n    zwj: '\\\\u200d',\\n    amp: '&'\\n};\\n\\n/**\\n * 解码 HTML 字符实体\\n *\\n * @param {string} source 要解码的字符串\\n * @return {string}\\n */\\nfunction decodeHTMLEntity(source) {\\n    return source\\n        .replace(/&#([0-9]+);/g, function (match, code) {\\n            return String.fromCharCode(+code);\\n        })\\n        .replace(/&#x([0-9a-f]+);/ig, function (match, code) {\\n            return String.fromCharCode(parseInt(code, 16));\\n        })\\n        .replace(/&([a-z]+);/ig, function (match, code) {\\n            return ENTITY_DECODE_MAP[code] || match;\\n        });\\n}\\n\\n// exports = module.exports = decodeHTMLEntity;\\n\\n\\n/**\\n * @file 解析文本\\n * @author errorrik(errorrik@gmail.com)\\n */\\n\\n// var Walker = require('./walker');\\n// var ExprType = require('./expr-type');\\n// var parseInterp = require('./parse-interp');\\n// var decodeHTMLEntity = require('../util/decode-html-entity');\\n\\n/**\\n * 对字符串进行可用于new RegExp的字面化\\n *\\n * @inner\\n * @param {string} source 需要字面化的字符串\\n * @return {string} 字符串字面化结果\\n */\\nfunction regexpLiteral(source) {\\n    return source.replace(/[\\\\^\\\\[\\\\]\\\\$\\\\(\\\\)\\\\{\\\\}\\\\?\\\\*\\\\.\\\\+\\\\\\\\]/g, function (c) {\\n        return '\\\\\\\\' + c;\\n    });\\n}\\n\\n/**\\n * 解析文本\\n *\\n * @param {string} source 源码\\n * @param {Array?} delimiters 分隔符。默认为 ['{{', '}}']\\n * @return {Object}\\n */\\nfunction parseText(source, delimiters) {\\n    delimiters = delimiters || ['{{', '}}'];\\n    var exprStartReg = new RegExp(\\n        regexpLiteral(delimiters[0]) + '\\\\\\\\s*([\\\\\\\\s\\\\\\\\S]+?)\\\\\\\\s*' + regexpLiteral(delimiters[1]),\\n        'ig'\\n    );\\n\\n    var exprMatch;\\n\\n    var walker = new Walker(source);\\n    var beforeIndex = 0;\\n\\n    var expr = {\\n        type: ExprType.TEXT,\\n        segs: []\\n    };\\n\\n    function pushStringToSeg(text) {\\n        text && expr.segs.push({\\n            type: ExprType.STRING,\\n            literal: text,\\n            value: decodeHTMLEntity(text)\\n        });\\n    }\\n\\n    while ((exprMatch = walker.match(exprStartReg)) != null) {\\n        pushStringToSeg(walker.cut(\\n            beforeIndex,\\n            walker.index - exprMatch[0].length\\n        ));\\n\\n        var interp = parseInterp(exprMatch[1]);\\n        expr.original = expr.original || interp.original;\\n\\n        expr.segs.push(interp);\\n        beforeIndex = walker.index;\\n    }\\n\\n    pushStringToSeg(walker.cut(beforeIndex));\\n\\n\\n\\n    if (expr.segs.length === 1 && expr.segs[0].type === ExprType.STRING) {\\n        expr.value = expr.segs[0].value;\\n    }\\n\\n    return expr;\\n}\\n\\n// exports = module.exports = parseText;\\n\\n\\n/**\\n * @file 解析指令\\n * @author errorrik(errorrik@gmail.com)\\n */\\n\\n\\n// var Walker = require('./walker');\\n// var parseExpr = require('./parse-expr');\\n// var parseCall = require('./parse-call');\\n// var parseText = require('./parse-text');\\n// var readAccessor = require('./read-accessor');\\n\\n/**\\n * 指令解析器\\n *\\n * @inner\\n * @type {Object}\\n */\\nvar directiveParsers = {\\n    'for': function (value) {\\n        var walker = new Walker(value);\\n        var match = walker.match(/^\\\\s*([\\\\$0-9a-z_]+)(\\\\s*,\\\\s*([\\\\$0-9a-z_]+))?\\\\s+in\\\\s+/ig);\\n\\n        if (match) {\\n            return {\\n                item: parseExpr(match[1]),\\n                index: parseExpr(match[3] || '$index'),\\n                value: readAccessor(walker)\\n            };\\n        }\\n\\n        // #[begin] error\\n        throw new Error('[SAN FATAL] for syntax error: ' + value);\\n        // #[end]\\n    },\\n\\n    'ref': function (value, options) {\\n        return {\\n            value: parseText(value, options.delimiters)\\n        };\\n    },\\n\\n    'if': function (value) {\\n        return {\\n            value: parseExpr(value.replace(/(^\\\\{\\\\{|\\\\}\\\\}$)/g, ''))\\n        };\\n    },\\n\\n    'elif': function (value) {\\n        return {\\n            value: parseExpr(value.replace(/(^\\\\{\\\\{|\\\\}\\\\}$)/g, ''))\\n        };\\n    },\\n\\n    'else': function (value) {\\n        return {\\n            value: {}\\n        };\\n    },\\n\\n    'html': function (value) {\\n        return {\\n            value: parseExpr(value.replace(/(^\\\\{\\\\{|\\\\}\\\\}$)/g, ''))\\n        };\\n    },\\n\\n    'transition': function (value) {\\n        return {\\n            value: parseCall(value)\\n        };\\n    }\\n};\\n\\n/**\\n * 解析指令\\n *\\n * @param {ANode} aNode 抽象节点\\n * @param {string} name 指令名称\\n * @param {string} value 指令值\\n * @param {Object} options 解析参数\\n * @param {Array?} options.delimiters 插值分隔符列表\\n */\\nfunction parseDirective(aNode, name, value, options) {\\n    if (name === 'else-if') {\\n        name = 'elif';\\n    }\\n\\n    var parser = directiveParsers[name];\\n    if (parser) {\\n        (aNode.directives[name] = parser(value, options)).raw = value;\\n    }\\n}\\n\\n// exports = module.exports = parseDirective;\\n\\n\\n/**\\n * @file 对属性信息进行处理\\n * @author errorrik(errorrik@gmail.com)\\n */\\n\\n// var ExprType = require('../parser/expr-type');\\n\\n/**\\n * 对属性信息进行处理\\n * 对组件的 binds 或者特殊的属性（比如 input 的 checked）需要处理\\n *\\n * 扁平化：\\n * 当 text 解析只有一项时，要么就是 string，要么就是 interp\\n * interp 有可能是绑定到组件属性的表达式，不希望被 eval text 成 string\\n * 所以这里做个处理，只有一项时直接抽出来\\n *\\n * bool属性：\\n * 当绑定项没有值时，默认为true\\n *\\n * @param {Object} prop 属性对象\\n */\\nfunction postProp(prop) {\\n    var expr = prop.expr;\\n\\n    if (expr.type === ExprType.TEXT) {\\n        switch (expr.segs.length) {\\n            case 0:\\n                prop.expr = {\\n                    type: ExprType.BOOL,\\n                    value: true\\n                };\\n                break;\\n\\n            case 1:\\n                expr = prop.expr = expr.segs[0];\\n                if (expr.type === ExprType.INTERP && expr.filters.length === 0) {\\n                    prop.expr = expr.expr;\\n                }\\n        }\\n    }\\n}\\n\\n// exports = module.exports = postProp;\\n\\n\\n/**\\n * @file 解析抽象节点属性\\n * @author errorrik(errorrik@gmail.com)\\n */\\n\\n// var each = require('../util/each');\\n// var kebab2camel = require('../util/kebab2camel');\\n// var ExprType = require('./expr-type');\\n// var createAccessor = require('./create-accessor');\\n// var parseExpr = require('./parse-expr');\\n// var parseCall = require('./parse-call');\\n// var parseText = require('./parse-text');\\n// var parseDirective = require('./parse-directive');\\n// var postProp = require('./post-prop');\\n\\n\\n/**\\n * 解析抽象节点属性\\n *\\n * @param {ANode} aNode 抽象节点\\n * @param {string} name 属性名称\\n * @param {string} value 属性值\\n * @param {Object} options 解析参数\\n * @param {Array?} options.delimiters 插值分隔符列表\\n */\\nfunction integrateAttr(aNode, name, value, options) {\\n    var prefixIndex = name.indexOf('-');\\n    var realName;\\n    var prefix;\\n\\n    if (prefixIndex > 0) {\\n        prefix = name.slice(0, prefixIndex);\\n        realName = name.slice(prefixIndex + 1);\\n    }\\n\\n    switch (prefix) {\\n        case 'on':\\n            var event = {\\n                name: realName,\\n                modifier: {}\\n            };\\n            aNode.events.push(event);\\n\\n            var colonIndex;\\n            while ((colonIndex = value.indexOf(':')) > 0) {\\n                var modifier = value.slice(0, colonIndex);\\n\\n                // eventHandler(\\\"dd:aa\\\") 这种情况不能算modifier，需要辨识\\n                if (!/^[a-z]+$/i.test(modifier)) {\\n                    break;\\n                }\\n\\n                event.modifier[modifier] = true;\\n                value = value.slice(colonIndex + 1);\\n            }\\n\\n            event.expr = parseCall(value, [\\n                createAccessor([\\n                    { type: ExprType.STRING, value: '$event' }\\n                ])\\n            ]);\\n            break;\\n\\n        case 'san':\\n        case 's':\\n            parseDirective(aNode, realName, value, options);\\n            break;\\n\\n        case 'prop':\\n            integrateProp(aNode, realName, value, options);\\n            break;\\n\\n        case 'var':\\n            if (!aNode.vars) {\\n                aNode.vars = [];\\n            }\\n\\n            realName = kebab2camel(realName);\\n            aNode.vars.push({\\n                name: realName,\\n                expr: parseExpr(value.replace(/(^\\\\{\\\\{|\\\\}\\\\}$)/g, ''))\\n            });\\n            break;\\n\\n        default:\\n            integrateProp(aNode, name, value, options);\\n    }\\n}\\n\\n/**\\n * 解析抽象节点绑定属性\\n *\\n * @inner\\n * @param {ANode} aNode 抽象节点\\n * @param {string} name 属性名称\\n * @param {string} value 属性值\\n * @param {Object} options 解析参数\\n * @param {Array?} options.delimiters 插值分隔符列表\\n */\\nfunction integrateProp(aNode, name, value, options) {\\n    // parse two way binding, e.g. value=\\\"{=ident=}\\\"\\n    var xMatch = value.match(/^\\\\{=\\\\s*(.*?)\\\\s*=\\\\}$/);\\n\\n    if (xMatch) {\\n        aNode.props.push({\\n            name: name,\\n            expr: parseExpr(xMatch[1]),\\n            x: 1,\\n            raw: value\\n        });\\n\\n        return;\\n    }\\n\\n    // parse normal prop\\n    var prop = {\\n        name: name,\\n        expr: parseText(value, options.delimiters),\\n        raw: value\\n    };\\n\\n    // 这里不能把只有一个插值的属性抽取\\n    // 因为插值里的值可能是html片段，容易被注入\\n    // 组件的数据绑定在组件init时做抽取\\n    switch (name) {\\n        case 'class':\\n        case 'style':\\n            each(prop.expr.segs, function (seg) {\\n                if (seg.type === ExprType.INTERP) {\\n                    seg.filters.push({\\n                        type: ExprType.CALL,\\n                        name: createAccessor([\\n                            {\\n                                type: ExprType.STRING,\\n                                value: '_' + prop.name\\n                            }\\n                        ]),\\n                        args: []\\n                    });\\n                }\\n            });\\n            break;\\n\\n        case 'checked':\\n            if (aNode.tagName === 'input') {\\n                postProp(prop);\\n            }\\n            break;\\n    }\\n\\n    aNode.props.push(prop);\\n}\\n\\n\\n// exports = module.exports = integrateAttr;\\n\\n\\n/**\\n * @file 解析模板\\n * @author errorrik(errorrik@gmail.com)\\n */\\n\\n\\n// var createANode = require('./create-a-node');\\n// var Walker = require('./walker');\\n// var integrateAttr = require('./integrate-attr');\\n// var parseText = require('./parse-text');\\n// var autoCloseTags = require('../browser/auto-close-tags');\\n\\n// #[begin] error\\nfunction getXPath(stack, currentTagName) {\\n    var path = ['ROOT'];\\n    for (var i = 1, len = stack.length; i < len; i++) {\\n        path.push(stack[i].tagName);\\n    }\\n    if (currentTagName) {\\n        path.push(currentTagName);\\n    }\\n    return path.join('>');\\n}\\n// #[end]\\n\\n/* eslint-disable fecs-max-statements */\\n\\n/**\\n * 解析 template\\n *\\n * @param {string} source template源码\\n * @param {Object?} options 解析参数\\n * @param {string?} options.trimWhitespace 空白文本的处理策略。none|blank|all\\n * @param {Array?} options.delimiters 插值分隔符列表\\n * @return {ANode}\\n */\\nfunction parseTemplate(source, options) {\\n    options = options || {};\\n    options.trimWhitespace = options.trimWhitespace || 'none';\\n\\n    var rootNode = createANode();\\n\\n    if (typeof source !== 'string') {\\n        return rootNode;\\n    }\\n\\n    source = source.replace(/\\x3c!--([\\\\s\\\\S]*?)--\\x3e/mg, '').replace(/(^\\\\s+|\\\\s+$)/g, '');\\n    var walker = new Walker(source);\\n\\n    var tagReg = /<(\\\\/)?([a-z0-9-]+)\\\\s*/ig;\\n    var attrReg = /([-:0-9a-z\\\\(\\\\)\\\\[\\\\]]+)(\\\\s*=\\\\s*(['\\\"])([^\\\\3]*?)\\\\3)?\\\\s*/ig;\\n\\n    var tagMatch;\\n    var currentNode = rootNode;\\n    var stack = [rootNode];\\n    var stackIndex = 0;\\n    var beforeLastIndex = 0;\\n\\n    while ((tagMatch = walker.match(tagReg)) != null) {\\n        var tagEnd = tagMatch[1];\\n        var tagName = tagMatch[2].toLowerCase();\\n\\n        pushTextNode(source.slice(\\n            beforeLastIndex,\\n            walker.index - tagMatch[0].length\\n        ));\\n\\n        // 62: >\\n        // 47: /\\n        // 处理 </xxxx >\\n        if (tagEnd && walker.currentCode() === 62) {\\n            // 满足关闭标签的条件时，关闭标签\\n            // 向上查找到对应标签，找不到时忽略关闭\\n            var closeIndex = stackIndex;\\n\\n            // #[begin] error\\n            // 如果正在闭合一个自闭合的标签，例如 </input>，报错\\n            if (autoCloseTags[tagName]) {\\n                throw new Error(''\\n                    + '[SAN ERROR] ' + getXPath(stack, tagName) + ' is a `auto closed` tag, '\\n                    + 'so it cannot be closed with </' + tagName + '>'\\n                );\\n            }\\n\\n            // 如果关闭的 tag 和当前打开的不一致，报错\\n            if (\\n                stack[closeIndex].tagName !== tagName\\n                // 这里要把 table 自动添加 tbody 的情况给去掉\\n                && !(tagName === 'table' && stack[closeIndex].tagName === 'tbody')\\n            ) {\\n                throw new Error('[SAN ERROR] ' + getXPath(stack) + ' is closed with ' + tagName);\\n            }\\n            // #[end]\\n\\n            while (closeIndex > 0 && stack[closeIndex].tagName !== tagName) {\\n                closeIndex--;\\n            }\\n\\n            if (closeIndex > 0) {\\n                stackIndex = closeIndex - 1;\\n                currentNode = stack[stackIndex];\\n            }\\n            walker.go(1);\\n        }\\n\\n        // #[begin] error\\n        // 处理 </xxx 非正常闭合标签\\n        else if (tagEnd) {\\n\\n            // 如果闭合标签时，匹配后的下一个字符是 <，即下一个标签的开始，那么当前闭合标签未闭合\\n            if (walker.currentCode() === 60) {\\n                throw new Error(''\\n                    + '[SAN ERROR] ' + getXPath(stack)\\n                    + '\\\\'s close tag not closed'\\n                );\\n            }\\n\\n            // 闭合标签有属性\\n            throw new Error(''\\n                + '[SAN ERROR] ' + getXPath(stack)\\n                + '\\\\'s close tag has attributes'\\n            );\\n\\n        }\\n        // #[end]\\n\\n        else if (!tagEnd) {\\n            var aElement = createANode({\\n                tagName: tagName\\n            });\\n            var tagClose = autoCloseTags[tagName];\\n\\n            // 解析 attributes\\n\\n            /* eslint-disable no-constant-condition */\\n            while (1) {\\n            /* eslint-enable no-constant-condition */\\n\\n                var nextCharCode = walker.currentCode();\\n\\n                // 标签结束时跳出 attributes 读取\\n                // 标签可能直接结束或闭合结束\\n                if (nextCharCode === 62) {\\n                    walker.go(1);\\n                    break;\\n                }\\n                // 遇到 /> 按闭合处理\\n                else if (nextCharCode === 47\\n                    && walker.charCode(walker.index + 1) === 62\\n                ) {\\n                    walker.go(2);\\n                    tagClose = 1;\\n                    break;\\n                }\\n\\n                // #[begin] error\\n                // 在处理一个 open 标签时，如果遇到了 <， 即下一个标签的开始，则当前标签未能正常闭合，报错\\n                if (nextCharCode === 60) {\\n                    throw new Error('[SAN ERROR] ' + getXPath(stack, tagName) + ' is not closed');\\n                }\\n                // #[end]\\n\\n                // 读取 attribute\\n                var attrMatch = walker.match(attrReg);\\n                if (attrMatch) {\\n\\n                    // #[begin] error\\n                    // 如果属性有 =，但没取到 value，报错\\n                    if (\\n                        walker.charCode(attrMatch.index + attrMatch[1].length) === 61\\n                        && !attrMatch[2]\\n                    ) {\\n                        throw new Error(''\\n                            + '[SAN ERROR] ' + getXPath(stack, tagName) + ' attribute `'\\n                            + attrMatch[1] + '` is not wrapped with \\\"\\\"'\\n                        );\\n                    }\\n                    // #[end]\\n\\n                    integrateAttr(\\n                        aElement,\\n                        attrMatch[1],\\n                        attrMatch[2] ? attrMatch[4] : '',\\n                        options\\n                    );\\n                }\\n\\n            }\\n\\n            // match if directive for else/elif directive\\n            var elseDirective = aElement.directives['else'] || aElement.directives.elif; // eslint-disable-line dot-notation\\n            if (elseDirective) {\\n                var parentChildrenLen = currentNode.children.length;\\n\\n                while (parentChildrenLen--) {\\n                    var parentChild = currentNode.children[parentChildrenLen];\\n                    if (parentChild.textExpr) {\\n                        currentNode.children.splice(parentChildrenLen, 1);\\n                        continue;\\n                    }\\n\\n                    // #[begin] error\\n                    if (!parentChild.directives['if']) { // eslint-disable-line dot-notation\\n                        throw new Error('[SAN FATEL] else not match if.');\\n                    }\\n                    // #[end]\\n\\n                    parentChild.elses = parentChild.elses || [];\\n                    parentChild.elses.push(aElement);\\n\\n                    break;\\n                }\\n            }\\n            else {\\n                if (aElement.tagName === 'tr' && currentNode.tagName === 'table') {\\n                    var tbodyNode = createANode({\\n                        tagName: 'tbody'\\n                    });\\n                    currentNode.children.push(tbodyNode);\\n                    currentNode = tbodyNode;\\n                    stack[++stackIndex] = tbodyNode;\\n                }\\n\\n                currentNode.children.push(aElement);\\n            }\\n\\n            if (!tagClose) {\\n                currentNode = aElement;\\n                stack[++stackIndex] = aElement;\\n            }\\n        }\\n\\n        beforeLastIndex = walker.index;\\n    }\\n\\n    pushTextNode(walker.cut(beforeLastIndex));\\n\\n    return rootNode;\\n\\n    /**\\n     * 在读取栈中添加文本节点\\n     *\\n     * @inner\\n     * @param {string} text 文本内容\\n     */\\n    function pushTextNode(text) {\\n        switch (options.trimWhitespace) {\\n            case 'blank':\\n                if (/^\\\\s+$/.test(text)) {\\n                    text = null;\\n                }\\n                break;\\n\\n            case 'all':\\n                text = text.replace(/(^\\\\s+|\\\\s+$)/g, '');\\n                break;\\n        }\\n\\n        if (text) {\\n            currentNode.children.push(createANode({\\n                textExpr: parseText(text, options.delimiters)\\n            }));\\n        }\\n    }\\n}\\n\\n/* eslint-enable fecs-max-statements */\\n\\n// exports = module.exports = parseTemplate;\\n\\n\\n/**\\n * @file 默认filter\\n * @author errorrik(errorrik@gmail.com)\\n */\\n\\n\\n/* eslint-disable fecs-camelcase */\\n/* eslint-disable guard-for-in */\\n\\n/**\\n * 默认filter\\n *\\n * @const\\n * @type {Object}\\n */\\nvar DEFAULT_FILTERS = {\\n\\n    /**\\n     * URL编码filter\\n     *\\n     * @param {string} source 源串\\n     * @return {string} 替换结果串\\n     */\\n    url: encodeURIComponent,\\n\\n    _class: function (source) {\\n        if (source instanceof Array) {\\n            return source.join(' ');\\n        }\\n\\n        return source;\\n    },\\n\\n    _style: function (source) {\\n        if (typeof source === 'object') {\\n            var result = '';\\n            for (var key in source) {\\n                result += key + ':' + source[key] + ';';\\n            }\\n\\n            return result;\\n        }\\n\\n        return source;\\n    },\\n\\n    _sep: function (source, sep) {\\n        return source ? sep + source : source;\\n    }\\n};\\n/* eslint-enable fecs-camelcase */\\n\\n// exports = module.exports = DEFAULT_FILTERS;\\n\\n\\n/**\\n * @file 表达式计算\\n * @author errorrik(errorrik@gmail.com)\\n */\\n\\n// var ExprType = require('../parser/expr-type');\\n// var DEFAULT_FILTERS = require('./default-filters');\\n// var evalArgs = require('./eval-args');\\n// var dataCache = require('./data-cache');\\n\\n/**\\n * 计算表达式的值\\n *\\n * @param {Object} expr 表达式对象\\n * @param {Data} data 数据容器对象\\n * @param {Component=} owner 所属组件环境\\n * @return {*}\\n */\\nfunction evalExpr(expr, data, owner) {\\n    if (expr.value != null) {\\n        return expr.value;\\n    }\\n\\n    var value = dataCache.get(data, expr);\\n\\n    if (value == null) {\\n        switch (expr.type) {\\n            case ExprType.UNARY:\\n                value = !evalExpr(expr.expr, data, owner);\\n                break;\\n\\n            case ExprType.BINARY:\\n                var leftValue = evalExpr(expr.segs[0], data, owner);\\n                var rightValue = evalExpr(expr.segs[1], data, owner);\\n\\n                /* eslint-disable eqeqeq */\\n                switch (expr.operator) {\\n                    case 37:\\n                        value = leftValue % rightValue;\\n                        break;\\n                    case 43:\\n                        value = leftValue + rightValue;\\n                        break;\\n                    case 45:\\n                        value = leftValue - rightValue;\\n                        break;\\n                    case 42:\\n                        value = leftValue * rightValue;\\n                        break;\\n                    case 47:\\n                        value = leftValue / rightValue;\\n                        break;\\n                    case 60:\\n                        value = leftValue < rightValue;\\n                        break;\\n                    case 62:\\n                        value = leftValue > rightValue;\\n                        break;\\n                    case 76:\\n                        value = leftValue && rightValue;\\n                        break;\\n                    case 94:\\n                        value = leftValue != rightValue;\\n                        break;\\n                    case 121:\\n                        value = leftValue <= rightValue;\\n                        break;\\n                    case 122:\\n                        value = leftValue == rightValue;\\n                        break;\\n                    case 123:\\n                        value = leftValue >= rightValue;\\n                        break;\\n                    case 155:\\n                        value = leftValue !== rightValue;\\n                        break;\\n                    case 183:\\n                        value = leftValue === rightValue;\\n                        break;\\n                    case 248:\\n                        value = leftValue || rightValue;\\n                        break;\\n                }\\n                /* eslint-enable eqeqeq */\\n                break;\\n\\n            case ExprType.TERTIARY:\\n                value = evalExpr(\\n                    expr.segs[evalExpr(expr.segs[0], data, owner) ? 1 : 2],\\n                    data,\\n                    owner\\n                );\\n                break;\\n\\n            case ExprType.ACCESSOR:\\n                value = data.get(expr);\\n                break;\\n\\n            case ExprType.INTERP:\\n                value = evalExpr(expr.expr, data, owner);\\n\\n                if (owner) {\\n                    for (var i = 0, l = expr.filters.length; i < l; i++) {\\n                        var filter = expr.filters[i];\\n                        var filterName = filter.name.paths[0].value;\\n\\n                        if (owner.filters[filterName]) {\\n                            value = owner.filters[filterName].apply(\\n                                owner,\\n                                [value].concat(evalArgs(filter.args, data, owner))\\n                            );\\n                        }\\n                        else if (DEFAULT_FILTERS[filterName]) {\\n                            value = DEFAULT_FILTERS[filterName](\\n                                value,\\n                                filter.args[0] ? filter.args[0].value : ''\\n                            );\\n                        }\\n                    }\\n                }\\n\\n                if (value == null) {\\n                    value = '';\\n                }\\n\\n                break;\\n\\n            /* eslint-disable no-redeclare */\\n            case ExprType.TEXT:\\n                var buf = '';\\n                for (var i = 0, l = expr.segs.length; i < l; i++) {\\n                    var seg = expr.segs[i];\\n                    buf += seg.value || evalExpr(seg, data, owner);\\n                }\\n                return buf;\\n        }\\n\\n        dataCache.set(data, expr, value);\\n    }\\n\\n    return value;\\n}\\n\\n// exports = module.exports = evalExpr;\\n\\n\\n/**\\n * @file 为函数调用计算参数数组的值\\n * @author errorrik(errorrik@gmail.com)\\n */\\n\\n\\n// var evalExpr = require('../runtime/eval-expr');\\n\\n/**\\n * 为函数调用计算参数数组的值\\n *\\n * @param {Array} args 参数表达式列表\\n * @param {Data} data 数据环境\\n * @param {Component} owner 组件环境\\n * @return {Array}\\n */\\nfunction evalArgs(args, data, owner) {\\n    var result = [];\\n    for (var i = 0; i < args.length; i++) {\\n        result.push(evalExpr(args[i], data, owner));\\n    }\\n\\n    return result;\\n}\\n\\n// exports = module.exports = evalArgs;\\n\\n\\n/**\\n * @file 数据缓存管理器\\n * @author errorrik(errorrik@gmail.com)\\n */\\n\\n\\n\\nvar dataCacheSource = {};\\nvar dataCacheClearly = 1;\\n\\n/**\\n * 数据缓存管理器\\n *\\n * @const\\n * @type {Object}\\n */\\nvar dataCache = {\\n    clear: function () {\\n        if (!dataCacheClearly) {\\n            dataCacheClearly = 1;\\n            dataCacheSource = {};\\n        }\\n    },\\n\\n    set: function (data, expr, value) {\\n        if (expr.raw) {\\n            dataCacheClearly = 0;\\n            (dataCacheSource[data.id] = dataCacheSource[data.id] || {})[expr.raw] = value;\\n        }\\n    },\\n\\n    get: function (data, expr) {\\n        if (expr.raw && dataCacheSource[data.id]) {\\n            return dataCacheSource[data.id][expr.raw];\\n        }\\n    }\\n};\\n\\n\\n// exports = module.exports = dataCache;\\n\\n\\n/**\\n * @file 比较变更表达式与目标表达式之间的关系\\n * @author errorrik(errorrik@gmail.com)\\n */\\n\\n// var ExprType = require('../parser/expr-type');\\n// var evalExpr = require('./eval-expr');\\n// var each = require('../util/each');\\n\\n/**\\n * 判断变更表达式与多个表达式之间的关系，0为完全没关系，1为有关系\\n *\\n * @inner\\n * @param {Object} changeExpr 目标表达式\\n * @param {Array} exprs 多个源表达式\\n * @param {Data} data 表达式所属数据环境\\n * @return {number}\\n */\\nfunction changeExprCompareExprs(changeExpr, exprs, data) {\\n    for (var i = 0, l = exprs.length; i < l; i++) {\\n        if (changeExprCompare(changeExpr, exprs[i], data)) {\\n            return 1;\\n        }\\n    }\\n\\n    return 0;\\n}\\n\\n/**\\n * 比较变更表达式与目标表达式之间的关系，用于视图更新判断\\n * 视图更新需要根据其关系，做出相应的更新行为\\n *\\n * 0: 完全没关系\\n * 1: 变更表达式是目标表达式的母项(如a与a.b) 或 表示需要完全变化\\n * 2: 变更表达式是目标表达式相等\\n * >2: 变更表达式是目标表达式的子项，如a.b.c与a.b\\n *\\n * @param {Object} changeExpr 变更表达式\\n * @param {Object} expr 要比较的目标表达式\\n * @param {Data} data 表达式所属数据环境\\n * @return {number}\\n */\\nfunction changeExprCompare(changeExpr, expr, data) {\\n    switch (expr.type) {\\n        case ExprType.ACCESSOR:\\n            var paths = expr.paths;\\n            var len = paths.length;\\n            var changePaths = changeExpr.paths;\\n            var changeLen = changePaths.length;\\n\\n            var result = 1;\\n            for (var i = 0; i < len; i++) {\\n                var pathExpr = paths[i];\\n\\n                if (pathExpr.type === ExprType.ACCESSOR\\n                    && changeExprCompare(changeExpr, pathExpr, data)\\n                ) {\\n                    return 1;\\n                }\\n\\n                if (result && i < changeLen\\n                    /* eslint-disable eqeqeq */\\n                    && (pathExpr.value || evalExpr(pathExpr, data))\\n                        != (changePaths[i].value || evalExpr(changePaths[i], data))\\n                    /* eslint-enable eqeqeq */\\n                ) {\\n                    result = 0;\\n                }\\n            }\\n\\n            if (result) {\\n                result = Math.max(1, changeLen - len + 2);\\n            }\\n            return result;\\n\\n        case ExprType.UNARY:\\n            return changeExprCompare(changeExpr, expr.expr, data) ? 1 : 0;\\n\\n\\n        case ExprType.TEXT:\\n        case ExprType.BINARY:\\n        case ExprType.TERTIARY:\\n            return changeExprCompareExprs(changeExpr, expr.segs, data);\\n\\n        case ExprType.INTERP:\\n            if (!changeExprCompare(changeExpr, expr.expr, data)) {\\n                var filterResult;\\n                each(expr.filters, function (filter) {\\n                    filterResult = changeExprCompareExprs(changeExpr, filter.args, data);\\n                    return !filterResult;\\n                });\\n\\n                return filterResult ? 1 : 0;\\n            }\\n\\n            return 1;\\n    }\\n\\n    return 0;\\n}\\n\\n// exports = module.exports = changeExprCompare;\\n\\n\\n/**\\n * @file 数据变更类型枚举\\n * @author errorrik(errorrik@gmail.com)\\n */\\n\\n/**\\n * 数据变更类型枚举\\n *\\n * @const\\n * @type {Object}\\n */\\nvar DataChangeType = {\\n    SET: 1,\\n    SPLICE: 2\\n};\\n\\n// exports = module.exports = DataChangeType;\\n\\n\\n/**\\n * @file 生命周期类\\n * @author errorrik(errorrik@gmail.com)\\n */\\n\\nfunction lifeCycleOwnIs(name) {\\n    return this[name];\\n}\\n\\n/* eslint-disable fecs-valid-var-jsdoc */\\n/**\\n * 节点生命周期信息\\n *\\n * @inner\\n * @type {Object}\\n */\\nvar LifeCycle = {\\n    start: {},\\n\\n    compiled: {\\n        is: lifeCycleOwnIs,\\n        compiled: true\\n    },\\n\\n    inited: {\\n        is: lifeCycleOwnIs,\\n        compiled: true,\\n        inited: true\\n    },\\n\\n    painting: {\\n        is: lifeCycleOwnIs,\\n        compiled: true,\\n        inited: true,\\n        painting: true\\n    },\\n\\n    created: {\\n        is: lifeCycleOwnIs,\\n        compiled: true,\\n        inited: true,\\n        created: true\\n    },\\n\\n    attached: {\\n        is: lifeCycleOwnIs,\\n        compiled: true,\\n        inited: true,\\n        created: true,\\n        attached: true\\n    },\\n\\n    leaving: {\\n        is: lifeCycleOwnIs,\\n        compiled: true,\\n        inited: true,\\n        created: true,\\n        attached: true,\\n        leaving: true\\n    },\\n\\n    detached: {\\n        is: lifeCycleOwnIs,\\n        compiled: true,\\n        inited: true,\\n        created: true,\\n        detached: true\\n    },\\n\\n    disposed: {\\n        is: lifeCycleOwnIs,\\n        disposed: true\\n    }\\n};\\n/* eslint-enable fecs-valid-var-jsdoc */\\n\\n\\n// exports = module.exports = LifeCycle;\\n\\n\\n/**\\n * @file 节点类型\\n * @author errorrik(errorrik@gmail.com)\\n */\\n\\n/**\\n * 节点类型\\n *\\n * @const\\n * @type {Object}\\n */\\nvar NodeType = {\\n    TEXT: 1,\\n    IF: 2,\\n    FOR: 3,\\n    ELEM: 4,\\n    CMPT: 5,\\n    SLOT: 6,\\n    TPL: 7\\n};\\n\\n// exports = module.exports = NodeType;\\n\\n\\n/**\\n * @file 获取 ANode props 数组中相应 name 的项\\n * @author errorrik(errorrik@gmail.com)\\n */\\n\\n/**\\n * 获取 ANode props 数组中相应 name 的项\\n *\\n * @param {Object} aNode ANode对象\\n * @param {string} name name属性匹配串\\n * @return {Object}\\n */\\nfunction getANodeProp(aNode, name) {\\n    var index = aNode.hotspot.props[name];\\n    if (index != null) {\\n        return aNode.props[index];\\n    }\\n}\\n\\n// exports = module.exports = getANodeProp;\\n\\n\\n/**\\n * @file 获取属性处理对象\\n * @author errorrik(errorrik@gmail.com)\\n */\\n\\n// var contains = require('../util/contains');\\n// var empty = require('../util/empty');\\n// var svgTags = require('../browser/svg-tags');\\n// var evalExpr = require('../runtime/eval-expr');\\n// var getANodeProp = require('./get-a-node-prop');\\n// var NodeType = require('./node-type');\\n\\n\\n/**\\n * HTML 属性和 DOM 操作属性的对照表\\n *\\n * @inner\\n * @const\\n * @type {Object}\\n */\\nvar HTML_ATTR_PROP_MAP = {\\n    'readonly': 'readOnly',\\n    'cellpadding': 'cellPadding',\\n    'cellspacing': 'cellSpacing',\\n    'colspan': 'colSpan',\\n    'rowspan': 'rowSpan',\\n    'valign': 'vAlign',\\n    'usemap': 'useMap',\\n    'frameborder': 'frameBorder',\\n    'for': 'htmlFor'\\n};\\n\\n/**\\n * 默认的元素的属性设置的变换方法\\n *\\n * @inner\\n * @type {Object}\\n */\\nvar defaultElementPropHandler = {\\n    prop: function (el, value, name, element) {\\n        var propName = HTML_ATTR_PROP_MAP[name] || name;\\n\\n        // input 的 type 是个特殊属性，其实也应该用 setAttribute\\n        // 但是 type 不应该运行时动态改变，否则会有兼容性问题\\n        // 所以这里直接就不管了\\n        if (propName in el) {\\n            el[propName] = value == null ? '' : value;\\n        }\\n        else {\\n            el.setAttribute(name, value);\\n        }\\n\\n        // attribute 绑定的是 text，所以不会出现 null 的情况，这里无需处理\\n        // 换句话来说，san 是做不到 attribute 时有时无的\\n        // if (value == null) {\\n        //     el.removeAttribute(name);\\n        // }\\n    },\\n\\n    output: function (element, bindInfo, data) {\\n        data.set(bindInfo.expr, element.el[bindInfo.name], {\\n            target: {\\n                id: element.id,\\n                prop: bindInfo.name\\n            }\\n        });\\n    }\\n};\\n\\nvar svgPropHandler = {\\n    prop: function (el, value, name) {\\n        el.setAttribute(name, value);\\n    }\\n};\\n\\nvar boolPropHandler = {\\n    prop: function (el, value, name, element, prop) {\\n        var propName = HTML_ATTR_PROP_MAP[name] || name;\\n        el[propName] = !!(prop && prop.raw === ''\\n            || value && value !== 'false' && value !== '0');\\n    }\\n};\\n\\n/* eslint-disable fecs-properties-quote */\\n/**\\n * 默认的属性设置变换方法\\n *\\n * @inner\\n * @type {Object}\\n */\\nvar defaultElementPropHandlers = {\\n    style: {\\n        prop: function (el, value) {\\n            el.style.cssText = value;\\n        }\\n    },\\n\\n    'class': { // eslint-disable-line\\n        prop: function (el, value) {\\n            el.className = value;\\n        }\\n    },\\n\\n    slot: {\\n        prop: empty\\n    },\\n\\n    readonly: boolPropHandler,\\n    disabled: boolPropHandler,\\n    autofocus: boolPropHandler,\\n    required: boolPropHandler,\\n    draggable: boolPropHandler\\n};\\n/* eslint-enable fecs-properties-quote */\\n\\nvar analInputChecker = {\\n    checkbox: contains,\\n    radio: function (a, b) {\\n        return a === b;\\n    }\\n};\\n\\nfunction analInputCheckedState(element, value, oper) {\\n    var bindValue = getANodeProp(element.aNode, 'value');\\n    var bindType = getANodeProp(element.aNode, 'type');\\n\\n    if (bindValue && bindType) {\\n        var type = evalExpr(bindType.expr, element.scope, element.owner);\\n\\n        if (analInputChecker[type]) {\\n            var bindChecked = getANodeProp(element.aNode, 'checked');\\n            if (!bindChecked.hintExpr) {\\n                bindChecked.hintExpr = bindValue.expr;\\n            }\\n\\n            return !!analInputChecker[type](\\n                value,\\n                evalExpr(bindValue.expr, element.scope, element.owner)\\n            );\\n        }\\n    }\\n}\\n\\nvar elementPropHandlers = {\\n    input: {\\n        multiple: boolPropHandler,\\n        checked: {\\n            prop: function (el, value, name, element) {\\n                var state = analInputCheckedState(element, value);\\n\\n                boolPropHandler.prop(\\n                    el,\\n                    state != null ? state : value,\\n                    'checked',\\n                    element\\n                );\\n            },\\n\\n            output: function (element, bindInfo, data) {\\n                var el = element.el;\\n                var bindValue = getANodeProp(element.aNode, 'value');\\n                var bindType = getANodeProp(element.aNode, 'type') || {};\\n\\n                if (bindValue && bindType) {\\n                    switch (bindType.raw) {\\n                        case 'checkbox':\\n                            data[el.checked ? 'push' : 'remove'](bindInfo.expr, el.value);\\n                            return;\\n\\n                        case 'radio':\\n                            el.checked && data.set(bindInfo.expr, el.value, {\\n                                target: {\\n                                    id: element.id,\\n                                    prop: bindInfo.name\\n                                }\\n                            });\\n                            return;\\n                    }\\n                }\\n\\n                defaultElementPropHandler.output(element, bindInfo, data);\\n            }\\n        }\\n    },\\n\\n    option: {\\n        value: {\\n            prop: function (el, value, name, element) {\\n                defaultElementPropHandler.prop(el, value, name, element);\\n\\n                if (isOptionSelected(element, value)) {\\n                    el.selected = true;\\n                }\\n            }\\n        }\\n    },\\n\\n    select: {\\n        value: {\\n            prop: function (el, value) {\\n                el.value = value || '';\\n            },\\n\\n            output: defaultElementPropHandler.output\\n        }\\n    }\\n};\\n\\nfunction isOptionSelected(element, value) {\\n    var parentSelect = element.parent;\\n    while (parentSelect) {\\n        if (parentSelect.tagName === 'select') {\\n            break;\\n        }\\n\\n        parentSelect = parentSelect.parent;\\n    }\\n\\n\\n    if (parentSelect) {\\n        var selectValue = null;\\n        var prop;\\n        var expr;\\n\\n        if ((prop = getANodeProp(parentSelect.aNode, 'value'))\\n            && (expr = prop.expr)\\n        ) {\\n            selectValue = parentSelect.nodeType === NodeType.CMPT\\n                ? evalExpr(expr, parentSelect.data, parentSelect)\\n                : evalExpr(expr, parentSelect.scope, parentSelect.owner)\\n                || '';\\n        }\\n\\n        if (selectValue === value) {\\n            return 1;\\n        }\\n    }\\n}\\n\\n\\n/**\\n * 获取属性处理对象\\n *\\n * @param {string} tagName 元素tag\\n * @param {string} attrName 属性名\\n * @return {Object}\\n */\\nfunction getPropHandler(tagName, attrName) {\\n    if (svgTags[tagName]) {\\n        return svgPropHandler;\\n    }\\n\\n    var tagPropHandlers = elementPropHandlers[tagName];\\n    if (!tagPropHandlers) {\\n        tagPropHandlers = elementPropHandlers[tagName] = {};\\n    }\\n\\n    var propHandler = tagPropHandlers[attrName];\\n    if (!propHandler) {\\n        propHandler = defaultElementPropHandlers[attrName] || defaultElementPropHandler;\\n        tagPropHandlers[attrName] = propHandler;\\n    }\\n\\n    return propHandler;\\n}\\n\\n// exports = module.exports = getPropHandler;\\n\\n\\n/**\\n * @file 判断变更是否来源于元素\\n * @author errorrik(errorrik@gmail.com)\\n */\\n\\n/**\\n * 判断变更是否来源于元素，来源于元素时，视图更新需要阻断\\n *\\n * @param {Object} change 变更对象\\n * @param {Element} element 元素\\n * @param {string?} propName 属性名，可选。需要精确判断是否来源于此属性时传入\\n * @return {boolean}\\n */\\nfunction isDataChangeByElement(change, element, propName) {\\n    var changeTarget = change.option.target;\\n    return changeTarget && changeTarget.id === element.id\\n        && (!propName || changeTarget.prop === propName);\\n}\\n\\n// exports = module.exports = isDataChangeByElement;\\n\\n\\n/**\\n * @file 在对象上使用accessor表达式查找方法\\n * @author errorrik(errorrik@gmail.com)\\n */\\n\\n// var evalExpr = require('../runtime/eval-expr');\\n\\n/**\\n * 在对象上使用accessor表达式查找方法\\n *\\n * @param {Object} source 源对象\\n * @param {Object} nameExpr 表达式\\n * @param {Data} data 所属数据环境\\n * @return {Function}\\n */\\nfunction findMethod(source, nameExpr, data) {\\n    var method = source;\\n\\n    for (var i = 0; method != null && i < nameExpr.paths.length; i++) {\\n        method = method[evalExpr(nameExpr.paths[i], data)];\\n    }\\n\\n    return method;\\n}\\n\\n// exports = module.exports = findMethod;\\n\\n\\n/**\\n * @file 数据类\\n * @author errorrik(errorrik@gmail.com)\\n */\\n\\n// var ExprType = require('../parser/expr-type');\\n// var evalExpr = require('./eval-expr');\\n// var DataChangeType = require('./data-change-type');\\n// var createAccessor = require('../parser/create-accessor');\\n// var parseExpr = require('../parser/parse-expr');\\n// var guid = require('../util/guid');\\n// var dataCache = require('./data-cache');\\n\\n/**\\n * 数据类\\n *\\n * @class\\n * @param {Object?} data 初始数据\\n * @param {Model?} parent 父级数据容器\\n */\\nfunction Data(data, parent) {\\n    this.id = guid();\\n    this.parent = parent;\\n    this.raw = data || {};\\n    this.listeners = [];\\n}\\n\\n// #[begin] error\\n// 以下两个函数只在开发模式下可用，在生产模式下不存在\\n/**\\n * DataTypes 检测\\n */\\nData.prototype.checkDataTypes = function () {\\n    if (this.typeChecker) {\\n        this.typeChecker(this.raw);\\n    }\\n};\\n\\n/**\\n * 设置 type checker\\n *\\n * @param  {Function} typeChecker 类型校验器\\n */\\nData.prototype.setTypeChecker = function (typeChecker) {\\n    this.typeChecker = typeChecker;\\n};\\n\\n// #[end]\\n\\n/**\\n * 添加数据变更的事件监听器\\n *\\n * @param {Function} listener 监听函数\\n */\\nData.prototype.listen = function (listener) {\\n    if (typeof listener === 'function') {\\n        this.listeners.push(listener);\\n    }\\n};\\n\\n/**\\n * 移除数据变更的事件监听器\\n *\\n * @param {Function} listener 监听函数\\n */\\nData.prototype.unlisten = function (listener) {\\n    var len = this.listeners.length;\\n    while (len--) {\\n        if (!listener || this.listeners[len] === listener) {\\n            this.listeners.splice(len, 1);\\n        }\\n    }\\n};\\n\\n/**\\n * 触发数据变更\\n *\\n * @param {Object} change 变更信息对象\\n */\\nData.prototype.fire = function (change) {\\n    if (change.option.silent || change.option.silence || change.option.quiet) {\\n        return;\\n    }\\n\\n    for (var i = 0; i < this.listeners.length; i++) {\\n        this.listeners[i].call(this, change);\\n    }\\n};\\n\\n/**\\n * 获取数据项\\n *\\n * @param {string|Object?} expr 数据项路径\\n * @param {Data?} callee 当前数据获取的调用环境\\n * @return {*}\\n */\\nData.prototype.get = function (expr, callee) {\\n    var value = this.raw;\\n    if (!expr) {\\n        return value;\\n    }\\n\\n    expr = parseExpr(expr);\\n\\n    var paths = expr.paths;\\n    callee = callee || this;\\n\\n    value = value[paths[0].value];\\n\\n    if (value == null && this.parent) {\\n        value = this.parent.get(expr, callee);\\n    }\\n    else {\\n        for (var i = 1, l = paths.length; value != null && i < l; i++) {\\n            value = value[paths[i].value || evalExpr(paths[i], callee)];\\n        }\\n    }\\n\\n    return value;\\n};\\n\\n\\n/**\\n * 数据对象变更操作\\n *\\n * @inner\\n * @param {Object|Array} source 要变更的源数据\\n * @param {Array} exprPaths 属性路径\\n * @param {*} value 变更属性值\\n * @param {Data} data 对应的Data对象\\n * @return {*} 变更后的新数据\\n */\\nfunction immutableSet(source, exprPaths, value, data) {\\n    if (exprPaths.length === 0) {\\n        return value;\\n    }\\n\\n    var prop = evalExpr(exprPaths[0], data);\\n    var result;\\n\\n    if (source instanceof Array) {\\n        var index = +prop;\\n\\n        result = source.slice(0);\\n        result[isNaN(index) ? prop : index] = immutableSet(source[index], exprPaths.slice(1), value, data);\\n\\n        return result;\\n    }\\n    else if (typeof source === 'object') {\\n        result = {};\\n\\n        for (var key in source) {\\n            if (key !== prop) {\\n                result[key] = source[key];\\n            }\\n        }\\n\\n        result[prop] = immutableSet(source[prop] || {}, exprPaths.slice(1), value, data);\\n\\n        return result;\\n    }\\n\\n    return source;\\n}\\n\\n/**\\n * 设置数据项\\n *\\n * @param {string|Object} expr 数据项路径\\n * @param {*} value 数据值\\n * @param {Object=} option 设置参数\\n * @param {boolean} option.silent 静默设置，不触发变更事件\\n */\\nData.prototype.set = function (expr, value, option) {\\n    option = option || {};\\n\\n    // #[begin] error\\n    var exprRaw = expr;\\n    // #[end]\\n\\n    expr = parseExpr(expr);\\n\\n    // #[begin] error\\n    if (expr.type !== ExprType.ACCESSOR) {\\n        throw new Error('[SAN ERROR] Invalid Expression in Data set: ' + exprRaw);\\n    }\\n    // #[end]\\n\\n    if (this.get(expr) === value && !option.force) {\\n        return;\\n    }\\n\\n    dataCache.clear();\\n    this.raw = immutableSet(this.raw, expr.paths, value, this);\\n    this.fire({\\n        type: DataChangeType.SET,\\n        expr: expr,\\n        value: value,\\n        option: option\\n    });\\n\\n    // #[begin] error\\n    this.checkDataTypes();\\n    // #[end]\\n\\n};\\n\\n/**\\n * 合并更新数据项\\n *\\n * @param {string|Object} expr 数据项路径\\n * @param {Object} source 待合并的数据值\\n * @param {Object=} option 设置参数\\n * @param {boolean} option.silent 静默设置，不触发变更事件\\n */\\nData.prototype.merge = function (expr, source, option) {\\n    option = option || {};\\n\\n    // #[begin] error\\n    var exprRaw = expr;\\n    // #[end]\\n\\n    expr = parseExpr(expr);\\n\\n    // #[begin] error\\n    if (expr.type !== ExprType.ACCESSOR) {\\n        throw new Error('[SAN ERROR] Invalid Expression in Data merge: ' + exprRaw);\\n    }\\n\\n    if (typeof this.get(expr) !== 'object') {\\n        throw new Error('[SAN ERROR] Merge Expects a Target of Type \\\\'object\\\\'; got ' + typeof oldValue);\\n    }\\n\\n    if (typeof source !== 'object') {\\n        throw new Error('[SAN ERROR] Merge Expects a Source of Type \\\\'object\\\\'; got ' + typeof source);\\n    }\\n    // #[end]\\n\\n    for (var key in source) { // eslint-disable-line\\n        this.set(\\n            createAccessor(\\n                expr.paths.concat(\\n                    [\\n                        {\\n                            type: ExprType.STRING,\\n                            value: key\\n                        }\\n                    ]\\n                )\\n            ),\\n            source[key],\\n            option\\n        );\\n    }\\n};\\n\\n/**\\n * 基于更新函数更新数据项\\n *\\n * @param {string|Object} expr 数据项路径\\n * @param {Function} fn 数据处理函数\\n * @param {Object=} option 设置参数\\n * @param {boolean} option.silent 静默设置，不触发变更事件\\n */\\nData.prototype.apply = function (expr, fn, option) {\\n    // #[begin] error\\n    var exprRaw = expr;\\n    // #[end]\\n\\n    expr = parseExpr(expr);\\n\\n    // #[begin] error\\n    if (expr.type !== ExprType.ACCESSOR) {\\n        throw new Error('[SAN ERROR] Invalid Expression in Data apply: ' + exprRaw);\\n    }\\n    // #[end]\\n\\n    var oldValue = this.get(expr);\\n\\n    // #[begin] error\\n    if (typeof fn !== 'function') {\\n        throw new Error(\\n            '[SAN ERROR] Invalid Argument\\\\'s Type in Data apply: '\\n            + 'Expected Function but got ' + typeof fn\\n        );\\n    }\\n    // #[end]\\n\\n    this.set(expr, fn(oldValue), option);\\n};\\n\\n/**\\n * 数组数据项splice操作\\n *\\n * @param {string|Object} expr 数据项路径\\n * @param {Array} args splice 接受的参数列表，数组项与Array.prototype.splice的参数一致\\n * @param {Object=} option 设置参数\\n * @param {boolean} option.silent 静默设置，不触发变更事件\\n * @return {Array} 新数组\\n */\\nData.prototype.splice = function (expr, args, option) {\\n    option = option || {};\\n    // #[begin] error\\n    var exprRaw = expr;\\n    // #[end]\\n\\n    expr = parseExpr(expr);\\n\\n    // #[begin] error\\n    if (expr.type !== ExprType.ACCESSOR) {\\n        throw new Error('[SAN ERROR] Invalid Expression in Data splice: ' + exprRaw);\\n    }\\n    // #[end]\\n\\n    var target = this.get(expr);\\n    var returnValue = [];\\n\\n    if (target instanceof Array) {\\n        var index = args[0];\\n        if (index < 0 || index > target.length) {\\n            return;\\n        }\\n\\n        var newArray = target.slice(0);\\n        returnValue = newArray.splice.apply(newArray, args);\\n        dataCache.clear();\\n        this.raw = immutableSet(this.raw, expr.paths, newArray, this);\\n\\n        this.fire({\\n            expr: expr,\\n            type: DataChangeType.SPLICE,\\n            index: index,\\n            deleteCount: returnValue.length,\\n            value: returnValue,\\n            insertions: args.slice(2),\\n            option: option\\n        });\\n    }\\n\\n    // #[begin] error\\n    this.checkDataTypes();\\n    // #[end]\\n\\n    return returnValue;\\n};\\n\\n/**\\n * 数组数据项push操作\\n *\\n * @param {string|Object} expr 数据项路径\\n * @param {*} item 要push的值\\n * @param {Object=} option 设置参数\\n * @param {boolean} option.silent 静默设置，不触发变更事件\\n * @return {number} 新数组的length属性\\n */\\nData.prototype.push = function (expr, item, option) {\\n    var target = this.get(expr);\\n\\n    if (target instanceof Array) {\\n        this.splice(expr, [target.length, 0, item], option);\\n        return target.length + 1;\\n    }\\n};\\n\\n/**\\n * 数组数据项pop操作\\n *\\n * @param {string|Object} expr 数据项路径\\n * @param {Object=} option 设置参数\\n * @param {boolean} option.silent 静默设置，不触发变更事件\\n * @return {*}\\n */\\nData.prototype.pop = function (expr, option) {\\n    var target = this.get(expr);\\n\\n    if (target instanceof Array) {\\n        var len = target.length;\\n        if (len) {\\n            return this.splice(expr, [len - 1, 1], option)[0];\\n        }\\n    }\\n};\\n\\n/**\\n * 数组数据项shift操作\\n *\\n * @param {string|Object} expr 数据项路径\\n * @param {Object=} option 设置参数\\n * @param {boolean} option.silent 静默设置，不触发变更事件\\n * @return {*}\\n */\\nData.prototype.shift = function (expr, option) {\\n    return this.splice(expr, [0, 1], option)[0];\\n};\\n\\n/**\\n * 数组数据项unshift操作\\n *\\n * @param {string|Object} expr 数据项路径\\n * @param {*} item 要unshift的值\\n * @param {Object=} option 设置参数\\n * @param {boolean} option.silent 静默设置，不触发变更事件\\n * @return {number} 新数组的length属性\\n */\\nData.prototype.unshift = function (expr, item, option) {\\n    var target = this.get(expr);\\n\\n    if (target instanceof Array) {\\n        this.splice(expr, [0, 0, item], option);\\n        return target.length + 1;\\n    }\\n};\\n\\n/**\\n * 数组数据项移除操作\\n *\\n * @param {string|Object} expr 数据项路径\\n * @param {number} index 要移除项的索引\\n * @param {Object=} option 设置参数\\n * @param {boolean} option.silent 静默设置，不触发变更事件\\n */\\nData.prototype.removeAt = function (expr, index, option) {\\n    this.splice(expr, [index, 1], option);\\n};\\n\\n/**\\n * 数组数据项移除操作\\n *\\n * @param {string|Object} expr 数据项路径\\n * @param {*} value 要移除的项\\n * @param {Object=} option 设置参数\\n * @param {boolean} option.silent 静默设置，不触发变更事件\\n */\\nData.prototype.remove = function (expr, value, option) {\\n    var target = this.get(expr);\\n\\n    if (target instanceof Array) {\\n        var len = target.length;\\n        while (len--) {\\n            if (target[len] === value) {\\n                this.splice(expr, [len, 1], option);\\n                break;\\n            }\\n        }\\n    }\\n};\\n\\n// exports = module.exports = Data;\\n\\n\\n/**\\n * @file 声明式事件的监听函数\\n * @author errorrik(errorrik@gmail.com)\\n */\\n\\n\\n// var evalArgs = require('../runtime/eval-args');\\n// var findMethod = require('../runtime/find-method');\\n// var Data = require('../runtime/data');\\n\\n/**\\n * 声明式事件的监听函数\\n *\\n * @param {Object} eventBind 绑定信息对象\\n * @param {boolean} isComponentEvent 是否组件自定义事件\\n * @param {Data} data 数据环境\\n * @param {Event} e 事件对象\\n */\\nfunction eventDeclarationListener(eventBind, isComponentEvent, data, e) {\\n    var method = findMethod(this, eventBind.expr.name, data);\\n\\n    if (typeof method === 'function') {\\n        var scope = new Data(\\n            {$event: isComponentEvent ? e : e || window.event},\\n            data\\n        );\\n        method.apply(this, evalArgs(eventBind.expr.args, scope, this));\\n    }\\n}\\n\\n// exports = module.exports = eventDeclarationListener;\\n\\n\\n/**\\n * @file 自闭合标签表\\n * @author errorrik(errorrik@gmail.com)\\n */\\n\\n// var splitStr2Obj = require('../util/split-str-2-obj');\\n\\n/**\\n * 自闭合标签列表\\n *\\n * @type {Object}\\n */\\nvar hotTags = splitStr2Obj('div,span,input,button,textarea,form,label,dl,dt,dd,ul,ol,li,a,b,u,h1,h2,h3,h4,h5,h6');\\n\\n// exports = module.exports = hotTags;\\n\\n\\n/**\\n * @file 是否浏览器环境\\n * @author errorrik(errorrik@gmail.com)\\n */\\n\\nvar isBrowser = typeof window !== 'undefined';\\n\\n// exports = module.exports = isBrowser;\\n\\n\\n/**\\n * @file insertBefore 方法的兼容性封装\\n * @author errorrik(errorrik@gmail.com)\\n */\\n\\n/**\\n * insertBefore 方法的兼容性封装\\n *\\n * @param {HTMLNode} targetEl 要插入的节点\\n * @param {HTMLElement} parentEl 父元素\\n * @param {HTMLElement?} beforeEl 在此元素之前插入\\n */\\nfunction insertBefore(targetEl, parentEl, beforeEl) {\\n    if (parentEl) {\\n        if (beforeEl) {\\n            parentEl.insertBefore(targetEl, beforeEl);\\n        }\\n        else {\\n            parentEl.appendChild(targetEl);\\n        }\\n    }\\n}\\n\\n// exports = module.exports = insertBefore;\\n\\n\\n/**\\n * @file 判断元素是否不允许设置HTML\\n * @author errorrik(errorrik@gmail.com)\\n */\\n\\n// some html elements cannot set innerHTML in old ie\\n// see: https://msdn.microsoft.com/en-us/library/ms533897(VS.85).aspx\\n\\n/**\\n * 判断元素是否不允许设置HTML\\n *\\n * @param {HTMLElement} el 要判断的元素\\n * @return {boolean}\\n */\\nfunction noSetHTML(el) {\\n    return /^(col|colgroup|frameset|style|table|tbody|tfoot|thead|tr|select)$/i.test(el.tagName);\\n}\\n\\n// exports = module.exports = noSetHTML;\\n\\n\\n/**\\n * @file  获取节点 stump 的 comment\\n * @author errorrik(errorrik@gmail.com)\\n */\\n\\n// var noSetHTML = require('../browser/no-set-html');\\n\\n// #[begin] error\\n/**\\n * 获取节点 stump 的 comment\\n *\\n * @param {HTMLElement} el HTML元素\\n */\\nfunction warnSetHTML(el) {\\n    // dont warn if not in browser runtime\\n    if (!(typeof window !== 'undefined' && typeof navigator !== 'undefined' && window.document)) {\\n        return;\\n    }\\n\\n    // some html elements cannot set innerHTML in old ie\\n    // see: https://msdn.microsoft.com/en-us/library/ms533897(VS.85).aspx\\n    if (noSetHTML(el)) {\\n        var message = '[SAN WARNING] set html for element \\\"' + el.tagName\\n            + '\\\" may cause an error in old IE';\\n        /* eslint-disable no-console */\\n        if (typeof console === 'object' && console.warn) {\\n            console.warn(message);\\n        }\\n        else {\\n            throw new Error(message);\\n        }\\n        /* eslint-enable no-console */\\n    }\\n}\\n// #[end]\\n\\n// exports = module.exports = warnSetHTML;\\n\\n\\n/**\\n * @file 判断是否结束桩\\n * @author errorrik(errorrik@gmail.com)\\n */\\n\\n// #[begin] reverse\\n/**\\n * 判断是否结束桩\\n *\\n * @param {HTMLElement|HTMLComment} target 要判断的元素\\n * @param {string} type 桩类型\\n * @return {boolean}\\n */\\nfunction isEndStump(target, type) {\\n    return target.nodeType === 8 && target.data === '/s-' + type;\\n}\\n// #[end]\\n\\n// exports = module.exports = isEndStump;\\n\\n\\n/**\\n * @file 获取节点在组件树中的路径\\n * @author errorrik(errorrik@gmail.com)\\n */\\n\\n\\n// var NodeType = require('./node-type');\\n\\n// #[begin] reverse\\n/**\\n * 获取节点在组件树中的路径\\n *\\n * @param {Node} node 节点对象\\n * @return {Array}\\n */\\nfunction getNodePath(node) {\\n    var nodePaths = [];\\n    var nodeParent = node;\\n    while (nodeParent) {\\n        switch (nodeParent.nodeType) {\\n            case NodeType.ELEM:\\n                nodePaths.unshift(nodeParent.tagName);\\n                break;\\n\\n            case NodeType.IF:\\n                nodePaths.unshift('if');\\n                break;\\n\\n            case NodeType.FOR:\\n                nodePaths.unshift('for[' + nodeParent.anode.directives['for'].raw + ']'); // eslint-disable-line dot-notation\\n                break;\\n\\n            case NodeType.SLOT:\\n                nodePaths.unshift('slot[' + (nodeParent.name || 'default') + ']');\\n                break;\\n\\n            case NodeType.TPL:\\n                nodePaths.unshift('template');\\n                break;\\n\\n            case NodeType.CMPT:\\n                nodePaths.unshift('component[' + (nodeParent.subTag || 'root') + ']');\\n                break;\\n\\n            case NodeType.TEXT:\\n                nodePaths.unshift('text');\\n                break;\\n        }\\n\\n        nodeParent = nodeParent.parent;\\n    }\\n\\n    return nodePaths;\\n}\\n// #[end]\\n\\n// exports = module.exports = getNodePath;\\n\\n\\n/**\\n * @file text 节点类\\n * @author errorrik(errorrik@gmail.com)\\n */\\n\\n// var isBrowser = require('../browser/is-browser');\\n// var removeEl = require('../browser/remove-el');\\n// var insertBefore = require('../browser/insert-before');\\n// var changeExprCompare = require('../runtime/change-expr-compare');\\n// var evalExpr = require('../runtime/eval-expr');\\n// var NodeType = require('./node-type');\\n// var warnSetHTML = require('./warn-set-html');\\n// var isEndStump = require('./is-end-stump');\\n// var getNodePath = require('./get-node-path');\\n\\n\\n/**\\n * text 节点类\\n *\\n * @param {Object} aNode 抽象节点\\n * @param {Component} owner 所属组件环境\\n * @param {Model=} scope 所属数据环境\\n * @param {Node} parent 父亲节点\\n * @param {DOMChildrenWalker?} reverseWalker 子元素遍历对象\\n */\\nfunction TextNode(aNode, owner, scope, parent, reverseWalker) {\\n    this.aNode = aNode;\\n    this.owner = owner;\\n    this.scope = scope;\\n    this.parent = parent;\\n\\n    // #[begin] reverse\\n    if (reverseWalker) {\\n        var currentNode = reverseWalker.current;\\n        if (currentNode) {\\n            switch (currentNode.nodeType) {\\n                case 8:\\n                    if (currentNode.data === 's-text') {\\n                        this.sel = currentNode;\\n                        currentNode.data = this.id;\\n                        reverseWalker.goNext();\\n\\n                        while (1) { // eslint-disable-line\\n                            currentNode = reverseWalker.current;\\n                            if (!currentNode) {\\n                                throw new Error('[SAN REVERSE ERROR] Text end flag not found. \\\\nPaths: '\\n                                    + getNodePath(this).join(' > '));\\n                            }\\n\\n                            if (isEndStump(currentNode, 'text')) {\\n                                this.el = currentNode;\\n                                reverseWalker.goNext();\\n                                currentNode.data = this.id;\\n                                break;\\n                            }\\n\\n                            reverseWalker.goNext();\\n                        }\\n                    }\\n                    break;\\n\\n                case 3:\\n                    reverseWalker.goNext();\\n                    if (!this.aNode.textExpr.original) {\\n                        this.el = currentNode;\\n                    }\\n                    break;\\n            }\\n        }\\n        else {\\n            this.el = document.createTextNode('');\\n            insertBefore(this.el, reverseWalker.target, reverseWalker.current);\\n        }\\n    }\\n    // #[end]\\n}\\n\\nTextNode.prototype.nodeType = NodeType.TEXT;\\n\\n/**\\n * 将text attach到页面\\n *\\n * @param {HTMLElement} parentEl 要添加到的父元素\\n * @param {HTMLElement＝} beforeEl 要添加到哪个元素之前\\n */\\nTextNode.prototype.attach = function (parentEl, beforeEl) {\\n    this.content = evalExpr(this.aNode.textExpr, this.scope, this.owner);\\n\\n    if (this.aNode.textExpr.original) {\\n        this.sel = document.createComment(this.id);\\n        insertBefore(this.sel, parentEl, beforeEl);\\n\\n        this.el = document.createComment(this.id);\\n        insertBefore(this.el, parentEl, beforeEl);\\n\\n        var tempFlag = document.createElement('script');\\n        parentEl.insertBefore(tempFlag, this.el);\\n        tempFlag.insertAdjacentHTML('beforebegin', this.content);\\n        parentEl.removeChild(tempFlag);\\n    }\\n    else {\\n        this.el = document.createTextNode(this.content);\\n        insertBefore(this.el, parentEl, beforeEl);\\n    }\\n};\\n\\n/**\\n * 销毁 text 节点\\n */\\nTextNode.prototype.dispose = function () {\\n    this._prev = null;\\n    this.el = null;\\n    this.sel = null;\\n};\\n\\nvar textUpdateProp = isBrowser\\n    && (typeof document.createTextNode('').textContent === 'string'\\n        ? 'textContent'\\n        : 'data');\\n\\n/**\\n * 更新 text 节点的视图\\n *\\n * @param {Array} changes 数据变化信息\\n */\\nTextNode.prototype._update = function (changes) {\\n    if (this.aNode.textExpr.value) {\\n        return;\\n    }\\n\\n    var len = changes ? changes.length : 0;\\n    while (len--) {\\n        if (changeExprCompare(changes[len].expr, this.aNode.textExpr, this.scope)) {\\n            var text = evalExpr(this.aNode.textExpr, this.scope, this.owner);\\n\\n            if (text !== this.content) {\\n                this.content = text;\\n\\n                if (this.aNode.textExpr.original) {\\n                    var startRemoveEl = this.sel.nextSibling;\\n                    var parentEl = this.el.parentNode;\\n\\n                    while (startRemoveEl !== this.el) {\\n                        var removeTarget = startRemoveEl;\\n                        startRemoveEl = startRemoveEl.nextSibling;\\n                        removeEl(removeTarget);\\n                    }\\n\\n                    // #[begin] error\\n                    warnSetHTML(parentEl);\\n                    // #[end]\\n\\n                    var tempFlag = document.createElement('script');\\n                    parentEl.insertBefore(tempFlag, this.el);\\n                    tempFlag.insertAdjacentHTML('beforebegin', text);\\n                    parentEl.removeChild(tempFlag);\\n                }\\n                else {\\n                    this.el[textUpdateProp] = text;\\n                }\\n            }\\n\\n            return;\\n        }\\n    }\\n};\\n\\n// exports = module.exports = TextNode;\\n\\n\\n/**\\n * @file 判断变更数组是否影响到数据引用摘要\\n * @author errorrik(errorrik@gmail.com)\\n */\\n\\n\\n/**\\n * 判断变更数组是否影响到数据引用摘要\\n *\\n * @param {Array} changes 变更数组\\n * @param {Object} dataRef 数据引用摘要\\n * @return {boolean}\\n */\\nfunction changesIsInDataRef(changes, dataRef) {\\n    for (var i = 0; i < changes.length; i++) {\\n        var change = changes[i];\\n\\n        if (!change.overview) {\\n            var paths = change.expr.paths;\\n            change.overview = paths[0].value;\\n\\n            if (paths.length > 1) {\\n                change.extOverview = paths[0].value + '.' + paths[1].value;\\n                change.wildOverview = paths[0].value + '.*';\\n            }\\n        }\\n\\n        if (dataRef[change.overview]\\n            || change.wildOverview && dataRef[change.wildOverview]\\n            || change.extOverview && dataRef[change.extOverview]\\n        ) {\\n            return true;\\n        }\\n    }\\n}\\n\\n// exports = module.exports = changesIsInDataRef;\\n\\n\\n/**\\n * @file 元素子节点遍历操作类\\n * @author errorrik(errorrik@gmail.com)\\n */\\n\\n// var removeEl = require('../browser/remove-el');\\n\\n// #[begin] reverse\\n/**\\n * 元素子节点遍历操作类\\n *\\n * @inner\\n * @class\\n * @param {HTMLElement} el 要遍历的元素\\n */\\nfunction DOMChildrenWalker(el) {\\n    this.raw = [];\\n    this.index = 0;\\n    this.target = el;\\n\\n    var child = el.firstChild;\\n    var next;\\n    while (child) {\\n        next = child.nextSibling;\\n\\n        switch (child.nodeType) {\\n            case 3:\\n                if (/^\\\\s*$/.test(child.data || child.textContent)) {\\n                    removeEl(child);\\n                }\\n                else {\\n                    this.raw.push(child);\\n                }\\n                break;\\n\\n            case 1:\\n            case 8:\\n                this.raw.push(child);\\n        }\\n\\n        child = next;\\n    }\\n\\n    this.current = this.raw[this.index];\\n    this.next = this.raw[this.index + 1];\\n}\\n\\n/**\\n * 往下走一个元素\\n */\\nDOMChildrenWalker.prototype.goNext = function () {\\n    this.current = this.raw[++this.index];\\n    this.next = this.raw[this.index + 1];\\n};\\n// #[end]\\n\\n// exports = module.exports = DOMChildrenWalker;\\n\\n\\n/**\\n * @file 元素节点类\\n * @author errorrik(errorrik@gmail.com)\\n */\\n\\n\\n// var each = require('../util/each');\\n// var guid = require('../util/guid');\\n// var removeEl = require('../browser/remove-el');\\n// var changeExprCompare = require('../runtime/change-expr-compare');\\n// var changesIsInDataRef = require('../runtime/changes-is-in-data-ref');\\n// var evalExpr = require('../runtime/eval-expr');\\n// var LifeCycle = require('./life-cycle');\\n// var NodeType = require('./node-type');\\n// var reverseElementChildren = require('./reverse-element-children');\\n// var isDataChangeByElement = require('./is-data-change-by-element');\\n// var elementUpdateChildren = require('./element-update-children');\\n// var elementOwnCreate = require('./element-own-create');\\n// var elementOwnAttach = require('./element-own-attach');\\n// var elementOwnDetach = require('./element-own-detach');\\n// var elementOwnDispose = require('./element-own-dispose');\\n// var elementOwnOnEl = require('./element-own-on-el');\\n// var elementOwnToPhase = require('./element-own-to-phase');\\n// var elementOwnAttached = require('./element-own-attached');\\n// var elementDispose = require('./element-dispose');\\n// var elementInitTagName = require('./element-init-tag-name');\\n// var handleProp = require('./handle-prop');\\n// var warnSetHTML = require('./warn-set-html');\\n// var getNodePath = require('./get-node-path');\\n\\n/**\\n * 元素节点类\\n *\\n * @param {Object} aNode 抽象节点\\n * @param {Component} owner 所属组件环境\\n * @param {Model=} scope 所属数据环境\\n * @param {Node} parent 父亲节点\\n * @param {DOMChildrenWalker?} reverseWalker 子元素遍历对象\\n */\\nfunction Element(aNode, owner, scope, parent, reverseWalker) {\\n    this.aNode = aNode;\\n    this.owner = owner;\\n    this.scope = scope;\\n    this.parent = parent;\\n\\n    this.lifeCycle = LifeCycle.start;\\n    this.children = [];\\n    this._elFns = [];\\n    this.parentComponent = parent.nodeType === NodeType.CMPT\\n        ? parent\\n        : parent.parentComponent;\\n\\n    this.id = guid();\\n\\n    elementInitTagName(this);\\n\\n    this._toPhase('inited');\\n\\n    // #[begin] reverse\\n    if (reverseWalker) {\\n        var currentNode = reverseWalker.current;\\n\\n        if (!currentNode) {\\n            throw new Error('[SAN REVERSE ERROR] Element not found. \\\\nPaths: '\\n                + getNodePath(this).join(' > '));\\n        }\\n\\n        if (currentNode.nodeType !== 1) {\\n            throw new Error('[SAN REVERSE ERROR] Element type not match, expect 1 but '\\n                + currentNode.nodeType + '.\\\\nPaths: '\\n                + getNodePath(this).join(' > '));\\n        }\\n\\n        if (currentNode.tagName.toLowerCase() !== this.tagName) {\\n            throw new Error('[SAN REVERSE ERROR] Element tagName not match, expect '\\n                + this.tagName + ' but meat ' + currentNode.tagName.toLowerCase() + '.\\\\nPaths: '\\n                + getNodePath(this).join(' > '));\\n        }\\n\\n        this.el = currentNode;\\n        reverseWalker.goNext();\\n\\n        reverseElementChildren(this);\\n\\n        this._attached();\\n    }\\n    // #[end]\\n}\\n\\n\\n\\nElement.prototype.nodeType = NodeType.ELEM;\\n\\n\\nElement.prototype.attach = elementOwnAttach;\\nElement.prototype.detach = elementOwnDetach;\\nElement.prototype.dispose = elementOwnDispose;\\nElement.prototype._create = elementOwnCreate;\\nElement.prototype._toPhase = elementOwnToPhase;\\nElement.prototype._onEl = elementOwnOnEl;\\n\\nElement.prototype._doneLeave = function () {\\n    if (this.leaveDispose) {\\n        if (!this.lifeCycle.disposed) {\\n            elementDispose(\\n                this,\\n                this.disposeNoDetach,\\n                this.disposeNoTransition\\n            );\\n        }\\n    }\\n    else if (this.lifeCycle.attached) {\\n        removeEl(this.el);\\n        this._toPhase('detached');\\n    }\\n};\\n\\n/**\\n * 视图更新\\n *\\n * @param {Array} changes 数据变化信息\\n */\\nElement.prototype._update = function (changes) {\\n    if (!changesIsInDataRef(changes, this.aNode.hotspot.data)) {\\n        return;\\n    }\\n\\n    var me = this;\\n\\n    var dynamicProps = this.aNode.hotspot.dynamicProps;\\n    for (var i = 0, l = dynamicProps.length; i < l; i++) {\\n        var prop = dynamicProps[i];\\n\\n        for (var j = 0, changeLen = changes.length; j < changeLen; j++) {\\n            var change = changes[j];\\n\\n            if (!isDataChangeByElement(change, this, prop.name)\\n                && (\\n                    changeExprCompare(change.expr, prop.expr, this.scope)\\n                    || prop.hintExpr && changeExprCompare(change.expr, prop.hintExpr, this.scope)\\n                )\\n            ) {\\n                handleProp(this, evalExpr(prop.expr, this.scope, this.owner), prop);\\n                break;\\n            }\\n        }\\n    }\\n\\n    var htmlDirective = this.aNode.directives.html;\\n    if (htmlDirective) {\\n        each(changes, function (change) {\\n            if (changeExprCompare(change.expr, htmlDirective.value, me.scope)) {\\n                // #[begin] error\\n                warnSetHTML(me.el);\\n                // #[end]\\n                me.el.innerHTML = evalExpr(htmlDirective.value, me.scope, me.owner);\\n                return false;\\n            }\\n        });\\n    }\\n    else {\\n        elementUpdateChildren(this, changes);\\n    }\\n};\\n\\n/**\\n * 执行完成attached状态的行为\\n */\\nElement.prototype._attached = elementOwnAttached;\\n\\n// exports = module.exports = Element;\\n\\n\\n/**\\n * @file 销毁节点，清空节点上的无用成员\\n * @author errorrik(errorrik@gmail.com)\\n */\\n\\n\\n/**\\n * 销毁节点\\n *\\n * @param {Object} node 节点对象\\n */\\nfunction nodeDispose(node) {\\n    node.el = null;\\n    node.sel = null;\\n    node.owner = null;\\n    node.scope = null;\\n    node.aNode = null;\\n    node.parent = null;\\n    node.parentComponent = null;\\n    node.children = null;\\n\\n    if (node._toPhase) {\\n        node._toPhase('disposed');\\n    }\\n\\n    if (node._ondisposed) {\\n        node._ondisposed();\\n    }\\n}\\n\\n// exports = module.exports = nodeDispose;\\n\\n\\n/**\\n * @file 通过组件反解创建节点的工厂方法\\n * @author errorrik(errorrik@gmail.com)\\n */\\n\\n// var hotTags = require('../browser/hot-tags');\\n// var NodeType = require('./node-type');\\n// var TextNode = require('./text-node');\\n// var Element = require('./element');\\n// var SlotNode = require('./slot-node');\\n// var ForNode = require('./for-node');\\n// var IfNode = require('./if-node');\\n// var TemplateNode = require('./template-node');\\n\\n// #[begin] reverse\\n/**\\n * 通过组件反解创建节点\\n *\\n * @param {ANode} aNode 抽象节点\\n * @param {DOMChildrenWalker} reverseWalker 子元素遍历对象\\n * @param {Node} parent 父亲节点\\n * @param {Model=} scope 所属数据环境\\n * @return {Node}\\n */\\nfunction createReverseNode(aNode, reverseWalker, parent, scope) {\\n    var parentIsComponent = parent.nodeType === NodeType.CMPT;\\n    var owner = parentIsComponent ? parent : (parent.childOwner || parent.owner);\\n    scope = scope || (parentIsComponent ? parent.data : (parent.childScope || parent.scope));\\n\\n    if (aNode.textExpr) {\\n        return new TextNode(aNode, owner, scope, parent, reverseWalker);\\n    }\\n\\n    if (aNode.directives['if']) { // eslint-disable-line dot-notation\\n        return new IfNode(aNode, owner, scope, parent, reverseWalker);\\n    }\\n\\n    if (aNode.directives['for']) { // eslint-disable-line dot-notation\\n        return new ForNode(aNode, owner, scope, parent, reverseWalker);\\n    }\\n\\n    if (hotTags[aNode.tagName]) {\\n        return new Element(aNode, owner, scope, parent, reverseWalker);\\n    }\\n\\n    switch (aNode.tagName) {\\n        case 'slot':\\n            return new SlotNode(aNode, owner, scope, parent, reverseWalker);\\n\\n        case 'template':\\n            return new TemplateNode(aNode, owner, scope, parent, reverseWalker);\\n\\n        default:\\n            var ComponentType = owner.getComponentType(aNode);\\n            if (ComponentType) {\\n                return new ComponentType({\\n                    aNode: aNode,\\n                    owner: owner,\\n                    scope: scope,\\n                    parent: parent,\\n                    subTag: aNode.tagName,\\n                    reverseWalker: reverseWalker\\n                });\\n            }\\n    }\\n\\n    return new Element(aNode, owner, scope, parent, reverseWalker);\\n}\\n// #[end]\\n\\n// exports = module.exports = createReverseNode;\\n\\n\\n/**\\n * @file 销毁释放元素的子元素\\n * @author errorrik(errorrik@gmail.com)\\n */\\n\\n/**\\n * 销毁释放元素的子元素\\n *\\n * @param {Object} element 元素节点\\n * @param {boolean=} noDetach 是否不要把节点从dom移除\\n * @param {boolean=} noTransition 是否不显示过渡动画效果\\n */\\nfunction elementDisposeChildren(element, noDetach, noTransition) {\\n    var children = element.children;\\n    var len = children && children.length;\\n    while (len--) {\\n        children[len].dispose(noDetach, noTransition);\\n    }\\n}\\n\\n// exports = module.exports = elementDisposeChildren;\\n\\n\\n/**\\n * @file 更新元素的子元素视图\\n * @author errorrik(errorrik@gmail.com)\\n */\\n\\n\\n/**\\n * 更新元素的子元素视图\\n *\\n * @param {Object} element 要更新的元素\\n * @param {Array} changes 数据变化信息\\n */\\nfunction elementUpdateChildren(element, changes) {\\n    for (var i = 0, l = element.children.length; i < l; i++) {\\n        element.children[i]._update(changes);\\n    }\\n}\\n\\n// exports = module.exports = elementUpdateChildren;\\n\\n\\n/**\\n * @file 使元素节点到达相应的生命周期\\n * @author errorrik(errorrik@gmail.com)\\n */\\n\\n\\n// var LifeCycle = require('./life-cycle');\\n\\n/**\\n * 使元素节点到达相应的生命周期\\n *\\n * @param {string} name 生命周期名称\\n */\\nfunction elementOwnToPhase(name) {\\n    this.lifeCycle = LifeCycle[name] || this.lifeCycle;\\n}\\n\\n// exports = module.exports = elementOwnToPhase;\\n\\n\\n/**\\n * @file 创建节点的工厂方法\\n * @author errorrik(errorrik@gmail.com)\\n */\\n\\n// var hotTags = require('../browser/hot-tags');\\n// var NodeType = require('./node-type');\\n// var TextNode = require('./text-node');\\n// var Element = require('./element');\\n// var SlotNode = require('./slot-node');\\n// var ForNode = require('./for-node');\\n// var IfNode = require('./if-node');\\n// var TemplateNode = require('./template-node');\\n\\n\\n/**\\n * 创建节点\\n *\\n * @param {ANode} aNode 抽象节点\\n * @param {Node} parent 父亲节点\\n * @param {Model=} scope 所属数据环境\\n * @return {Node}\\n */\\nfunction createNode(aNode, parent, scope) {\\n    var parentIsComponent = parent.nodeType === NodeType.CMPT;\\n    var owner = parentIsComponent ? parent : (parent.childOwner || parent.owner);\\n    scope = scope || (parentIsComponent ? parent.data : (parent.childScope || parent.scope));\\n\\n\\n    if (aNode.textExpr) {\\n        return new TextNode(aNode, owner, scope, parent);\\n    }\\n\\n    if (aNode.directives['if']) { // eslint-disable-line dot-notation\\n        return new IfNode(aNode, owner, scope, parent);\\n    }\\n\\n    if (aNode.directives['for']) { // eslint-disable-line dot-notation\\n        return new ForNode(aNode, owner, scope, parent);\\n    }\\n\\n    if (hotTags[aNode.tagName]) {\\n        return new Element(aNode, owner, scope, parent);\\n    }\\n\\n\\n\\n    switch (aNode.tagName) {\\n        case 'slot':\\n            return new SlotNode(aNode, owner, scope, parent);\\n\\n        case 'template':\\n            return new TemplateNode(aNode, owner, scope, parent);\\n\\n        default:\\n            var ComponentType = owner.getComponentType(aNode);\\n            if (ComponentType) {\\n                return new ComponentType({\\n                    aNode: aNode,\\n                    owner: owner,\\n                    scope: scope,\\n                    parent: parent,\\n                    subTag: aNode.tagName\\n                });\\n            }\\n    }\\n\\n    return new Element(aNode, owner, scope, parent);\\n}\\n\\n// exports = module.exports = createNode;\\n\\n\\n/**\\n * @file 生成子元素\\n * @author errorrik(errorrik@gmail.com)\\n */\\n\\n// var createNode = require('./create-node');\\n\\n/**\\n * 生成子元素\\n *\\n * @param {Element} element 元素\\n * @param {HTMLElement} parentEl 要添加到的父元素\\n * @param {HTMLElement＝} beforeEl 要添加到哪个元素之前\\n */\\nfunction genElementChildren(element, parentEl, beforeEl) {\\n    parentEl = parentEl || element.el;\\n\\n    var aNodeChildren = element.aNode.children;\\n    for (var i = 0; i < aNodeChildren.length; i++) {\\n        var child = createNode(aNodeChildren[i], element);\\n        element.children.push(child);\\n        child.attach(parentEl, beforeEl);\\n    }\\n}\\n\\n// exports = module.exports = genElementChildren;\\n\\n\\n/**\\n * @file 将没有 root 只有 children 的元素 attach 到页面\\n * @author errorrik(errorrik@gmail.com)\\n */\\n\\n\\n// var insertBefore = require('../browser/insert-before');\\n// var genElementChildren = require('./gen-element-children');\\n\\n\\n/**\\n * 将没有 root 只有 children 的元素 attach 到页面\\n * 主要用于 slot 和 template\\n *\\n * @param {HTMLElement} parentEl 要添加到的父元素\\n * @param {HTMLElement＝} beforeEl 要添加到哪个元素之前\\n */\\nfunction nodeOwnOnlyChildrenAttach(parentEl, beforeEl) {\\n    this.sel = document.createComment(this.id);\\n    insertBefore(this.sel, parentEl, beforeEl);\\n\\n    genElementChildren(this, parentEl, beforeEl);\\n\\n    this.el = document.createComment(this.id);\\n    insertBefore(this.el, parentEl, beforeEl);\\n\\n    this._toPhase('attached');\\n}\\n\\n// exports = module.exports = nodeOwnOnlyChildrenAttach;\\n\\n\\n/**\\n * @file slot 节点类\\n * @author errorrik(errorrik@gmail.com)\\n */\\n\\n// var each = require('../util/each');\\n// var guid = require('../util/guid');\\n// var createANode = require('../parser/create-a-node');\\n// var ExprType = require('../parser/expr-type');\\n// var createAccessor = require('../parser/create-accessor');\\n// var evalExpr = require('../runtime/eval-expr');\\n// var Data = require('../runtime/data');\\n// var DataChangeType = require('../runtime/data-change-type');\\n// var changeExprCompare = require('../runtime/change-expr-compare');\\n// var insertBefore = require('../browser/insert-before');\\n// var NodeType = require('./node-type');\\n// var LifeCycle = require('./life-cycle');\\n// var getANodeProp = require('./get-a-node-prop');\\n// var nodeDispose = require('./node-dispose');\\n// var createReverseNode = require('./create-reverse-node');\\n// var elementDisposeChildren = require('./element-dispose-children');\\n// var elementUpdateChildren = require('./element-update-children');\\n// var elementOwnToPhase = require('./element-own-to-phase');\\n// var nodeOwnOnlyChildrenAttach = require('./node-own-only-children-attach');\\n\\n\\n/**\\n * slot 节点类\\n *\\n * @param {Object} aNode 抽象节点\\n * @param {Component} owner 所属组件环境\\n * @param {Model=} scope 所属数据环境\\n * @param {Node} parent 父亲节点\\n * @param {DOMChildrenWalker?} reverseWalker 子元素遍历对象\\n */\\nfunction SlotNode(aNode, owner, scope, parent, reverseWalker) {\\n    var realANode = createANode();\\n    this.aNode = realANode;\\n    this.owner = owner;\\n    this.scope = scope;\\n    this.parent = parent;\\n    this.parentComponent = parent.nodeType === NodeType.CMPT\\n        ? parent\\n        : parent.parentComponent;\\n\\n    this.id = guid();\\n\\n    this.lifeCycle = LifeCycle.start;\\n    this.children = [];\\n\\n    // calc slot name\\n    this.nameBind = getANodeProp(aNode, 'name');\\n    if (this.nameBind) {\\n        this.isNamed = true;\\n        this.name = evalExpr(this.nameBind.expr, this.scope, this.owner);\\n    }\\n\\n    // calc aNode children\\n    var givenSlots = owner.givenSlots;\\n    var givenChildren;\\n    if (givenSlots) {\\n        givenChildren = this.isNamed ? givenSlots.named[this.name] : givenSlots.noname;\\n    }\\n\\n    if (givenChildren) {\\n        this.isInserted = true;\\n    }\\n\\n    realANode.children = givenChildren || aNode.children.slice(0);\\n\\n    var me = this;\\n\\n    // calc scoped slot vars\\n    realANode.vars = aNode.vars;\\n    var initData = {};\\n    each(realANode.vars, function (varItem) {\\n        me.isScoped = true;\\n        initData[varItem.name] = evalExpr(varItem.expr, scope, owner);\\n    });\\n\\n    // child owner & child scope\\n    if (this.isInserted) {\\n        this.childOwner = owner.owner;\\n        this.childScope = owner.scope;\\n    }\\n\\n    if (this.isScoped) {\\n        this.childScope = new Data(initData, this.childScope || this.scope);\\n    }\\n\\n\\n    owner.slotChildren.push(this);\\n\\n    // #[begin] reverse\\n    if (reverseWalker) {\\n\\n        this.sel = document.createComment(this.id);\\n        insertBefore(this.sel, reverseWalker.target, reverseWalker.current);\\n\\n        each(this.aNode.children, function (aNodeChild) {\\n            me.children.push(createReverseNode(aNodeChild, reverseWalker, me));\\n        });\\n\\n        this.el = document.createComment(this.id);\\n        insertBefore(this.el, reverseWalker.target, reverseWalker.current);\\n\\n        this._toPhase('attached');\\n    }\\n    // #[end]\\n}\\n\\nSlotNode.prototype.nodeType = NodeType.SLOT;\\n\\n/**\\n * 销毁释放 slot\\n *\\n * @param {boolean=} noDetach 是否不要把节点从dom移除\\n * @param {boolean=} noTransition 是否不显示过渡动画效果\\n */\\nSlotNode.prototype.dispose = function (noDetach, noTransition) {\\n    this.childOwner = null;\\n    this.childScope = null;\\n\\n    elementDisposeChildren(this, noDetach, noTransition);\\n    nodeDispose(this);\\n};\\n\\nSlotNode.prototype.attach = nodeOwnOnlyChildrenAttach;\\nSlotNode.prototype._toPhase = elementOwnToPhase;\\n\\n/**\\n * 视图更新函数\\n *\\n * @param {Array} changes 数据变化信息\\n * @param {boolean=} isFromOuter 变化信息是否来源于父组件之外的组件\\n * @return {boolean}\\n */\\nSlotNode.prototype._update = function (changes, isFromOuter) {\\n    var me = this;\\n\\n    if (this.nameBind && evalExpr(this.nameBind.expr, this.scope, this.owner) !== me.name) {\\n        this.owner._notifyNeedReload();\\n        return false;\\n    }\\n\\n    if (isFromOuter) {\\n        if (this.isInserted) {\\n            elementUpdateChildren(this, changes);\\n        }\\n    }\\n    else {\\n        if (this.isScoped) {\\n            each(this.aNode.vars, function (varItem) {\\n                me.childScope.set(varItem.name, evalExpr(varItem.expr, me.scope, me.owner));\\n            });\\n\\n\\n            var scopedChanges = [];\\n            each(changes, function (change) {\\n                if (!me.isInserted) {\\n                    scopedChanges.push(change);\\n                }\\n\\n                each(me.aNode.vars, function (varItem) {\\n                    var name = varItem.name;\\n                    var relation = changeExprCompare(change.expr, varItem.expr, me.scope);\\n\\n                    if (relation < 1) {\\n                        return;\\n                    }\\n\\n                    if (change.type !== DataChangeType.SPLICE) {\\n                        scopedChanges.push({\\n                            type: DataChangeType.SET,\\n                            expr: createAccessor([\\n                                {type: ExprType.STRING, value: name}\\n                            ]),\\n                            value: me.childScope.get(name),\\n                            option: change.option\\n                        });\\n                    }\\n                    else if (relation === 2) {\\n                        scopedChanges.push({\\n                            expr: createAccessor([\\n                                {type: ExprType.STRING, value: name}\\n                            ]),\\n                            type: DataChangeType.SPLICE,\\n                            index: change.index,\\n                            deleteCount: change.deleteCount,\\n                            value: change.value,\\n                            insertions: change.insertions,\\n                            option: change.option\\n                        });\\n                    }\\n                });\\n            });\\n\\n            elementUpdateChildren(this, scopedChanges);\\n        }\\n        else if (!this.isInserted) {\\n            elementUpdateChildren(this, changes);\\n        }\\n    }\\n};\\n\\n// exports = module.exports = SlotNode;\\n\\n\\n/**\\n * @file 复制指令集合对象\\n * @author errorrik(errorrik@gmail.com)\\n */\\n\\n/**\\n * 复制指令集合对象\\n *\\n * @param {Object} source 要复制的指令集合对象\\n * @param {Object=} excludes 需要排除的key集合\\n * @return {Object}\\n */\\nfunction cloneDirectives(source, excludes) {\\n    var result = {};\\n    excludes = excludes || {};\\n\\n    for (var key in source) {\\n        if (!excludes[key]) {\\n            result[key] = source[key];\\n        }\\n    }\\n\\n    return result;\\n}\\n\\n// exports = module.exports = cloneDirectives;\\n\\n\\n/**\\n * @file 简单执行销毁节点的行为\\n * @author errorrik(errorrik@gmail.com)\\n */\\n\\n// var removeEl = require('../browser/remove-el');\\n// var nodeDispose = require('./node-dispose');\\n// var elementDisposeChildren = require('./element-dispose-children');\\n\\n/**\\n * 简单执行销毁节点的行为\\n *\\n * @param {boolean=} noDetach 是否不要把节点从dom移除\\n */\\nfunction nodeOwnSimpleDispose(noDetach) {\\n    elementDisposeChildren(this, noDetach, 1);\\n\\n    if (!noDetach) {\\n        removeEl(this.el);\\n    }\\n\\n    nodeDispose(this);\\n}\\n\\n// exports = module.exports = nodeOwnSimpleDispose;\\n\\n\\n/**\\n * @file 创建节点对应的 stump comment 元素\\n * @author errorrik(errorrik@gmail.com)\\n */\\n\\n\\n\\n/**\\n * 创建节点对应的 stump comment 主元素\\n */\\nfunction nodeOwnCreateStump() {\\n    this.el = this.el || document.createComment(this.id);\\n}\\n\\n// exports = module.exports = nodeOwnCreateStump;\\n\\n\\n/**\\n * @file for 指令节点类\\n * @author errorrik(errorrik@gmail.com)\\n */\\n\\n// var inherits = require('../util/inherits');\\n// var each = require('../util/each');\\n// var guid = require('../util/guid');\\n// var createANode = require('../parser/create-a-node');\\n// var ExprType = require('../parser/expr-type');\\n// var parseExpr = require('../parser/parse-expr');\\n// var createAccessor = require('../parser/create-accessor');\\n// var cloneDirectives = require('../parser/clone-directives');\\n// var Data = require('../runtime/data');\\n// var DataChangeType = require('../runtime/data-change-type');\\n// var changeExprCompare = require('../runtime/change-expr-compare');\\n// var evalExpr = require('../runtime/eval-expr');\\n// var changesIsInDataRef = require('../runtime/changes-is-in-data-ref');\\n// var removeEl = require('../browser/remove-el');\\n// var insertBefore = require('../browser/insert-before');\\n// var LifeCycle = require('./life-cycle');\\n// var NodeType = require('./node-type');\\n// var createNode = require('./create-node');\\n// var createReverseNode = require('./create-reverse-node');\\n// var nodeOwnSimpleDispose = require('./node-own-simple-dispose');\\n// var nodeOwnCreateStump = require('./node-own-create-stump');\\n// var elementDisposeChildren = require('./element-dispose-children');\\n// var dataCache = require('../runtime/data-cache');\\n\\n\\n/**\\n * 循环项的数据容器类\\n *\\n * @inner\\n * @class\\n * @param {Object} forElement for元素对象\\n * @param {*} item 当前项的数据\\n * @param {number} index 当前项的索引\\n */\\nfunction ForItemData(forElement, item, index) {\\n    this.id = guid();\\n    this.parent = forElement.scope;\\n    this.raw = {};\\n    this.listeners = [];\\n\\n    this.directive = forElement.aNode.directives['for']; // eslint-disable-line dot-notation\\n    this.raw[this.directive.item.raw] = item;\\n    this.raw[this.directive.index.raw] = index;\\n}\\n\\n/**\\n * 将数据操作的表达式，转换成为对parent数据操作的表达式\\n * 主要是对item和index进行处理\\n *\\n * @param {Object} expr 表达式\\n * @return {Object}\\n */\\nForItemData.prototype.exprResolve = function (expr) {\\n    var directive = this.directive;\\n    var me = this;\\n\\n    function resolveItem(expr) {\\n        if (expr.type === ExprType.ACCESSOR\\n            && expr.paths[0].value === directive.item.paths[0].value\\n        ) {\\n            return createAccessor(\\n                directive.value.paths.concat(\\n                    {\\n                        type: ExprType.NUMBER,\\n                        value: me.get(directive.index)\\n                    },\\n                    expr.paths.slice(1)\\n                )\\n            );\\n        }\\n\\n        return expr;\\n    }\\n\\n    expr = resolveItem(expr);\\n\\n    var resolvedPaths = [];\\n\\n    each(expr.paths, function (item) {\\n        resolvedPaths.push(\\n            item.type === ExprType.ACCESSOR\\n                && item.paths[0].value === directive.index.paths[0].value\\n            ? {\\n                type: ExprType.NUMBER,\\n                value: me.get(directive.index)\\n            }\\n            : resolveItem(item)\\n        );\\n    });\\n\\n    return createAccessor(resolvedPaths);\\n};\\n\\n// 代理数据操作方法\\ninherits(ForItemData, Data);\\neach(\\n    ['set', 'remove', 'unshift', 'shift', 'push', 'pop', 'splice'],\\n    function (method) {\\n        ForItemData.prototype['_' + method] = Data.prototype[method];\\n        ForItemData.prototype[method] = function (expr) {\\n            expr = this.exprResolve(parseExpr(expr));\\n            dataCache.clear();\\n            this.parent[method].apply(\\n                this.parent,\\n                [expr].concat(Array.prototype.slice.call(arguments, 1))\\n            );\\n        };\\n    }\\n);\\n\\n/**\\n * 创建 for 指令元素的子元素\\n *\\n * @inner\\n * @param {ForDirective} forElement for 指令元素对象\\n * @param {*} item 子元素对应数据\\n * @param {number} index 子元素对应序号\\n * @return {Element}\\n */\\nfunction createForDirectiveChild(forElement, item, index) {\\n    var itemScope = new ForItemData(forElement, item, index);\\n    return createNode(forElement.itemANode, forElement, itemScope);\\n}\\n\\n/**\\n * for 指令节点类\\n *\\n * @param {Object} aNode 抽象节点\\n * @param {Component} owner 所属组件环境\\n * @param {Model=} scope 所属数据环境\\n * @param {Node} parent 父亲节点\\n * @param {DOMChildrenWalker?} reverseWalker 子元素遍历对象\\n */\\nfunction ForNode(aNode, owner, scope, parent, reverseWalker) {\\n    this.aNode = aNode;\\n    this.owner = owner;\\n    this.scope = scope;\\n    this.parent = parent;\\n    this.parentComponent = parent.nodeType === NodeType.CMPT\\n        ? parent\\n        : parent.parentComponent;\\n\\n    this.id = guid();\\n    this.children = [];\\n\\n    this.itemANode = createANode({\\n        children: aNode.children,\\n        props: aNode.props,\\n        events: aNode.events,\\n        tagName: aNode.tagName,\\n        vars: aNode.vars,\\n        hotspot: aNode.hotspot,\\n        directives: cloneDirectives(aNode.directives, {\\n            'for': 1\\n        })\\n    });\\n\\n    this.param = aNode.directives['for']; // eslint-disable-line dot-notation\\n\\n    // #[begin] reverse\\n    if (reverseWalker) {\\n        var me = this;\\n        each(\\n            evalExpr(this.param.value, this.scope, this.owner),\\n            function (item, i) {\\n                var itemScope = new ForItemData(me, item, i);\\n                var child = createReverseNode(me.itemANode, reverseWalker, me, itemScope);\\n                me.children.push(child);\\n            }\\n        );\\n\\n        this._create();\\n        insertBefore(this.el, reverseWalker.target, reverseWalker.current);\\n    }\\n    // #[end]\\n}\\n\\n\\nForNode.prototype.nodeType = NodeType.FOR;\\nForNode.prototype._create = nodeOwnCreateStump;\\nForNode.prototype.dispose = nodeOwnSimpleDispose;\\n\\n/**\\n * 将元素attach到页面的行为\\n *\\n * @param {HTMLElement} parentEl 要添加到的父元素\\n * @param {HTMLElement＝} beforeEl 要添加到哪个元素之前\\n */\\nForNode.prototype.attach = function (parentEl, beforeEl) {\\n    this._create();\\n    insertBefore(this.el, parentEl, beforeEl);\\n\\n    // paint list\\n    var el = this.el || parentEl.firstChild;\\n    var data = evalExpr(this.param.value, this.scope, this.owner);\\n    var len = data && data.length || 0;\\n    for (var i = 0; i < len; i++) {\\n        var child = createForDirectiveChild(this, data[i], i);\\n        this.children.push(child);\\n        child.attach(parentEl, el);\\n    }\\n};\\n\\n/**\\n * 将元素从页面上移除的行为\\n */\\nForNode.prototype.detach = function () {\\n    if (this.lifeCycle.attached) {\\n        elementDisposeChildren(this);\\n        this.children = [];\\n        removeEl(this.el);\\n        this.lifeCycle = LifeCycle.detached;\\n    }\\n};\\n\\n/* eslint-disable fecs-max-statements */\\n\\n/**\\n * 视图更新函数\\n *\\n * @param {Array} changes 数据变化信息\\n */\\nForNode.prototype._update = function (changes) {\\n\\n    var me = this;\\n    // 控制列表更新策略是否原样更新的变量\\n    var originalUpdate = this.aNode.directives.transition;\\n\\n\\n    var oldChildrenLen = this.children.length;\\n    var childrenChanges = new Array(oldChildrenLen);\\n\\n    function pushToChildrenChanges(change) {\\n        for (var i = 0, l = childrenChanges.length; i < l; i++) {\\n            (childrenChanges[i] = childrenChanges[i] || []).push(change);\\n        }\\n    }\\n\\n    var disposeChildren = [];\\n\\n\\n    // 判断列表是否父元素下唯一的元素\\n    // 如果是的话，可以做一些更新优化\\n    var parentEl = this.el.parentNode;\\n    var parentFirstChild = parentEl.firstChild;\\n    var parentLastChild = parentEl.lastChild;\\n    var isOnlyParentChild = oldChildrenLen > 0 // 有孩子时\\n            && parentFirstChild === this.children[0].el\\n            && (parentLastChild === this.el || parentLastChild === this.children[oldChildrenLen - 1].el)\\n        || oldChildrenLen === 0 // 无孩子时\\n            && parentFirstChild === this.el\\n            && parentLastChild === this.el;\\n\\n    // 控制列表是否整体更新的变量\\n    var isChildrenRebuild;\\n\\n    var newList = evalExpr(this.param.value, this.scope, this.owner);\\n    var newLen = newList && newList.length || 0;\\n\\n    /* eslint-disable no-redeclare */\\n    for (var cIndex = 0, cLen = changes.length; cIndex < cLen; cIndex++) {\\n        var change = changes[cIndex];\\n        var relation = changeExprCompare(change.expr, this.param.value, this.scope);\\n\\n        if (!relation) {\\n            // 无关时，直接传递给子元素更新，列表本身不需要动\\n            pushToChildrenChanges(change);\\n        }\\n        else if (relation > 2) {\\n            // 变更表达式是list绑定表达式的子项\\n            // 只需要对相应的子项进行更新\\n            var changePaths = change.expr.paths;\\n            var forLen = this.param.value.paths.length;\\n            var changeIndex = +evalExpr(changePaths[forLen], this.scope, this.owner);\\n\\n            if (isNaN(changeIndex)) {\\n                pushToChildrenChanges(change);\\n            }\\n            else {\\n                change = {\\n                    type: change.type,\\n                    expr: createAccessor(\\n                        this.param.item.paths.concat(changePaths.slice(forLen + 1))\\n                    ),\\n                    value: change.value,\\n                    index: change.index,\\n                    deleteCount: change.deleteCount,\\n                    insertions: change.insertions,\\n                    option: change.option\\n                };\\n\\n                (childrenChanges[changeIndex] = childrenChanges[changeIndex] || [])\\n                    .push(change);\\n\\n                if (this.children[changeIndex]) {\\n                    if (change.type === DataChangeType.SPLICE) {\\n                        this.children[changeIndex].scope._splice(\\n                            change.expr,\\n                            [].concat(change.index, change.deleteCount, change.insertions),\\n                            { silent: 1 }\\n                        );\\n                    }\\n                    else {\\n                        this.children[changeIndex].scope._set(\\n                            change.expr,\\n                            change.value,\\n                            { silent: 1 }\\n                        );\\n                    }\\n                }\\n            }\\n        }\\n        else if (change.type !== DataChangeType.SPLICE) {\\n            // 变更表达式是list绑定表达式本身或母项的重新设值\\n            // 此时需要更新整个列表\\n\\n\\n            // 老的比新的多的部分，标记需要dispose\\n            if (oldChildrenLen > newLen) {\\n                disposeChildren = disposeChildren.concat(this.children.slice(newLen));\\n\\n                childrenChanges = childrenChanges.slice(0, newLen);\\n                this.children = this.children.slice(0, newLen);\\n            }\\n\\n            // 整项变更\\n            for (var i = 0; i < newLen; i++) {\\n                (childrenChanges[i] = childrenChanges[i] || []).push({\\n                    type: DataChangeType.SET,\\n                    option: change.option,\\n                    expr: createAccessor(this.param.item.paths.slice(0)),\\n                    value: newList[i]\\n                });\\n\\n                // 对list更上级数据的直接设置\\n                if (relation < 2) {\\n                    childrenChanges[i].push(change);\\n                }\\n\\n                if (this.children[i]) {\\n                    this.children[i].scope._set(\\n                        this.param.item,\\n                        newList[i],\\n                        {silent: 1}\\n                    );\\n                }\\n                else {\\n                    this.children[i] = 0;\\n                }\\n            }\\n\\n            isChildrenRebuild = 1;\\n        }\\n        else if (relation === 2 && change.type === DataChangeType.SPLICE && !isChildrenRebuild) {\\n            // 变更表达式是list绑定表达式本身数组的splice操作\\n            // 此时需要删除部分项，创建部分项\\n            var changeStart = change.index;\\n            var deleteCount = change.deleteCount;\\n            var insertionsLen = change.insertions.length;\\n            var newCount = insertionsLen - deleteCount;\\n\\n            if (newCount) {\\n                var indexChange = {\\n                    type: DataChangeType.SET,\\n                    option: change.option,\\n                    expr: this.param.index\\n                };\\n\\n                for (var i = changeStart + deleteCount; i < this.children.length; i++) {\\n                    (childrenChanges[i] = childrenChanges[i] || []).push(indexChange);\\n                    this.children[i] && this.children[i].scope._set(\\n                        indexChange.expr,\\n                        i - deleteCount + insertionsLen,\\n                        {silent: 1}\\n                    );\\n                }\\n            }\\n\\n            var deleteLen = deleteCount;\\n            while (deleteLen--) {\\n                if (deleteLen < insertionsLen) {\\n                    var i = changeStart + deleteLen;\\n                    // update\\n                    (childrenChanges[i] = childrenChanges[i] || []).push({\\n                        type: DataChangeType.SET,\\n                        option: change.option,\\n                        expr: createAccessor(this.param.item.paths.slice(0)),\\n                        value: change.insertions[deleteLen]\\n                    });\\n                    if (this.children[i]) {\\n                        this.children[i].scope._set(\\n                            this.param.item,\\n                            change.insertions[deleteLen],\\n                            {silent: 1}\\n                        );\\n                    }\\n                }\\n            }\\n\\n            if (newCount < 0) {\\n                disposeChildren = disposeChildren.concat(this.children.splice(changeStart + insertionsLen, -newCount));\\n                childrenChanges.splice(changeStart + insertionsLen, -newCount);\\n            }\\n            else if (newCount > 0) {\\n                var spliceArgs = [changeStart + deleteCount, 0].concat(new Array(newCount));\\n                this.children.splice.apply(this.children, spliceArgs);\\n                childrenChanges.splice.apply(childrenChanges, spliceArgs);\\n            }\\n        }\\n    }\\n\\n    var newChildrenLen = this.children.length;\\n\\n    // 标记 length 是否发生变化\\n    if (newChildrenLen !== oldChildrenLen) {\\n        var lengthChange = {\\n            type: DataChangeType.SET,\\n            option: {},\\n            expr: createAccessor(\\n                this.param.value.paths.concat({\\n                    type: ExprType.STRING,\\n                    value: 'length'\\n                })\\n            )\\n        };\\n\\n        if (changesIsInDataRef([lengthChange], this.aNode.hotspot.data)) {\\n            pushToChildrenChanges(lengthChange);\\n        }\\n    }\\n\\n    // 清除应该干掉的 child\\n    this._doCreateAndUpdate = doCreateAndUpdate;\\n\\n    // 这里不用getTransition，getTransition和scope相关，for和forItem的scope是不同的\\n    // 所以getTransition结果本身也是不一致的。不如直接判断指令是否存在，如果存在就不进入暴力清除模式\\n    // var violentClear = isOnlyParentChild && newChildrenLen === 0 && !elementGetTransition(me);\\n    var violentClear = !originalUpdate && isOnlyParentChild && newChildrenLen === 0;\\n\\n    var disposedChildCount = 0;\\n    for (var i = 0; i < disposeChildren.length; i++) {\\n        var disposeChild = disposeChildren[i];\\n        if (disposeChild) {\\n            disposeChild._ondisposed = childDisposed;\\n            disposeChild.dispose(violentClear, violentClear);\\n        }\\n        else {\\n            childDisposed();\\n        }\\n    }\\n\\n    if (violentClear) {\\n        // cloneNode + replaceChild is faster\\n        // parentEl.innerHTML = '';\\n        var replaceNode = parentEl.cloneNode(false);\\n        parentEl.parentNode.replaceChild(replaceNode, parentEl);\\n        this.el = document.createComment(this.id);\\n        replaceNode.appendChild(this.el);\\n    }\\n\\n    if (disposeChildren.length === 0) {\\n        doCreateAndUpdate();\\n    }\\n\\n\\n    function childDisposed() {\\n        disposedChildCount++;\\n        if (disposedChildCount === disposeChildren.length\\n            && doCreateAndUpdate === me._doCreateAndUpdate\\n        ) {\\n            doCreateAndUpdate();\\n        }\\n    }\\n\\n    function doCreateAndUpdate() {\\n        me._doCreateAndUpdate = null;\\n        if (violentClear) {\\n            return;\\n        }\\n\\n\\n        var beforeEl = me.el;\\n\\n        // 对相应的项进行更新\\n        if (oldChildrenLen === 0 && isOnlyParentChild) {\\n            for (var i = 0; i < newChildrenLen; i++) {\\n                me.children[i] = createForDirectiveChild(me, newList[i], i);\\n                me.children[i].attach(parentEl, beforeEl);\\n            }\\n        }\\n        else {\\n            // 如果不attached则直接创建，如果存在则调用更新函数\\n            var j = -1;\\n            for (var i = 0; i < newChildrenLen; i++) {\\n                var child = me.children[i];\\n\\n                if (child) {\\n                    childrenChanges[i] && child._update(childrenChanges[i]);\\n                }\\n                else {\\n                    if (j < i) {\\n                        j = i + 1;\\n                        beforeEl = null;\\n                        while (j < newChildrenLen) {\\n                            var nextChild = me.children[j];\\n                            if (nextChild) {\\n                                beforeEl = nextChild.sel || nextChild.el;\\n                                break;\\n                            }\\n                            j++;\\n                        }\\n                    }\\n\\n                    me.children[i] = createForDirectiveChild(me, newList[i], i);\\n                    me.children[i].attach(parentEl, beforeEl || me.el);\\n                }\\n            }\\n        }\\n    }\\n};\\n\\n\\n// exports = module.exports = ForNode;\\n\\n\\n/**\\n * @file 清洗条件 aNode\\n * @author errorrik(errorrik@gmail.com)\\n */\\n\\n\\n// var createANode = require('../parser/create-a-node');\\n// var cloneDirectives = require('../parser/clone-directives');\\n\\n\\n/**\\n * 清洗条件 aNode，返回纯净无条件指令的 aNode\\n *\\n * @param {ANode} aNode 条件节点对象\\n * @return {ANode}\\n */\\nfunction rinseCondANode(aNode) {\\n    var clearANode = createANode({\\n        children: aNode.children,\\n        props: aNode.props,\\n        events: aNode.events,\\n        tagName: aNode.tagName,\\n        vars: aNode.vars,\\n        hotspot: aNode.hotspot,\\n        directives: cloneDirectives(aNode.directives, {\\n            'if': 1,\\n            'else': 1,\\n            'elif': 1\\n        })\\n    });\\n\\n    return clearANode;\\n}\\n\\n// exports = module.exports = rinseCondANode;\\n\\n\\n/**\\n * @file if 指令节点类\\n * @author errorrik(errorrik@gmail.com)\\n */\\n\\n// var each = require('../util/each');\\n// var guid = require('../util/guid');\\n// var insertBefore = require('../browser/insert-before');\\n// var evalExpr = require('../runtime/eval-expr');\\n// var NodeType = require('./node-type');\\n// var rinseCondANode = require('./rinse-cond-anode');\\n// var createNode = require('./create-node');\\n// var createReverseNode = require('./create-reverse-node');\\n// var nodeOwnCreateStump = require('./node-own-create-stump');\\n// var elementUpdateChildren = require('./element-update-children');\\n// var nodeOwnSimpleDispose = require('./node-own-simple-dispose');\\n\\n/**\\n * if 指令节点类\\n *\\n * @param {Object} aNode 抽象节点\\n * @param {Component} owner 所属组件环境\\n * @param {Model=} scope 所属数据环境\\n * @param {Node} parent 父亲节点\\n * @param {DOMChildrenWalker?} reverseWalker 子元素遍历对象\\n */\\nfunction IfNode(aNode, owner, scope, parent, reverseWalker) {\\n    this.aNode = aNode;\\n    this.owner = owner;\\n    this.scope = scope;\\n    this.parent = parent;\\n    this.parentComponent = parent.nodeType === NodeType.CMPT\\n        ? parent\\n        : parent.parentComponent;\\n\\n    this.id = guid();\\n    this.children = [];\\n\\n    this.cond = this.aNode.directives['if'].value; // eslint-disable-line dot-notation\\n\\n    // #[begin] reverse\\n    if (reverseWalker) {\\n        if (evalExpr(this.cond, this.scope, this.owner)) {\\n            this.elseIndex = -1;\\n            this.children[0] = createReverseNode(\\n                rinseCondANode(aNode),\\n                reverseWalker,\\n                this\\n            );\\n        }\\n        else {\\n            var me = this;\\n            each(aNode.elses, function (elseANode, index) {\\n                var elif = elseANode.directives.elif;\\n\\n                if (!elif || elif && evalExpr(elif.value, me.scope, me.owner)) {\\n                    me.elseIndex = index;\\n                    me.children[0] = createReverseNode(\\n                        rinseCondANode(elseANode),\\n                        reverseWalker,\\n                        me\\n                    );\\n                    return false;\\n                }\\n            });\\n        }\\n\\n        this._create();\\n        insertBefore(this.el, reverseWalker.target, reverseWalker.current);\\n    }\\n    // #[end]\\n}\\n\\nIfNode.prototype.nodeType = NodeType.IF;\\n\\nIfNode.prototype._create = nodeOwnCreateStump;\\nIfNode.prototype.dispose = nodeOwnSimpleDispose;\\n\\nIfNode.prototype.attach = function (parentEl, beforeEl) {\\n    var me = this;\\n    var elseIndex;\\n    var child;\\n\\n    if (evalExpr(this.cond, this.scope, this.owner)) {\\n        child = createNode(rinseCondANode(me.aNode), me);\\n        elseIndex = -1;\\n    }\\n    else {\\n        each(me.aNode.elses, function (elseANode, index) {\\n            var elif = elseANode.directives.elif;\\n\\n            if (!elif || elif && evalExpr(elif.value, me.scope, me.owner)) {\\n                child = createNode(rinseCondANode(elseANode), me);\\n                elseIndex = index;\\n                return false;\\n            }\\n        });\\n    }\\n\\n    if (child) {\\n        me.children[0] = child;\\n        child.attach(parentEl, beforeEl);\\n        me.elseIndex = elseIndex;\\n    }\\n\\n\\n    this._create();\\n    insertBefore(this.el, parentEl, beforeEl);\\n};\\n\\n\\n/**\\n * 视图更新函数\\n *\\n * @param {Array} changes 数据变化信息\\n */\\nIfNode.prototype._update = function (changes) {\\n    var me = this;\\n    var childANode = me.aNode;\\n    var elseIndex;\\n\\n    if (evalExpr(this.cond, this.scope, this.owner)) {\\n        elseIndex = -1;\\n    }\\n    else {\\n        each(me.aNode.elses, function (elseANode, index) {\\n            var elif = elseANode.directives.elif;\\n\\n            if (elif && evalExpr(elif.value, me.scope, me.owner) || !elif) {\\n                elseIndex = index;\\n                childANode = elseANode;\\n                return false;\\n            }\\n        });\\n    }\\n\\n    if (elseIndex === me.elseIndex) {\\n        elementUpdateChildren(me, changes);\\n    }\\n    else {\\n        var child = me.children[0];\\n        me.children = [];\\n        if (child) {\\n            child._ondisposed = newChild;\\n            child.dispose();\\n        }\\n        else {\\n            newChild();\\n        }\\n\\n        me.elseIndex = elseIndex;\\n    }\\n\\n    function newChild() {\\n        if (typeof elseIndex !== 'undefined') {\\n            var child = createNode(rinseCondANode(childANode), me);\\n            // var parentEl = getNodeStumpParent(me);\\n            child.attach(me.el.parentNode, me.el);\\n\\n            me.children[0] = child;\\n        }\\n    }\\n};\\n\\n// exports = module.exports = IfNode;\\n\\n\\n/**\\n * @file template 节点类\\n * @author errorrik(errorrik@gmail.com)\\n */\\n\\n// var each = require('../util/each');\\n// var guid = require('../util/guid');\\n// var insertBefore = require('../browser/insert-before');\\n// var NodeType = require('./node-type');\\n// var LifeCycle = require('./life-cycle');\\n// var nodeDispose = require('./node-dispose');\\n// var createReverseNode = require('./create-reverse-node');\\n// var elementDisposeChildren = require('./element-dispose-children');\\n// var elementOwnToPhase = require('./element-own-to-phase');\\n// var elementUpdateChildren = require('./element-update-children');\\n// var nodeOwnOnlyChildrenAttach = require('./node-own-only-children-attach');\\n\\n/**\\n * template 节点类\\n *\\n * @param {Object} aNode 抽象节点\\n * @param {Component} owner 所属组件环境\\n * @param {Model=} scope 所属数据环境\\n * @param {Node} parent 父亲节点\\n * @param {DOMChildrenWalker?} reverseWalker 子元素遍历对象\\n */\\nfunction TemplateNode(aNode, owner, scope, parent, reverseWalker) {\\n    this.aNode = aNode;\\n    this.owner = owner;\\n    this.scope = scope;\\n    this.parent = parent;\\n    this.parentComponent = parent.nodeType === NodeType.CMPT\\n        ? parent\\n        : parent.parentComponent;\\n\\n    this.id = guid();\\n    this.lifeCycle = LifeCycle.start;\\n    this.children = [];\\n\\n    // #[begin] reverse\\n    if (reverseWalker) {\\n        this.sel = document.createComment(this.id);\\n        insertBefore(this.sel, reverseWalker.target, reverseWalker.current);\\n\\n        var me = this;\\n        each(this.aNode.children, function (aNodeChild) {\\n            me.children.push(createReverseNode(aNodeChild, reverseWalker, me));\\n        });\\n\\n        this.el = document.createComment(this.id);\\n        insertBefore(this.el, reverseWalker.target, reverseWalker.current);\\n\\n        this._toPhase('attached');\\n    }\\n    // #[end]\\n}\\n\\n\\n\\nTemplateNode.prototype.nodeType = NodeType.TPL;\\n\\nTemplateNode.prototype.attach = nodeOwnOnlyChildrenAttach;\\n\\n/**\\n * 销毁释放\\n *\\n * @param {boolean=} noDetach 是否不要把节点从dom移除\\n * @param {boolean=} noTransition 是否不显示过渡动画效果\\n */\\nTemplateNode.prototype.dispose = function (noDetach, noTransition) {\\n    elementDisposeChildren(this, noDetach, noTransition);\\n    nodeDispose(this);\\n};\\n\\n\\nTemplateNode.prototype._toPhase = elementOwnToPhase;\\n\\n/**\\n * 视图更新函数\\n *\\n * @param {Array} changes 数据变化信息\\n */\\nTemplateNode.prototype._update = function (changes) {\\n    elementUpdateChildren(this, changes);\\n};\\n\\n// exports = module.exports = TemplateNode;\\n\\n\\n/**\\n * @file 对元素的子节点进行反解\\n * @author errorrik(errorrik@gmail.com)\\n */\\n\\n\\n// var each = require('../util/each');\\n// var DOMChildrenWalker = require('./dom-children-walker');\\n// var createReverseNode = require('./create-reverse-node');\\n\\n// #[begin] reverse\\n\\n/**\\n * 对元素的子节点进行反解\\n *\\n * @param {Object} element 元素\\n */\\nfunction reverseElementChildren(element) {\\n    var htmlDirective = element.aNode.directives.html;\\n\\n    if (!htmlDirective) {\\n        var reverseWalker = new DOMChildrenWalker(element.el);\\n\\n        each(element.aNode.children, function (aNodeChild) {\\n            element.children.push(createReverseNode(aNodeChild, reverseWalker, element));\\n        });\\n    }\\n}\\n// #[end]\\n\\n// exports = module.exports = reverseElementChildren;\\n\\n\\n/**\\n * @file 处理元素的属性操作\\n * @author errorrik(errorrik@gmail.com)\\n */\\n\\n// var getPropHandler = require('./get-prop-handler');\\n\\n/**\\n * 处理元素属性操作\\n *\\n * @param {Object} element 元素对象\\n * @param {*} value 属性值\\n * @param {Object} prop 属性信息对象\\n */\\nfunction handleProp(element, value, prop) {\\n    var name = prop.name;\\n    getPropHandler(element.tagName, name).prop(element.el, value, name, element, prop);\\n}\\n\\n// exports = module.exports = handleProp;\\n\\n\\n/**\\n * @file 创建节点对应的 HTMLElement 主元素\\n * @author errorrik(errorrik@gmail.com)\\n */\\n\\n\\n// var evalExpr = require('../runtime/eval-expr');\\n// var createEl = require('../browser/create-el');\\n// var handleProp = require('./handle-prop');\\n// var LifeCycle = require('./life-cycle');\\n// var NodeType = require('./node-type');\\n\\nvar emptyPropWhenCreate = {\\n    'class': 1,\\n    'style': 1,\\n    'id': 1\\n};\\n\\n/**\\n * 创建节点对应的 HTMLElement 主元素\\n */\\nfunction elementOwnCreate() {\\n    if (!this.lifeCycle.created) {\\n        this.lifeCycle = LifeCycle.painting;\\n\\n        var isComponent = this.nodeType === NodeType.CMPT;\\n        var sourceNode = this.aNode.hotspot.sourceNode;\\n        var props = this.aNode.props;\\n\\n        if (sourceNode) {\\n            this.el = sourceNode.cloneNode();\\n            props = this.aNode.hotspot.dynamicProps;\\n        }\\n        else {\\n            this.el = createEl(this.tagName);\\n        }\\n\\n        for (var i = 0, l = props.length; i < l; i++) {\\n            var prop = props[i];\\n            var value = isComponent\\n                ? evalExpr(prop.expr, this.data, this)\\n                : evalExpr(prop.expr, this.scope, this.owner);\\n\\n            if (value || !emptyPropWhenCreate[prop.name]) {\\n                handleProp(this, value, prop);\\n            }\\n        }\\n\\n        this._toPhase('created');\\n    }\\n}\\n\\n// exports = module.exports = elementOwnCreate;\\n\\n\\n/**\\n * @file 将元素attach到页面\\n * @author errorrik(errorrik@gmail.com)\\n */\\n\\n// var createNode = require('./create-node');\\n// var evalExpr = require('../runtime/eval-expr');\\n// var insertBefore = require('../browser/insert-before');\\n\\n/**\\n * 将元素attach到页面\\n *\\n * @param {Object} element 元素节点\\n * @param {HTMLElement} parentEl 要添加到的父元素\\n * @param {HTMLElement＝} beforeEl 要添加到哪个元素之前\\n */\\nfunction elementAttach(element, parentEl, beforeEl) {\\n    element._create();\\n    insertBefore(element.el, parentEl, beforeEl);\\n\\n    if (!element._contentReady) {\\n        var htmlDirective = element.aNode.directives.html;\\n\\n        if (htmlDirective) {\\n            element.el.innerHTML = evalExpr(htmlDirective.value, element.scope, element.owner);\\n        }\\n        else {\\n            var aNodeChildren = element.aNode.children;\\n            for (var i = 0; i < aNodeChildren.length; i++) {\\n                var child = createNode(aNodeChildren[i], element);\\n                element.children.push(child);\\n                child.attach(element.el);\\n            }\\n        }\\n\\n        element._contentReady = 1;\\n    }\\n}\\n\\n\\n// exports = module.exports = elementAttach;\\n\\n\\n/**\\n * @file 将元素attach到页面\\n * @author errorrik(errorrik@gmail.com)\\n */\\n\\n\\n// var elementAttach = require('./element-attach');\\n\\n/**\\n * 将元素attach到页面\\n *\\n * @param {HTMLElement} parentEl 要添加到的父元素\\n * @param {HTMLElement＝} beforeEl 要添加到哪个元素之前\\n */\\nfunction elementOwnAttach(parentEl, beforeEl) {\\n    if (!this.lifeCycle.attached) {\\n        elementAttach(this, parentEl, beforeEl);\\n        this._attached();\\n    }\\n}\\n\\n// exports = module.exports = elementOwnAttach;\\n\\n\\n/**\\n * @file 获取 element 的 transition 控制对象\\n * @author errorrik(errorrik@gmail.com)\\n */\\n\\n// var evalArgs = require('../runtime/eval-args');\\n// var findMethod = require('../runtime/find-method');\\n// var NodeType = require('./node-type');\\n\\n/**\\n * 获取 element 的 transition 控制对象\\n *\\n * @param {Object} element 元素\\n * @return {Object?}\\n */\\nfunction elementGetTransition(element) {\\n    var aNode = element.nodeType === NodeType.CMPT ? element.givenANode : element.aNode;\\n    var directive = aNode && aNode.directives.transition;\\n    var owner = element.owner;\\n\\n    var transition;\\n    if (directive && owner) {\\n        transition = findMethod(owner, directive.value.name);\\n\\n        if (typeof transition === 'function') {\\n            transition = transition.apply(\\n                owner,\\n                evalArgs(directive.value.args, element.scope, owner)\\n            );\\n        }\\n    }\\n\\n    return transition || element.transition;\\n}\\n\\n// exports = module.exports = elementGetTransition;\\n\\n\\n/**\\n * @file 元素节点执行leave行为\\n * @author errorrik(errorrik@gmail.com)\\n */\\n\\n// var elementGetTransition = require('./element-get-transition');\\n\\n\\n/**\\n * 元素节点执行leave行为\\n *\\n * @param {Object} element 元素\\n */\\nfunction elementLeave(element) {\\n    var lifeCycle = element.lifeCycle;\\n    if (lifeCycle.leaving) {\\n        return;\\n    }\\n\\n    if (element.disposeNoTransition) {\\n        element._doneLeave();\\n    }\\n    else {\\n        var transition = elementGetTransition(element);\\n\\n        if (transition && transition.leave) {\\n            element._toPhase('leaving');\\n            transition.leave(element.el, function () {\\n                element._doneLeave();\\n            });\\n        }\\n        else {\\n            element._doneLeave();\\n        }\\n    }\\n}\\n\\n// exports = module.exports = elementLeave;\\n\\n\\n/**\\n * @file 将元素从页面上移除\\n * @author errorrik(errorrik@gmail.com)\\n */\\n\\n// var elementLeave = require('./element-leave');\\n\\n/**\\n * 将元素从页面上移除\\n */\\nfunction elementOwnDetach() {\\n    elementLeave(this);\\n}\\n\\n\\n// exports = module.exports = elementOwnDetach;\\n\\n\\n/**\\n * @file 销毁释放元素\\n * @author errorrik(errorrik@gmail.com)\\n */\\n\\n// var elementLeave = require('./element-leave');\\n\\n/**\\n * 销毁释放元素\\n *\\n * @param {boolean=} noDetach 是否不要把节点从dom移除\\n * @param {boolean=} noTransition 是否不显示过渡动画效果\\n */\\nfunction elementOwnDispose(noDetach, noTransition) {\\n    this.leaveDispose = 1;\\n    this.disposeNoDetach = noDetach;\\n    this.disposeNoTransition = noTransition;\\n\\n    elementLeave(this);\\n}\\n\\n// exports = module.exports = elementOwnDispose;\\n\\n\\n/**\\n * @file 为元素的 el 绑定事件\\n * @author errorrik(errorrik@gmail.com)\\n */\\n\\n// var on = require('../browser/on');\\n\\n/**\\n * 为元素的 el 绑定事件\\n *\\n * @param {string} name 事件名\\n * @param {Function} listener 监听器\\n * @param {boolean} capture 是否是捕获阶段触发\\n */\\nfunction elementOwnOnEl(name, listener, capture) {\\n    if (typeof listener === 'function') {\\n        capture = !!capture;\\n        this._elFns.push([name, listener, capture]);\\n        on(this.el, name, listener, capture);\\n    }\\n}\\n\\n// exports = module.exports = elementOwnOnEl;\\n\\n\\n/**\\n * @file  事件绑定不存在的 warning\\n * @author varsha(wangshuonpu@gmail.com)\\n */\\n\\n// var each = require('../util/each');\\n\\n// #[begin] error\\n/**\\n * 事件绑定不存在的 warning\\n *\\n * @param {Object} eventBind 事件绑定对象\\n * @param {Component} owner 所属的组件对象\\n */\\nfunction warnEventListenMethod(eventBind, owner) {\\n    var valid = true;\\n    var method = owner;\\n    each(eventBind.expr.name.paths, function (path) {\\n        if (!path.value) {\\n            return false;\\n        }\\n\\n        method = method[path.value];\\n        valid = !!method;\\n        return valid;\\n    });\\n\\n    if (!valid) {\\n        var paths = [];\\n        each(eventBind.expr.name.paths, function (path) {\\n            paths.push(path.value);\\n        });\\n        var message = '[SAN WARNING] ' + eventBind.name + ' listen fail,\\\"' + paths.join('.') + '\\\" not exist';\\n\\n        /* eslint-disable no-console */\\n        if (typeof console === 'object' && console.warn) {\\n            console.warn(message);\\n        }\\n        else {\\n            throw new Error(message);\\n        }\\n        /* eslint-enable no-console */\\n    }\\n}\\n// #[end]\\n\\n// exports = module.exports = warnEventListenMethod;\\n\\n\\n/**\\n * @file 完成元素 attached 后的行为\\n * @author errorrik(errorrik@gmail.com)\\n */\\n\\n\\n// var bind = require('../util/bind');\\n// var empty = require('../util/empty');\\n// var isBrowser = require('../browser/is-browser');\\n// var trigger = require('../browser/trigger');\\n// var NodeType = require('./node-type');\\n// var elementGetTransition = require('./element-get-transition');\\n// var eventDeclarationListener = require('./event-declaration-listener');\\n// var getPropHandler = require('./get-prop-handler');\\n// var warnEventListenMethod = require('./warn-event-listen-method');\\n\\n/**\\n * 双绑输入框CompositionEnd事件监听函数\\n *\\n * @inner\\n */\\nfunction inputOnCompositionEnd() {\\n    if (!this.composing) {\\n        return;\\n    }\\n\\n    this.composing = 0;\\n\\n    trigger(this, 'input');\\n}\\n\\n/**\\n * 双绑输入框CompositionStart事件监听函数\\n *\\n * @inner\\n */\\nfunction inputOnCompositionStart() {\\n    this.composing = 1;\\n}\\n\\nfunction xPropOutputer(xProp, data) {\\n    getPropHandler(this.tagName, xProp.name).output(this, xProp, data);\\n}\\n\\nfunction inputXPropOutputer(element, xProp, data) {\\n    var outputer = bind(xPropOutputer, element, xProp, data);\\n    return function (e) {\\n        if (!this.composing) {\\n            outputer(e);\\n        }\\n    };\\n}\\n\\n/**\\n * 完成元素 attached 后的行为\\n *\\n * @param {Object} element 元素节点\\n */\\nfunction elementOwnAttached() {\\n    this._toPhase('created');\\n\\n    var isComponent = this.nodeType === NodeType.CMPT;\\n    var data = isComponent ? this.data : this.scope;\\n\\n    /* eslint-disable no-redeclare */\\n\\n    // 处理自身变化时双向绑定的逻辑\\n    var xProps = this.aNode.hotspot.xProps;\\n    for (var i = 0, l = xProps.length; i < l; i++) {\\n        var xProp = xProps[i];\\n\\n        switch (xProp.name) {\\n            case 'value':\\n                switch (this.tagName) {\\n                    case 'input':\\n                    case 'textarea':\\n                        if (isBrowser && window.CompositionEvent) {\\n                            this._onEl('change', inputOnCompositionEnd);\\n                            this._onEl('compositionstart', inputOnCompositionStart);\\n                            this._onEl('compositionend', inputOnCompositionEnd);\\n                        }\\n\\n                        this._onEl(\\n                            ('oninput' in this.el) ? 'input' : 'propertychange',\\n                            inputXPropOutputer(this, xProp, data)\\n                        );\\n\\n                        break;\\n\\n                    case 'select':\\n                        this._onEl('change', bind(xPropOutputer, this, xProp, data));\\n                        break;\\n                }\\n                break;\\n\\n            case 'checked':\\n                switch (this.tagName) {\\n                    case 'input':\\n                        switch (this.el.type) {\\n                            case 'checkbox':\\n                            case 'radio':\\n                                this._onEl('click', bind(xPropOutputer, this, xProp, data));\\n                        }\\n                }\\n                break;\\n        }\\n    }\\n\\n    // bind events\\n    var events = isComponent\\n        ? this.aNode.events.concat(this.nativeEvents)\\n        : this.aNode.events;\\n\\n    for (var i = 0, l = events.length; i < l; i++) {\\n        var eventBind = events[i];\\n        var owner = isComponent ? this : this.owner;\\n\\n        // 判断是否是nativeEvent，下面的warn方法和事件绑定都需要\\n        // 依此指定eventBind.expr.name位于owner还是owner.owner上\\n        if (eventBind.modifier.native) {\\n            owner = owner.owner;\\n            data = this.scope || owner.data;\\n        }\\n\\n        // #[begin] error\\n        warnEventListenMethod(eventBind, owner);\\n        // #[end]\\n\\n        this._onEl(\\n            eventBind.name,\\n            bind(\\n                eventDeclarationListener,\\n                owner,\\n                eventBind,\\n                0,\\n                data\\n            ),\\n            eventBind.modifier.capture\\n        );\\n    }\\n\\n    this._toPhase('attached');\\n\\n\\n    if (this._isInitFromEl) {\\n        this._isInitFromEl = false;\\n    }\\n    else {\\n        var transition = elementGetTransition(this);\\n        if (transition && transition.enter) {\\n            transition.enter(this.el, empty);\\n        }\\n    }\\n}\\n\\n// exports = module.exports = elementOwnAttached;\\n\\n\\n/**\\n * @file 销毁元素节点\\n * @author errorrik(errorrik@gmail.com)\\n */\\n\\n\\n// var un = require('../browser/un');\\n// var removeEl = require('../browser/remove-el');\\n// var elementDisposeChildren = require('./element-dispose-children');\\n// var nodeDispose = require('./node-dispose');\\n\\n/**\\n * 销毁元素节点\\n *\\n * @param {Object} element 要销毁的元素节点\\n * @param {Object=} options 销毁行为的参数\\n */\\nfunction elementDispose(element) {\\n    elementDisposeChildren(element, 1, 1);\\n\\n    // el 事件解绑\\n    var len = element._elFns.length;\\n    while (len--) {\\n        var fn = element._elFns[len];\\n        un(element.el, fn[0], fn[1], fn[2]);\\n    }\\n    element._elFns = null;\\n\\n\\n    // 如果没有parent，说明是一个root component，一定要从dom树中remove\\n    if (!element.disposeNoDetach || !element.parent) {\\n        removeEl(element.el);\\n    }\\n\\n    if (element._toPhase) {\\n        element._toPhase('detached');\\n    }\\n\\n    nodeDispose(element);\\n}\\n\\n\\n// exports = module.exports = elementDispose;\\n\\n\\n/**\\n * @file 初始化 element 节点的 tagName 处理\\n * @author errorrik(errorrik@gmail.com)\\n */\\n\\n// var ieOldThan9 = require('../browser/ie-old-than-9');\\n\\n/**\\n * 初始化 element 节点的 tagName 处理\\n *\\n * @param {Object} node 节点对象\\n */\\nfunction elementInitTagName(node) {\\n    node.tagName = node.tagName || node.aNode.tagName || 'div';\\n\\n    // #[begin] allua\\n    // ie8- 不支持innerHTML输出自定义标签\\n    if (ieOldThan9 && node.tagName.indexOf('-') > 0) {\\n        node.tagName = 'div';\\n    }\\n    // #[end]\\n}\\n\\n\\n// exports = module.exports = elementInitTagName;\\n\\n\\n/**\\n * @file 给 devtool 发通知消息\\n * @author errorrik(errorrik@gmail.com)\\n */\\n\\n// var isBrowser = require('../browser/is-browser');\\n\\n// #[begin] devtool\\nvar san4devtool;\\n\\n/**\\n * 给 devtool 发通知消息\\n *\\n * @param {string} name 消息名称\\n * @param {*} arg 消息参数\\n */\\nfunction emitDevtool(name, arg) {\\n    if (isBrowser && san4devtool && san4devtool.debug && window.__san_devtool__) {\\n        window.__san_devtool__.emit(name, arg);\\n    }\\n}\\n\\nemitDevtool.start = function (main) {\\n    san4devtool = main;\\n    emitDevtool('san', main);\\n};\\n// #[end]\\n\\n// exports = module.exports = emitDevtool;\\n\\n\\n/**\\n * @file 组件类\\n * @author errorrik(errorrik@gmail.com)\\n */\\n\\n// var bind = require('../util/bind');\\n// var each = require('../util/each');\\n// var guid = require('../util/guid');\\n// var extend = require('../util/extend');\\n// var nextTick = require('../util/next-tick');\\n// var emitDevtool = require('../util/emit-devtool');\\n// var ExprType = require('../parser/expr-type');\\n// var parseExpr = require('../parser/parse-expr');\\n// var createAccessor = require('../parser/create-accessor');\\n// var postProp = require('../parser/post-prop');\\n// var removeEl = require('../browser/remove-el');\\n// var Data = require('../runtime/data');\\n// var evalExpr = require('../runtime/eval-expr');\\n// var changeExprCompare = require('../runtime/change-expr-compare');\\n// var compileComponent = require('./compile-component');\\n// var componentPreheat = require('./component-preheat');\\n// var LifeCycle = require('./life-cycle');\\n// var getANodeProp = require('./get-a-node-prop');\\n// var isDataChangeByElement = require('./is-data-change-by-element');\\n// var eventDeclarationListener = require('./event-declaration-listener');\\n// var reverseElementChildren = require('./reverse-element-children');\\n// var camelComponentBinds = require('./camel-component-binds');\\n// var NodeType = require('./node-type');\\n// var elementInitTagName = require('./element-init-tag-name');\\n// var elementOwnAttached = require('./element-own-attached');\\n// var elementDispose = require('./element-dispose');\\n// var elementUpdateChildren = require('./element-update-children');\\n// var elementOwnOnEl = require('./element-own-on-el');\\n// var elementOwnCreate = require('./element-own-create');\\n// var elementOwnAttach = require('./element-own-attach');\\n// var elementOwnDetach = require('./element-own-detach');\\n// var elementOwnDispose = require('./element-own-dispose');\\n// var warnEventListenMethod = require('./warn-event-listen-method');\\n// var elementDisposeChildren = require('./element-dispose-children');\\n// var elementAttach = require('./element-attach');\\n// var handleProp = require('./handle-prop');\\n// var createDataTypesChecker = require('../util/create-data-types-checker');\\n\\n\\n\\n/**\\n * 组件类\\n *\\n * @class\\n * @param {Object} options 初始化参数\\n */\\nfunction Component(options) { // eslint-disable-line\\n    options = options || {};\\n\\n    this.lifeCycle = LifeCycle.start;\\n    this.children = [];\\n    this._elFns = [];\\n    this.listeners = {};\\n    this.slotChildren = [];\\n\\n    var clazz = this.constructor;\\n\\n    this.filters = this.filters || clazz.filters || {};\\n    this.computed = this.computed || clazz.computed || {};\\n    this.messages = this.messages || clazz.messages || {};\\n    this.subTag = options.subTag;\\n\\n    // compile\\n    compileComponent(clazz);\\n    componentPreheat(clazz);\\n\\n    var me = this;\\n    var protoANode = clazz.prototype.aNode;\\n\\n    me.givenANode = options.aNode;\\n    me.givenNamedSlotBinds = [];\\n    me.givenSlots = {\\n        named: {}\\n    };\\n\\n    this.owner = options.owner;\\n    this.scope = options.scope;\\n    this.el = options.el;\\n\\n    var parent = options.parent;\\n    if (parent) {\\n        this.parent = parent;\\n        this.parentComponent = parent.nodeType === NodeType.CMPT\\n            ? parent\\n            : parent && parent.parentComponent;\\n    }\\n\\n    this.id = guid();\\n\\n    // #[begin] reverse\\n    if (this.el) {\\n        var firstCommentNode = this.el.firstChild;\\n        if (firstCommentNode.nodeType === 3) {\\n            firstCommentNode = firstCommentNode.nextSibling;\\n        }\\n\\n        if (firstCommentNode && firstCommentNode.nodeType === 8) {\\n            var stumpMatch = firstCommentNode.data.match(/^\\\\s*s-data:([\\\\s\\\\S]+)?$/);\\n            if (stumpMatch) {\\n                var stumpText = stumpMatch[1];\\n\\n                // fill component data\\n                options.data = (new Function(\\n                    'return ' + stumpText.replace(/^[\\\\s\\\\n]*/, '')\\n                ))();\\n\\n                if (firstCommentNode.previousSibling) {\\n                    removeEl(firstCommentNode.previousSibling);\\n                }\\n                removeEl(firstCommentNode);\\n            }\\n        }\\n    }\\n    // #[end]\\n\\n    // native事件数组\\n    this.nativeEvents = [];\\n\\n    if (this.givenANode) {\\n        // 组件运行时传入的结构，做slot解析\\n        this._createGivenSlots();\\n\\n        each(this.givenANode.events, function (eventBind) {\\n            // 保存当前实例的native事件，下面创建aNode时候做合并\\n            if (eventBind.modifier.native) {\\n                me.nativeEvents.push(eventBind);\\n                return;\\n            }\\n\\n            // #[begin] error\\n            warnEventListenMethod(eventBind, options.owner);\\n            // #[end]\\n\\n            me.on(\\n                eventBind.name,\\n                bind(eventDeclarationListener, options.owner, eventBind, 1, options.scope),\\n                eventBind\\n            );\\n        });\\n\\n        this.tagName = protoANode.tagName || me.givenANode.tagName;\\n        this.binds = camelComponentBinds(this.givenANode.props);\\n    }\\n\\n    this._toPhase('compiled');\\n\\n    // init data\\n    this.data = new Data(\\n        extend(\\n            typeof this.initData === 'function' && this.initData() || {},\\n            options.data\\n        )\\n    );\\n\\n    elementInitTagName(this);\\n\\n    each(this.binds, function (bind) {\\n        postProp(bind);\\n\\n        if (me.scope) {\\n            var value = evalExpr(bind.expr, me.scope, me.owner);\\n            if (typeof value !== 'undefined') {\\n                // See: https://github.com/ecomfe/san/issues/191\\n                me.data.set(bind.name, value);\\n            }\\n        }\\n    });\\n\\n    // #[begin] error\\n    // 在初始化 + 数据绑定后，开始数据校验\\n    // NOTE: 只在开发版本中进行属性校验\\n    var dataTypes = this.dataTypes || clazz.dataTypes;\\n    if (dataTypes) {\\n        var dataTypeChecker = createDataTypesChecker(\\n            dataTypes,\\n            this.subTag || this.name || clazz.name\\n        );\\n        this.data.setTypeChecker(dataTypeChecker);\\n        this.data.checkDataTypes();\\n    }\\n    // #[end]\\n\\n    this.computedDeps = {};\\n    /* eslint-disable guard-for-in */\\n    for (var expr in this.computed) {\\n        if (!this.computedDeps[expr]) {\\n            this._calcComputed(expr);\\n        }\\n    }\\n    /* eslint-enable guard-for-in */\\n\\n    if (!this.dataChanger) {\\n        this.dataChanger = bind(this._dataChanger, this);\\n        this.data.listen(this.dataChanger);\\n    }\\n    this._toPhase('inited');\\n\\n    // #[begin] reverse\\n    if (this.el) {\\n        reverseElementChildren(this);\\n        this._attached();\\n    }\\n\\n    var walker = options.reverseWalker;\\n    if (walker) {\\n        var currentNode = walker.current;\\n        if (currentNode && currentNode.nodeType === 1) {\\n            this.el = currentNode;\\n            walker.goNext();\\n        }\\n\\n        reverseElementChildren(this);\\n\\n        this._attached();\\n    }\\n    // #[end]\\n}\\n\\n\\n\\nComponent.prototype.getComponentType = function (aNode) {\\n    return this.components[aNode.tagName];\\n};\\n\\n/**\\n * 初始化创建组件外部传入的插槽对象\\n *\\n * @protected\\n */\\nComponent.prototype._createGivenSlots = function () {\\n    var me = this;\\n    me.givenSlots.named = {};\\n\\n    // 组件运行时传入的结构，做slot解析\\n    me.givenANode && me.scope && each(me.givenANode.children, function (child) {\\n        var target;\\n\\n        var slotBind = !child.textExpr && getANodeProp(child, 'slot');\\n        if (slotBind) {\\n            !me.givenSlotInited && me.givenNamedSlotBinds.push(slotBind);\\n\\n            var slotName = evalExpr(slotBind.expr, me.scope, me.owner);\\n            target = me.givenSlots.named[slotName];\\n            if (!target) {\\n                target = me.givenSlots.named[slotName] = [];\\n            }\\n        }\\n        else if (!me.givenSlotInited) {\\n            target = me.givenSlots.noname;\\n            if (!target) {\\n                target = me.givenSlots.noname = [];\\n            }\\n        }\\n\\n        target && target.push(child);\\n    });\\n\\n    me.givenSlotInited = true;\\n};\\n\\n/**\\n * 类型标识\\n *\\n * @type {string}\\n */\\nComponent.prototype.nodeType = NodeType.CMPT;\\n\\n/**\\n * 在下一个更新周期运行函数\\n *\\n * @param {Function} fn 要运行的函数\\n */\\nComponent.prototype.nextTick = nextTick;\\n\\n/* eslint-disable operator-linebreak */\\n/**\\n * 使节点到达相应的生命周期\\n *\\n * @protected\\n * @param {string} name 生命周期名称\\n */\\nComponent.prototype._callHook =\\nComponent.prototype._toPhase = function (name) {\\n    if (!this.lifeCycle[name]) {\\n        this.lifeCycle = LifeCycle[name] || this.lifeCycle;\\n        if (typeof this[name] === 'function') {\\n            this[name]();\\n        }\\n\\n        // 通知devtool\\n        // #[begin] devtool\\n        emitDevtool('comp-' + name, this);\\n        // #[end]\\n    }\\n};\\n/* eslint-enable operator-linebreak */\\n\\n\\n/**\\n * 添加事件监听器\\n *\\n * @param {string} name 事件名\\n * @param {Function} listener 监听器\\n * @param {string?} declaration 声明式\\n */\\nComponent.prototype.on = function (name, listener, declaration) {\\n    if (typeof listener === 'function') {\\n        if (!this.listeners[name]) {\\n            this.listeners[name] = [];\\n        }\\n        this.listeners[name].push({fn: listener, declaration: declaration});\\n    }\\n};\\n\\n/**\\n * 移除事件监听器\\n *\\n * @param {string} name 事件名\\n * @param {Function=} listener 监听器\\n */\\nComponent.prototype.un = function (name, listener) {\\n    var nameListeners = this.listeners[name];\\n    var len = nameListeners && nameListeners.length;\\n\\n    while (len--) {\\n        if (!listener || listener === nameListeners[len].fn) {\\n            nameListeners.splice(len, 1);\\n        }\\n    }\\n};\\n\\n\\n/**\\n * 派发事件\\n *\\n * @param {string} name 事件名\\n * @param {Object} event 事件对象\\n */\\nComponent.prototype.fire = function (name, event) {\\n    var me = this;\\n    each(this.listeners[name], function (listener) {\\n        listener.fn.call(me, event);\\n    });\\n};\\n\\n/**\\n * 计算 computed 属性的值\\n *\\n * @private\\n * @param {string} computedExpr computed表达式串\\n */\\nComponent.prototype._calcComputed = function (computedExpr) {\\n    var computedDeps = this.computedDeps[computedExpr];\\n    if (!computedDeps) {\\n        computedDeps = this.computedDeps[computedExpr] = {};\\n    }\\n\\n    this.data.set(computedExpr, this.computed[computedExpr].call({\\n        data: {\\n            get: bind(function (expr) {\\n                // #[begin] error\\n                if (!expr) {\\n                    throw new Error('[SAN ERROR] call get method in computed need argument');\\n                }\\n                // #[end]\\n\\n                if (!computedDeps[expr]) {\\n                    computedDeps[expr] = 1;\\n\\n                    if (this.computed[expr]) {\\n                        this._calcComputed(expr);\\n                    }\\n\\n                    this.watch(expr, function () {\\n                        this._calcComputed(computedExpr);\\n                    });\\n                }\\n\\n                return this.data.get(expr);\\n            }, this)\\n        }\\n    }));\\n};\\n\\n/**\\n * 派发消息\\n * 组件可以派发消息，消息将沿着组件树向上传递，直到遇上第一个处理消息的组件\\n *\\n * @param {string} name 消息名称\\n * @param {*?} value 消息值\\n */\\nComponent.prototype.dispatch = function (name, value) {\\n    var parentComponent = this.parentComponent;\\n\\n    while (parentComponent) {\\n        var receiver = parentComponent.messages[name] || parentComponent.messages['*'];\\n        if (typeof receiver === 'function') {\\n            receiver.call(\\n                parentComponent,\\n                {target: this, value: value, name: name}\\n            );\\n            break;\\n        }\\n\\n        parentComponent = parentComponent.parentComponent;\\n    }\\n};\\n\\n/**\\n * 获取组件内部的 slot\\n *\\n * @param {string=} name slot名称，空为default slot\\n * @return {Array}\\n */\\nComponent.prototype.slot = function (name) {\\n    var result = [];\\n    var me = this;\\n\\n    function childrenTraversal(children) {\\n        each(children, function (child) {\\n            if (child.nodeType === NodeType.SLOT && child.owner === me) {\\n                if (child.isNamed && child.name === name\\n                    || !child.isNamed && !name\\n                ) {\\n                    result.push(child);\\n                }\\n            }\\n            else {\\n                childrenTraversal(child.children);\\n            }\\n        });\\n    }\\n\\n    childrenTraversal(this.children);\\n    return result;\\n};\\n\\n/**\\n * 获取带有 san-ref 指令的子组件引用\\n *\\n * @param {string} name 子组件的引用名\\n * @return {Component}\\n */\\nComponent.prototype.ref = function (name) {\\n    var refTarget;\\n    var owner = this;\\n\\n    function childrenTraversal(children) {\\n        each(children, function (child) {\\n            elementTraversal(child);\\n            return !refTarget;\\n        });\\n    }\\n\\n    function elementTraversal(element) {\\n        var nodeType = element.nodeType;\\n        if (nodeType === NodeType.TEXT) {\\n            return;\\n        }\\n\\n        if (element.owner === owner) {\\n            var ref;\\n            switch (element.nodeType) {\\n                case NodeType.ELEM:\\n                    ref = element.aNode.directives.ref;\\n                    if (ref && evalExpr(ref.value, element.scope, owner) === name) {\\n                        refTarget = element.el;\\n                    }\\n                    break;\\n\\n                case NodeType.CMPT:\\n                    ref = element.givenANode.directives.ref;\\n                    if (ref && evalExpr(ref.value, element.scope, owner) === name) {\\n                        refTarget = element;\\n                    }\\n            }\\n\\n            !refTarget && childrenTraversal(element.slotChildren);\\n        }\\n\\n        !refTarget && childrenTraversal(element.children);\\n    }\\n\\n    childrenTraversal(this.children);\\n\\n    return refTarget;\\n};\\n\\n\\n/**\\n * 视图更新函数\\n *\\n * @param {Array?} changes 数据变化信息\\n */\\nComponent.prototype._update = function (changes) {\\n    if (this.lifeCycle.disposed) {\\n        return;\\n    }\\n\\n    var me = this;\\n\\n\\n    var needReloadForSlot = false;\\n    this._notifyNeedReload = function () {\\n        needReloadForSlot = true;\\n    };\\n\\n    if (changes) {\\n        each(changes, function (change) {\\n            var changeExpr = change.expr;\\n\\n            each(me.binds, function (bindItem) {\\n                var relation;\\n                var setExpr = bindItem.name;\\n                var updateExpr = bindItem.expr;\\n\\n                if (!isDataChangeByElement(change, me, setExpr)\\n                    && (relation = changeExprCompare(changeExpr, updateExpr, me.scope))\\n                ) {\\n                    if (relation > 2) {\\n                        setExpr = createAccessor(\\n                            [\\n                                {\\n                                    type: ExprType.STRING,\\n                                    value: setExpr\\n                                }\\n                            ].concat(changeExpr.paths.slice(updateExpr.paths.length))\\n                        );\\n\\n                        updateExpr = changeExpr;\\n                    }\\n\\n                    me.data.set(setExpr, evalExpr(updateExpr, me.scope, me.owner), {\\n                        target: {\\n                            id: me.owner.id\\n                        }\\n                    });\\n                }\\n            });\\n\\n            each(me.givenNamedSlotBinds, function (bindItem) {\\n                needReloadForSlot = needReloadForSlot || changeExprCompare(changeExpr, bindItem.expr, me.scope);\\n                return !needReloadForSlot;\\n            });\\n        });\\n\\n        if (needReloadForSlot) {\\n            this._createGivenSlots();\\n            this._repaintChildren();\\n        }\\n        else {\\n            var slotChildrenLen = this.slotChildren.length;\\n            while (slotChildrenLen--) {\\n                var slotChild = this.slotChildren[slotChildrenLen];\\n\\n                if (slotChild.lifeCycle.disposed) {\\n                    this.slotChildren.splice(slotChildrenLen, 1);\\n                }\\n                else if (slotChild.isInserted) {\\n                    slotChild._update(changes, 1);\\n                }\\n            }\\n        }\\n    }\\n\\n    var dataChanges = this.dataChanges;\\n    if (dataChanges) {\\n        this.dataChanges = null;\\n        each(this.aNode.hotspot.dynamicProps, function (prop) {\\n            each(dataChanges, function (change) {\\n                if (changeExprCompare(change.expr, prop.expr, me.data)\\n                    || prop.hintExpr && changeExprCompare(change.expr, prop.hintExpr, me.data)\\n                ) {\\n                    handleProp(me, evalExpr(prop.expr, me.data, me), prop);\\n                    return false;\\n                }\\n            });\\n        });\\n\\n        elementUpdateChildren(this, dataChanges);\\n        if (needReloadForSlot) {\\n            this._createGivenSlots();\\n            this._repaintChildren();\\n        }\\n\\n        this._toPhase('updated');\\n\\n        if (this.owner) {\\n            this._updateBindxOwner(dataChanges);\\n            this.owner._update();\\n        }\\n    }\\n\\n    this._notifyNeedReload = null;\\n};\\n\\nComponent.prototype._updateBindxOwner = function (dataChanges) {\\n    var me = this;\\n\\n    if (this.owner) {\\n        each(dataChanges, function (change) {\\n            each(me.binds, function (bindItem) {\\n                var changeExpr = change.expr;\\n                if (bindItem.x\\n                    && !isDataChangeByElement(change, me.owner)\\n                    && changeExprCompare(changeExpr, parseExpr(bindItem.name), me.data)\\n                ) {\\n                    var updateScopeExpr = bindItem.expr;\\n                    if (changeExpr.paths.length > 1) {\\n                        updateScopeExpr = createAccessor(\\n                            bindItem.expr.paths.concat(changeExpr.paths.slice(1))\\n                        );\\n                    }\\n\\n                    me.scope.set(\\n                        updateScopeExpr,\\n                        evalExpr(changeExpr, me.data, me),\\n                        {\\n                            target: {\\n                                id: me.id,\\n                                prop: bindItem.name\\n                            }\\n                        }\\n                    );\\n                }\\n            });\\n        });\\n    }\\n};\\n\\n/**\\n * 重新绘制组件的内容\\n * 当 dynamic slot name 发生变更或 slot 匹配发生变化时，重新绘制\\n * 在组件级别重绘有点粗暴，但是能保证视图结果正确性\\n */\\nComponent.prototype._repaintChildren = function () {\\n    elementDisposeChildren(this, 0, 1);\\n    this.children = [];\\n\\n    this._contentReady = 0;\\n    this.slotChildren = [];\\n    elementAttach(this);\\n};\\n\\n\\n/**\\n * 组件内部监听数据变化的函数\\n *\\n * @private\\n * @param {Object} change 数据变化信息\\n */\\nComponent.prototype._dataChanger = function (change) {\\n    if (this.lifeCycle.painting || this.lifeCycle.created) {\\n        if (!this.dataChanges) {\\n            nextTick(this._update, this);\\n            this.dataChanges = [];\\n        }\\n\\n        this.dataChanges.push(change);\\n    }\\n    else if (this.lifeCycle.inited && this.owner) {\\n        this._updateBindxOwner([change]);\\n    }\\n};\\n\\n\\n/**\\n * 监听组件的数据变化\\n *\\n * @param {string} dataName 变化的数据项\\n * @param {Function} listener 监听函数\\n */\\nComponent.prototype.watch = function (dataName, listener) {\\n    var dataExpr = parseExpr(dataName);\\n\\n    this.data.listen(bind(function (change) {\\n        if (changeExprCompare(change.expr, dataExpr, this.data)) {\\n            listener.call(this, evalExpr(dataExpr, this.data, this), change);\\n        }\\n    }, this));\\n};\\n\\n/**\\n * 组件销毁的行为\\n *\\n * @param {Object} options 销毁行为的参数\\n */\\nComponent.prototype.dispose = elementOwnDispose;\\n\\nComponent.prototype._doneLeave = function () {\\n    if (this.leaveDispose) {\\n        if (!this.lifeCycle.disposed) {\\n            // 这里不用挨个调用 dispose 了，因为 children 释放链会调用的\\n            this.slotChildren = null;\\n\\n            this.data.unlisten();\\n            this.dataChanger = null;\\n            this.dataChanges = null;\\n\\n            elementDispose(\\n                this,\\n                this.disposeNoDetach,\\n                this.disposeNoTransition\\n            );\\n            this.listeners = null;\\n\\n            this.givenANode = null;\\n            this.givenSlots = null;\\n            this.givenNamedSlotBinds = null;\\n        }\\n    }\\n    else if (this.lifeCycle.attached) {\\n        removeEl(this.el);\\n        this._toPhase('detached');\\n    }\\n};\\n\\n/**\\n * 完成组件 attached 后的行为\\n *\\n * @param {Object} element 元素节点\\n */\\nComponent.prototype._attached = elementOwnAttached;\\n\\nComponent.prototype.attach = elementOwnAttach;\\nComponent.prototype.detach = elementOwnDetach;\\nComponent.prototype._create = elementOwnCreate;\\nComponent.prototype._onEl = elementOwnOnEl;\\n\\n\\n// exports = module.exports = Component;\\n\\n\\n/**\\n * @file 创建组件类\\n * @author errorrik(errorrik@gmail.com)\\n */\\n\\n// var Component = require('./component');\\n// var inherits = require('../util/inherits');\\n\\n/**\\n * 创建组件类\\n *\\n * @param {Object} proto 组件类的方法表\\n * @return {Function}\\n */\\nfunction defineComponent(proto) {\\n    // 如果传入一个不是 san component 的 constructor，直接返回不是组件构造函数\\n    // 这种场景导致的错误 san 不予考虑\\n    if (typeof proto === 'function') {\\n        return proto;\\n    }\\n\\n    // #[begin] error\\n    if (typeof proto !== 'object') {\\n        throw new Error('[SAN FATAL] param must be a plain object.');\\n    }\\n    // #[end]\\n\\n    function ComponentClass(option) { // eslint-disable-line\\n        Component.call(this, option);\\n    }\\n\\n    ComponentClass.prototype = proto;\\n    inherits(ComponentClass, Component);\\n\\n    return ComponentClass;\\n}\\n\\n// exports = module.exports = defineComponent;\\n\\n\\n/**\\n * @file 编译组件类\\n * @author errorrik(errorrik@gmail.com)\\n */\\n\\n\\n// var createANode = require('../parser/create-a-node');\\n// var parseTemplate = require('../parser/parse-template');\\n// var parseText = require('../parser/parse-text');\\n// var defineComponent = require('./define-component');\\n\\n\\n/**\\n * 编译组件类。预解析template和components\\n *\\n * @param {Function} ComponentClass 组件类\\n */\\nfunction compileComponent(ComponentClass) {\\n    var proto = ComponentClass.prototype;\\n\\n    // pre define components class\\n    if (!proto.hasOwnProperty('_cmptReady')) {\\n        proto.components = ComponentClass.components || proto.components || {};\\n        var components = proto.components;\\n\\n        for (var key in components) { // eslint-disable-line\\n            var componentClass = components[key];\\n\\n            if (typeof componentClass === 'object') {\\n                components[key] = defineComponent(componentClass);\\n            }\\n            else if (componentClass === 'self') {\\n                components[key] = ComponentClass;\\n            }\\n        }\\n\\n        proto._cmptReady = 1;\\n    }\\n\\n\\n    // pre compile template\\n    if (!proto.hasOwnProperty('aNode')) {\\n        proto.aNode = createANode();\\n\\n        var tpl = ComponentClass.template || proto.template;\\n        if (tpl) {\\n            var aNode = parseTemplate(tpl, {\\n                trimWhitespace: proto.trimWhitespace || ComponentClass.trimWhitespace,\\n                delimiters: proto.delimiters || ComponentClass.delimiters\\n            });\\n            var firstChild = aNode.children[0];\\n\\n            // #[begin] error\\n            if (aNode.children.length !== 1 || firstChild.textExpr) {\\n                throw new Error('[SAN FATAL] template must have a root element.');\\n            }\\n            // #[end]\\n\\n            proto.aNode = firstChild;\\n            if (firstChild.tagName === 'template') {\\n                firstChild.tagName = null;\\n            }\\n\\n            var componentPropExtra = {\\n                'class': {name: 'class', expr: parseText('{{class | _class | _sep(\\\" \\\")}}')},\\n                'style': {name: 'style', expr: parseText('{{style | _style | _sep(\\\";\\\")}}')},\\n                'id': {name: 'id', expr: parseText('{{id}}')}\\n            };\\n\\n            var len = firstChild.props.length;\\n            while (len--) {\\n                var prop = firstChild.props[len];\\n                var extra = componentPropExtra[prop.name];\\n\\n                if (extra) {\\n                    firstChild.props.splice(len, 1);\\n                    componentPropExtra[prop.name] = prop;\\n\\n                    if (prop.name !== 'id') {\\n                        prop.expr.segs.push(extra.expr.segs[0]);\\n                        prop.expr.value = null;\\n                    }\\n                }\\n            }\\n\\n            firstChild.props.push(\\n                componentPropExtra['class'], // eslint-disable-line dot-notation\\n                componentPropExtra.style,\\n                componentPropExtra.id\\n            );\\n        }\\n    }\\n}\\n\\n// exports = module.exports = compileComponent;\\n\\n\\n/**\\n * @file 组件预热\\n * @author errorrik(errorrik@gmail.com)\\n */\\n\\n// var ExprType = require('../parser/expr-type');\\n// var each = require('../util/each');\\n// var createEl = require('../browser/create-el');\\n// var getPropHandler = require('./get-prop-handler');\\n// var getANodeProp = require('./get-a-node-prop');\\n// var isBrowser = require('../browser/is-browser');\\n\\n/**\\n * 组件预热，分析组件aNode的数据引用等信息\\n *\\n * @param {Function} ComponentClass 组件类\\n */\\nfunction componentPreheat(ComponentClass) {\\n    var stack = [];\\n\\n    function recordHotspotData(refs, notContentData) {\\n        var len = stack.length;\\n        each(stack, function (aNode, index) {\\n            if (!notContentData || index !== len - 1) {\\n                each(refs, function (ref) {\\n                    aNode.hotspot.data[ref] = 1;\\n                });\\n            }\\n        });\\n    }\\n\\n\\n    function analyseANodeHotspot(aNode) {\\n        if (!aNode.hotspot) {\\n            stack.push(aNode);\\n\\n\\n            if (aNode.textExpr) {\\n                aNode.hotspot = {data: {}};\\n                recordHotspotData(analyseExprDataHotspot(aNode.textExpr));\\n            }\\n            else {\\n                var sourceNode;\\n                if (isBrowser && aNode.tagName && !/^(template|slot|select|input|option)$/i.test(aNode.tagName)) {\\n                    sourceNode = createEl(aNode.tagName);\\n                }\\n\\n                aNode.hotspot = {\\n                    data: {},\\n                    dynamicProps: [],\\n                    xProps: [],\\n                    props: {},\\n                    sourceNode: sourceNode\\n                };\\n\\n\\n                // === analyse hotspot data: start\\n                each(aNode.vars, function (varItem) {\\n                    recordHotspotData(analyseExprDataHotspot(varItem.expr));\\n                });\\n\\n                each(aNode.props, function (prop) {\\n                    recordHotspotData(analyseExprDataHotspot(prop.expr));\\n                });\\n\\n                /* eslint-disable guard-for-in */\\n                for (var key in aNode.directives) {\\n                    var directive = aNode.directives[key];\\n                    recordHotspotData(analyseExprDataHotspot(directive.value), key !== 'html');\\n                }\\n                /* eslint-enable guard-for-in */\\n\\n                each(aNode.elses, function (child) {\\n                    analyseANodeHotspot(child);\\n                });\\n\\n                each(aNode.children, function (child) {\\n                    analyseANodeHotspot(child);\\n                });\\n                // === analyse hotspot data: end\\n\\n\\n                // === analyse hotspot props: start\\n                each(aNode.props, function (prop, index) {\\n                    aNode.hotspot.props[prop.name] = index;\\n\\n                    if (prop.name === 'id') {\\n                        prop.id = true;\\n                        aNode.hotspot.idProp = prop;\\n                        aNode.hotspot.dynamicProps.push(prop);\\n                    }\\n                    else if (prop.expr.value != null) {\\n                        if (sourceNode) {\\n                            getPropHandler(aNode.tagName, prop.name)\\n                                .prop(sourceNode, prop.expr.value, prop.name, aNode);\\n                        }\\n                    }\\n                    else {\\n                        if (prop.x) {\\n                            aNode.hotspot.xProps.push(prop);\\n                        }\\n                        aNode.hotspot.dynamicProps.push(prop);\\n                    }\\n                });\\n\\n                // ie 下，如果 option 没有 value 属性，select.value = xx 操作不会选中 option\\n                // 所以没有设置 value 时，默认把 option 的内容作为 value\\n                if (aNode.tagName === 'option'\\n                    && !getANodeProp(aNode, 'value')\\n                    && aNode.children[0]\\n                ) {\\n                    var valueProp = {\\n                        name: 'value',\\n                        expr: aNode.children[0].textExpr\\n                    };\\n                    aNode.props.push(valueProp);\\n                    aNode.hotspot.dynamicProps.push(valueProp);\\n                    aNode.hotspot.props.value = aNode.props.length - 1;\\n                }\\n                // === analyse hotspot props: end\\n            }\\n\\n            stack.pop();\\n        }\\n    }\\n\\n    analyseANodeHotspot(ComponentClass.prototype.aNode);\\n}\\n\\n/**\\n * 分析表达式的数据引用\\n *\\n * @param {Object} expr 要分析的表达式\\n * @return {Array}\\n */\\nfunction analyseExprDataHotspot(expr) {\\n    var refs = [];\\n\\n    function analyseExprs(exprs) {\\n        each(exprs, function (expr) {\\n            refs = refs.concat(analyseExprDataHotspot(expr));\\n        });\\n    }\\n\\n    switch (expr.type) {\\n        case ExprType.ACCESSOR:\\n            var paths = expr.paths;\\n            refs.push(paths[0].value);\\n\\n            if (paths.length > 1) {\\n                refs.push(paths[0].value + '.' + (paths[1].value || '*'));\\n            }\\n\\n            analyseExprs(paths.slice(1));\\n            break;\\n\\n        case ExprType.UNARY:\\n            return analyseExprDataHotspot(expr.expr);\\n\\n        case ExprType.TEXT:\\n        case ExprType.BINARY:\\n        case ExprType.TERTIARY:\\n            analyseExprs(expr.segs);\\n            break;\\n\\n        case ExprType.INTERP:\\n            refs = analyseExprDataHotspot(expr.expr);\\n\\n            each(expr.filters, function (filter) {\\n                analyseExprs(filter.name.paths);\\n                analyseExprs(filter.args);\\n            });\\n\\n            break;\\n\\n    }\\n\\n    return refs;\\n}\\n\\n// exports = module.exports = componentPreheat;\\n\\n\\n/**\\n * @file 将 binds 的 name 从 kebabcase 转换成 camelcase\\n * @author errorrik(errorrik@gmail.com)\\n */\\n\\n// var kebab2camel = require('../util/kebab2camel');\\n// var each = require('../util/each');\\n\\n/**\\n * 将 binds 的 name 从 kebabcase 转换成 camelcase\\n *\\n * @param {Array} binds binds集合\\n * @return {Array}\\n */\\nfunction camelComponentBinds(binds) {\\n    var result = [];\\n    each(binds, function (bind) {\\n        result.push({\\n            name: kebab2camel(bind.name),\\n            expr: bind.expr,\\n            x: bind.x,\\n            raw: bind.raw\\n        });\\n    });\\n\\n    return result;\\n}\\n\\n// exports = module.exports = camelComponentBinds;\\n\\n\\n/**\\n * @file 编译源码的 helper 方法集合\\n * @author errorrik(errorrik@gmail.com)\\n */\\n\\n// var each = require('../util/each');\\n// var ExprType = require('../parser/expr-type');\\n\\n// #[begin] ssr\\n// \\n// /**\\n//  * 编译源码的 helper 方法集合对象\\n//  */\\n// var compileExprSource = {\\n// \\n//     /**\\n//      * 字符串字面化\\n//      *\\n//      * @param {string} source 需要字面化的字符串\\n//      * @return {string} 字符串字面化结果\\n//      */\\n//     stringLiteralize: function (source) {\\n//         return '\\\"'\\n//             + source\\n//                 .replace(/\\\\x5C/g, '\\\\\\\\\\\\\\\\')\\n//                 .replace(/\\\"/g, '\\\\\\\\\\\"')\\n//                 .replace(/\\\\x0A/g, '\\\\\\\\n')\\n//                 .replace(/\\\\x09/g, '\\\\\\\\t')\\n//                 .replace(/\\\\x0D/g, '\\\\\\\\r')\\n//                 // .replace( /\\\\x08/g, '\\\\\\\\b' )\\n//                 // .replace( /\\\\x0C/g, '\\\\\\\\f' )\\n//             + '\\\"';\\n//     },\\n// \\n//     /**\\n//      * 生成数据访问表达式代码\\n//      *\\n//      * @param {Object?} accessorExpr accessor表达式对象\\n//      * @return {string}\\n//      */\\n//     dataAccess: function (accessorExpr) {\\n//         var code = 'componentCtx.data';\\n//         if (accessorExpr) {\\n//             each(accessorExpr.paths, function (path) {\\n//                 if (path.type === ExprType.ACCESSOR) {\\n//                     code += '[' + compileExprSource.dataAccess(path) + ']';\\n//                     return;\\n//                 }\\n// \\n//                 switch (typeof path.value) {\\n//                     case 'string':\\n//                         code += '.' + path.value;\\n//                         break;\\n// \\n//                     case 'number':\\n//                         code += '[' + path.value + ']';\\n//                         break;\\n//                 }\\n//             });\\n//         }\\n// \\n//         return code;\\n//     },\\n// \\n//     /**\\n//      * 生成插值代码\\n//      *\\n//      * @param {Object} interpExpr 插值表达式对象\\n//      * @return {string}\\n//      */\\n//     interp: function (interpExpr) {\\n//         var code = compileExprSource.expr(interpExpr.expr);\\n// \\n// \\n//         each(interpExpr.filters, function (filter) {\\n//             code = 'componentCtx.callFilter(\\\"' + filter.name.paths[0].value + '\\\", [' + code;\\n//             each(filter.args, function (arg) {\\n//                 code += ', ' + compileExprSource.expr(arg);\\n//             });\\n//             code += '])';\\n//         });\\n// \\n//         if (!interpExpr.original) {\\n//             return 'escapeHTML(' + code + ')';\\n//         }\\n// \\n//         return code;\\n//     },\\n// \\n//     /**\\n//      * 生成文本片段代码\\n//      *\\n//      * @param {Object} textExpr 文本片段表达式对象\\n//      * @return {string}\\n//      */\\n//     text: function (textExpr) {\\n//         if (textExpr.segs.length === 0) {\\n//             return '\\\"\\\"';\\n//         }\\n// \\n//         var code = '';\\n// \\n//         each(textExpr.segs, function (seg) {\\n//             var segCode = compileExprSource.expr(seg);\\n//             code += code ? ' + ' + segCode : segCode;\\n//         });\\n// \\n//         return code;\\n//     },\\n// \\n//     /**\\n//      * 二元表达式操作符映射表\\n//      *\\n//      * @type {Object}\\n//      */\\n//     binaryOp: {\\n//         /* eslint-disable */\\n//         43: '+',\\n//         45: '-',\\n//         42: '*',\\n//         47: '/',\\n//         60: '<',\\n//         62: '>',\\n//         76: '&&',\\n//         94: '!=',\\n//         121: '<=',\\n//         122: '==',\\n//         123: '>=',\\n//         155: '!==',\\n//         183: '===',\\n//         248: '||'\\n//         /* eslint-enable */\\n//     },\\n// \\n//     /**\\n//      * 生成表达式代码\\n//      *\\n//      * @param {Object} expr 表达式对象\\n//      * @return {string}\\n//      */\\n//     expr: function (expr) {\\n//         switch (expr.type) {\\n//             case ExprType.UNARY:\\n//                 return '!' + compileExprSource.expr(expr.expr);\\n// \\n//             case ExprType.BINARY:\\n//                 return compileExprSource.expr(expr.segs[0])\\n//                     + compileExprSource.binaryOp[expr.operator]\\n//                     + compileExprSource.expr(expr.segs[1]);\\n// \\n//             case ExprType.TERTIARY:\\n//                 return compileExprSource.expr(expr.segs[0])\\n//                     + '?' + compileExprSource.expr(expr.segs[1])\\n//                     + ':' + compileExprSource.expr(expr.segs[2]);\\n// \\n//             case ExprType.STRING:\\n//                 return compileExprSource.stringLiteralize(expr.literal || expr.value);\\n// \\n//             case ExprType.NUMBER:\\n//                 return expr.value;\\n// \\n//             case ExprType.BOOL:\\n//                 return expr.value ? 'true' : 'false';\\n// \\n//             case ExprType.ACCESSOR:\\n//                 return compileExprSource.dataAccess(expr);\\n// \\n//             case ExprType.INTERP:\\n//                 return compileExprSource.interp(expr);\\n// \\n//             case ExprType.TEXT:\\n//                 return compileExprSource.text(expr);\\n//         }\\n//     }\\n// };\\n// #[end]\\n\\n// exports = module.exports = compileExprSource;\\n\\n\\n/**\\n * @file 编译源码的中间buffer类\\n * @author errorrik(errorrik@gmail.com)\\n */\\n\\n// var each = require('../util/each');\\n// var compileExprSource = require('./compile-expr-source');\\n\\n\\n// #[begin] ssr\\n// /**\\n//  * 编译源码的中间buffer类\\n//  *\\n//  * @class\\n//  */\\n// function CompileSourceBuffer() {\\n//     this.segs = [];\\n// }\\n// \\n// /**\\n//  * 添加原始代码，将原封不动输出\\n//  *\\n//  * @param {string} code 原始代码\\n//  */\\n// CompileSourceBuffer.prototype.addRaw = function (code) {\\n//     this.segs.push({\\n//         type: 'RAW',\\n//         code: code\\n//     });\\n// };\\n// \\n// /**\\n//  * 添加被拼接为html的原始代码\\n//  *\\n//  * @param {string} code 原始代码\\n//  */\\n// CompileSourceBuffer.prototype.joinRaw = function (code) {\\n//     this.segs.push({\\n//         type: 'JOIN_RAW',\\n//         code: code\\n//     });\\n// };\\n// \\n// /**\\n//  * 添加renderer方法的起始源码\\n//  */\\n// CompileSourceBuffer.prototype.addRendererStart = function () {\\n//     this.addRaw('function (data, parentCtx, givenSlots) {');\\n//     this.addRaw('var html = \\\"\\\";');\\n// };\\n// \\n// /**\\n//  * 添加renderer方法的结束源码\\n//  */\\n// CompileSourceBuffer.prototype.addRendererEnd = function () {\\n//     this.addRaw('return html;');\\n//     this.addRaw('}');\\n// };\\n// \\n// /**\\n//  * 添加被拼接为html的静态字符串\\n//  *\\n//  * @param {string} str 被拼接的字符串\\n//  */\\n// CompileSourceBuffer.prototype.joinString = function (str) {\\n//     this.segs.push({\\n//         str: str,\\n//         type: 'JOIN_STRING'\\n//     });\\n// };\\n// \\n// /**\\n//  * 添加被拼接为html的数据访问\\n//  *\\n//  * @param {Object?} accessor 数据访问表达式对象\\n//  */\\n// CompileSourceBuffer.prototype.joinDataStringify = function () {\\n//     this.segs.push({\\n//         type: 'JOIN_DATA_STRINGIFY'\\n//     });\\n// };\\n// \\n// /**\\n//  * 添加被拼接为html的表达式\\n//  *\\n//  * @param {Object} expr 表达式对象\\n//  */\\n// CompileSourceBuffer.prototype.joinExpr = function (expr) {\\n//     this.segs.push({\\n//         expr: expr,\\n//         type: 'JOIN_EXPR'\\n//     });\\n// };\\n// \\n// /**\\n//  * 生成编译后代码\\n//  *\\n//  * @return {string}\\n//  */\\n// CompileSourceBuffer.prototype.toCode = function () {\\n//     var code = [];\\n//     var temp = '';\\n// \\n//     function genStrLiteral() {\\n//         if (temp) {\\n//             code.push('html += ' + compileExprSource.stringLiteralize(temp) + ';');\\n//         }\\n// \\n//         temp = '';\\n//     }\\n// \\n//     each(this.segs, function (seg) {\\n//         if (seg.type === 'JOIN_STRING') {\\n//             temp += seg.str;\\n//             return;\\n//         }\\n// \\n//         genStrLiteral();\\n//         switch (seg.type) {\\n//             case 'JOIN_DATA_STRINGIFY':\\n//                 code.push('html += stringifier.any(' + compileExprSource.dataAccess() + ');');\\n//                 break;\\n// \\n//             case 'JOIN_EXPR':\\n//                 code.push('html += ' + compileExprSource.expr(seg.expr) + ';');\\n//                 break;\\n// \\n//             case 'JOIN_RAW':\\n//                 code.push('html += ' + seg.code + ';');\\n//                 break;\\n// \\n//             case 'RAW':\\n//                 code.push(seg.code);\\n//                 break;\\n// \\n//         }\\n//     });\\n// \\n//     genStrLiteral();\\n// \\n//     return code.join('\\\\n');\\n// };\\n// \\n// #[end]\\n\\n// exports = module.exports = CompileSourceBuffer;\\n\\n\\n/**\\n * @file 将组件编译成 render 方法的 js 源码\\n * @author errorrik(errorrik@gmail.com)\\n */\\n\\n\\n// var each = require('../util/each');\\n// var guid = require('../util/guid');\\n// var parseExpr = require('../parser/parse-expr');\\n// var createANode = require('../parser/create-a-node');\\n// var cloneDirectives = require('../parser/clone-directives');\\n// var autoCloseTags = require('../browser/auto-close-tags');\\n// var CompileSourceBuffer = require('./compile-source-buffer');\\n// var compileExprSource = require('./compile-expr-source');\\n// var rinseCondANode = require('./rinse-cond-anode');\\n// var getANodeProp = require('./get-a-node-prop');\\n\\n// #[begin] ssr\\n// \\n// /**\\n//  * 生成序列化时起始桩的html\\n//  *\\n//  * @param {string} type 桩类型标识\\n//  * @param {string?} content 桩内的内容\\n//  * @return {string}\\n//  */\\n// function serializeStump(type, content) {\\n//     return '\\x3c!--s-' + type + (content ? ':' + content : '') + '--\\x3e';\\n// }\\n// \\n// /**\\n//  * 生成序列化时结束桩的html\\n//  *\\n//  * @param {string} type 桩类型标识\\n//  * @return {string}\\n//  */\\n// function serializeStumpEnd(type) {\\n//     return '\\x3c!--/s-' + type + '--\\x3e';\\n// }\\n// \\n// /**\\n//  * element 的编译方法集合对象\\n//  *\\n//  * @inner\\n//  */\\n// var elementSourceCompiler = {\\n// \\n//     /* eslint-disable max-params */\\n//     /**\\n//      * 编译元素标签头\\n//      *\\n//      * @param {CompileSourceBuffer} sourceBuffer 编译源码的中间buffer\\n//      * @param {string} tagName 标签名\\n//      * @param {Array} props 属性列表\\n//      * @param {string?} extraProp 额外的属性串\\n//      * @param {boolean?} isClose 是否闭合\\n//      */\\n//     tagStart: function (sourceBuffer, tagName, props, extraProp, isClose) {\\n//         sourceBuffer.joinString('<' + tagName);\\n//         sourceBuffer.joinString(extraProp || '');\\n// \\n//         // index list\\n//         var propsIndex = {};\\n//         each(props, function (prop) {\\n//             propsIndex[prop.name] = prop;\\n//         });\\n// \\n//         each(props, function (prop) {\\n//             if (prop.name === 'slot') {\\n//                 return;\\n//             }\\n// \\n//             if (prop.name === 'value') {\\n//                 switch (tagName) {\\n//                     case 'textarea':\\n//                         return;\\n// \\n//                     case 'select':\\n//                         sourceBuffer.addRaw('$selectValue = '\\n//                             + compileExprSource.expr(prop.expr)\\n//                             + ' || \\\"\\\";'\\n//                         );\\n//                         return;\\n// \\n//                     case 'option':\\n//                         sourceBuffer.addRaw('$optionValue = '\\n//                             + compileExprSource.expr(prop.expr)\\n//                             + ';'\\n//                         );\\n//                         // value\\n//                         sourceBuffer.addRaw('if ($optionValue != null) {');\\n//                         sourceBuffer.joinRaw('\\\" value=\\\\\\\\\\\"\\\" + $optionValue + \\\"\\\\\\\\\\\"\\\"');\\n//                         sourceBuffer.addRaw('}');\\n// \\n//                         // selected\\n//                         sourceBuffer.addRaw('if ($optionValue === $selectValue) {');\\n//                         sourceBuffer.joinString(' selected');\\n//                         sourceBuffer.addRaw('}');\\n//                         return;\\n//                 }\\n//             }\\n// \\n//             switch (prop.name) {\\n//                 case 'readonly':\\n//                 case 'disabled':\\n//                 case 'multiple':\\n//                     if (prop.raw === '') {\\n//                         sourceBuffer.joinString(' ' + prop.name);\\n//                     }\\n//                     else {\\n//                         sourceBuffer.joinRaw('boolAttrFilter(\\\"' + prop.name + '\\\", '\\n//                             + compileExprSource.expr(prop.expr)\\n//                             + ')'\\n//                         );\\n//                     }\\n//                     break;\\n// \\n//                 case 'checked':\\n//                     if (tagName === 'input') {\\n//                         var valueProp = propsIndex.value;\\n//                         var valueCode = compileExprSource.expr(valueProp.expr);\\n// \\n//                         if (valueProp) {\\n//                             switch (propsIndex.type.raw) {\\n//                                 case 'checkbox':\\n//                                     sourceBuffer.addRaw('if (contains('\\n//                                         + compileExprSource.expr(prop.expr)\\n//                                         + ', '\\n//                                         + valueCode\\n//                                         + ')) {'\\n//                                     );\\n//                                     sourceBuffer.joinString(' checked');\\n//                                     sourceBuffer.addRaw('}');\\n//                                     break;\\n// \\n//                                 case 'radio':\\n//                                     sourceBuffer.addRaw('if ('\\n//                                         + compileExprSource.expr(prop.expr)\\n//                                         + ' === '\\n//                                         + valueCode\\n//                                         + ') {'\\n//                                     );\\n//                                     sourceBuffer.joinString(' checked');\\n//                                     sourceBuffer.addRaw('}');\\n//                                     break;\\n//                             }\\n//                         }\\n//                     }\\n//                     break;\\n// \\n//                 default:\\n//                     if (prop.attr) {\\n//                         sourceBuffer.joinString(' ' + prop.attr);\\n//                     }\\n//                     else {\\n//                         sourceBuffer.joinRaw('attrFilter(\\\"' + prop.name + '\\\", '\\n//                             + (prop.x ? 'escapeHTML(' : '')\\n//                             + compileExprSource.expr(prop.expr)\\n//                             + (prop.x ? ')' : '')\\n//                             + ')'\\n//                         );\\n//                     }\\n//                     break;\\n//             }\\n//         });\\n// \\n//         sourceBuffer.joinString(isClose ? '/>' : '>');\\n//     },\\n//     /* eslint-enable max-params */\\n// \\n//     /**\\n//      * 编译元素闭合\\n//      *\\n//      * @param {CompileSourceBuffer} sourceBuffer 编译源码的中间buffer\\n//      * @param {string} tagName 标签名\\n//      */\\n//     tagEnd: function (sourceBuffer, tagName) {\\n//         if (!autoCloseTags[tagName]) {\\n//             sourceBuffer.joinString('</' + tagName + '>');\\n//         }\\n// \\n//         if (tagName === 'select') {\\n//             sourceBuffer.addRaw('$selectValue = null;');\\n//         }\\n// \\n//         if (tagName === 'option') {\\n//             sourceBuffer.addRaw('$optionValue = null;');\\n//         }\\n//     },\\n// \\n//     /**\\n//      * 编译元素内容\\n//      *\\n//      * @param {CompileSourceBuffer} sourceBuffer 编译源码的中间buffer\\n//      * @param {ANode} aNode 元素的抽象节点信息\\n//      * @param {Component} owner 所属组件实例环境\\n//      */\\n//     inner: function (sourceBuffer, aNode, owner) {\\n//         // inner content\\n//         if (aNode.tagName === 'textarea') {\\n//             var valueProp = getANodeProp(aNode, 'value');\\n//             if (valueProp) {\\n//                 sourceBuffer.joinRaw('escapeHTML('\\n//                     + compileExprSource.expr(valueProp.expr)\\n//                     + ')'\\n//                 );\\n//             }\\n// \\n//             return;\\n//         }\\n// \\n//         var htmlDirective = aNode.directives.html;\\n//         if (htmlDirective) {\\n//             sourceBuffer.joinExpr(htmlDirective.value);\\n//         }\\n//         else {\\n//             /* eslint-disable no-use-before-define */\\n//             each(aNode.children, function (aNodeChild) {\\n//                 sourceBuffer.addRaw(aNodeCompiler.compile(aNodeChild, sourceBuffer, owner));\\n//             });\\n//             /* eslint-enable no-use-before-define */\\n//         }\\n//     }\\n// };\\n// \\n// /**\\n//  * ANode 的编译方法集合对象\\n//  *\\n//  * @inner\\n//  */\\n// var aNodeCompiler = {\\n// \\n//     /**\\n//      * 编译节点\\n//      *\\n//      * @param {ANode} aNode 抽象节点\\n//      * @param {CompileSourceBuffer} sourceBuffer 编译源码的中间buffer\\n//      * @param {Component} owner 所属组件实例环境\\n//      * @param {Object} extra 编译所需的一些额外信息\\n//      */\\n//     compile: function (aNode, sourceBuffer, owner, extra) {\\n//         extra = extra || {};\\n//         var compileMethod = 'compileElement';\\n// \\n//         if (aNode.textExpr) {\\n//             compileMethod = 'compileText';\\n//         }\\n//         else if (aNode.directives['if']) { // eslint-disable-line dot-notation\\n//             compileMethod = 'compileIf';\\n//         }\\n//         else if (aNode.directives['for']) { // eslint-disable-line dot-notation\\n//             compileMethod = 'compileFor';\\n//         }\\n//         else if (aNode.tagName === 'slot') {\\n//             compileMethod = 'compileSlot';\\n//         }\\n//         else if (aNode.tagName === 'template') {\\n//             compileMethod = 'compileTemplate';\\n//         }\\n//         else {\\n//             var ComponentType = owner.getComponentType(aNode);\\n//             if (ComponentType) {\\n//                 compileMethod = 'compileComponent';\\n//                 extra.ComponentClass = ComponentType;\\n//             }\\n//         }\\n// \\n//         aNodeCompiler[compileMethod](aNode, sourceBuffer, owner, extra);\\n//     },\\n// \\n//     /**\\n//      * 编译文本节点\\n//      *\\n//      * @param {ANode} aNode 节点对象\\n//      * @param {CompileSourceBuffer} sourceBuffer 编译源码的中间buffer\\n//      */\\n//     compileText: function (aNode, sourceBuffer) {\\n//         if (aNode.textExpr.original) {\\n//             sourceBuffer.joinString(serializeStump('text'));\\n//         }\\n// \\n//         sourceBuffer.joinExpr(aNode.textExpr);\\n// \\n//         if (aNode.textExpr.original) {\\n//             sourceBuffer.joinString(serializeStumpEnd('text'));\\n//         }\\n//     },\\n// \\n//     /**\\n//      * 编译template节点\\n//      *\\n//      * @param {ANode} aNode 节点对象\\n//      * @param {CompileSourceBuffer} sourceBuffer 编译源码的中间buffer\\n//      * @param {Component} owner 所属组件实例环境\\n//      */\\n//     compileTemplate: function (aNode, sourceBuffer, owner) {\\n//         elementSourceCompiler.inner(sourceBuffer, aNode, owner);\\n//     },\\n// \\n//     /**\\n//      * 编译 if 节点\\n//      *\\n//      * @param {ANode} aNode 节点对象\\n//      * @param {CompileSourceBuffer} sourceBuffer 编译源码的中间buffer\\n//      * @param {Component} owner 所属组件实例环境\\n//      */\\n//     compileIf: function (aNode, sourceBuffer, owner) {\\n//         sourceBuffer.addRaw('(function () {');\\n// \\n//         sourceBuffer.addRaw('var ifIndex = null;');\\n// \\n//         // output main if\\n//         var ifDirective = aNode.directives['if']; // eslint-disable-line dot-notation\\n//         sourceBuffer.addRaw('if (' + compileExprSource.expr(ifDirective.value) + ') {');\\n//         sourceBuffer.addRaw(\\n//             aNodeCompiler.compile(\\n//                 rinseCondANode(aNode),\\n//                 sourceBuffer,\\n//                 owner\\n//             )\\n//         );\\n//         sourceBuffer.addRaw('}');\\n// \\n//         // output elif and else\\n//         each(aNode.elses, function (elseANode, index) {\\n//             var elifDirective = elseANode.directives.elif;\\n//             if (elifDirective) {\\n//                 sourceBuffer.addRaw('else if (' + compileExprSource.expr(elifDirective.value) + ') {');\\n//             }\\n//             else {\\n//                 sourceBuffer.addRaw('else {');\\n//             }\\n// \\n//             sourceBuffer.addRaw(\\n//                 aNodeCompiler.compile(\\n//                     rinseCondANode(elseANode),\\n//                     sourceBuffer,\\n//                     owner\\n//                 )\\n//             );\\n//             sourceBuffer.addRaw('}');\\n//         });\\n// \\n//         sourceBuffer.addRaw('})();');\\n//     },\\n// \\n//     /**\\n//      * 编译 for 节点\\n//      *\\n//      * @param {ANode} aNode 节点对象\\n//      * @param {CompileSourceBuffer} sourceBuffer 编译源码的中间buffer\\n//      * @param {Component} owner 所属组件实例环境\\n//      */\\n//     compileFor: function (aNode, sourceBuffer, owner) {\\n//         var forElementANode = createANode({\\n//             children: aNode.children,\\n//             props: aNode.props,\\n//             events: aNode.events,\\n//             tagName: aNode.tagName,\\n//             directives: cloneDirectives(aNode.directives, {\\n//                 'for': 1\\n//             }),\\n//             hotspot: aNode.hotspot\\n//         });\\n// \\n//         var forDirective = aNode.directives['for']; // eslint-disable-line dot-notation\\n//         var itemName = forDirective.item.raw;\\n//         var indexName = forDirective.index.raw;\\n//         var listName = compileExprSource.dataAccess(forDirective.value);\\n// \\n//         if (indexName === '$index') {\\n//             indexName = guid();\\n//         }\\n// \\n//         sourceBuffer.addRaw('for ('\\n//             + 'var ' + indexName + ' = 0; '\\n//             + indexName + ' < ' + listName + '.length; '\\n//             + indexName + '++) {'\\n//         );\\n//         sourceBuffer.addRaw('componentCtx.data.' + indexName + '=' + indexName + ';');\\n//         sourceBuffer.addRaw('componentCtx.data.' + itemName + '= ' + listName + '[' + indexName + '];');\\n//         sourceBuffer.addRaw(\\n//             aNodeCompiler.compile(\\n//                 forElementANode,\\n//                 sourceBuffer,\\n//                 owner\\n//             )\\n//         );\\n//         sourceBuffer.addRaw('}');\\n//     },\\n// \\n//     /**\\n//      * 编译 slot 节点\\n//      *\\n//      * @param {ANode} aNode 节点对象\\n//      * @param {CompileSourceBuffer} sourceBuffer 编译源码的中间buffer\\n//      * @param {Component} owner 所属组件实例环境\\n//      */\\n//     compileSlot: function (aNode, sourceBuffer, owner) {\\n//         sourceBuffer.addRaw('(function () {');\\n// \\n//         sourceBuffer.addRaw('function $defaultSlotRender(componentCtx) {');\\n//         sourceBuffer.addRaw('  var html = \\\"\\\";');\\n//         each(aNode.children, function (aNodeChild) {\\n//             sourceBuffer.addRaw(aNodeCompiler.compile(aNodeChild, sourceBuffer, owner));\\n//         });\\n//         sourceBuffer.addRaw('  return html;');\\n//         sourceBuffer.addRaw('}');\\n// \\n//         sourceBuffer.addRaw('  var $givenSlot = [];');\\n// \\n//         var nameProp = getANodeProp(aNode, 'name');\\n//         if (nameProp) {\\n//             sourceBuffer.addRaw('var $slotName = ' + compileExprSource.expr(nameProp.expr) + ';');\\n//         }\\n//         else {\\n//             sourceBuffer.addRaw('var $slotName = null;');\\n//         }\\n// \\n//         sourceBuffer.addRaw('var $ctxGivenSlots = componentCtx.givenSlots;');\\n//         sourceBuffer.addRaw('for (var $i = 0; $i < $ctxGivenSlots.length; $i++) {');\\n//         sourceBuffer.addRaw('  if ($ctxGivenSlots[$i][1] == $slotName) {');\\n//         sourceBuffer.addRaw('    $givenSlot.push($ctxGivenSlots[$i][0]);');\\n//         sourceBuffer.addRaw('  }');\\n//         sourceBuffer.addRaw('}');\\n// \\n// \\n//         sourceBuffer.addRaw('var $isInserted = $givenSlot.length > 0;');\\n//         sourceBuffer.addRaw('if (!$isInserted) { $givenSlot.push($defaultSlotRender); }');\\n// \\n//         sourceBuffer.addRaw('var $slotCtx = $isInserted ? componentCtx.owner : componentCtx;');\\n//         if (aNode.vars) {\\n//             sourceBuffer.addRaw('$slotCtx = {data: extend({}, $slotCtx.data), filters: $slotCtx.filters, callFilter: $slotCtx.callFilter};'); // eslint-disable-line\\n//             each(aNode.vars, function (varItem) {\\n//                 sourceBuffer.addRaw(\\n//                     '$slotCtx.data[\\\"' + varItem.name + '\\\"] = '\\n//                     + compileExprSource.expr(varItem.expr)\\n//                     + ';'\\n//                 );\\n//             });\\n//         }\\n// \\n//         sourceBuffer.addRaw('for (var $renderIndex = 0; $renderIndex < $givenSlot.length; $renderIndex++) {');\\n//         sourceBuffer.addRaw('  html += $givenSlot[$renderIndex]($slotCtx);');\\n//         sourceBuffer.addRaw('}');\\n// \\n//         sourceBuffer.addRaw('})();');\\n//     },\\n// \\n//     /**\\n//      * 编译普通节点\\n//      *\\n//      * @param {ANode} aNode 节点对象\\n//      * @param {CompileSourceBuffer} sourceBuffer 编译源码的中间buffer\\n//      * @param {Component} owner 所属组件实例环境\\n//      * @param {Object} extra 编译所需的一些额外信息\\n//      */\\n//     compileElement: function (aNode, sourceBuffer, owner, extra) {\\n//         extra = extra || {};\\n//         // if (aNode.tagName === 'option'\\n//         //     && !getANodeProp(aNode, 'value')\\n//         //     && aNode.children[0]\\n//         // ) {\\n//         //     aNode.props.push({\\n//         //         name: 'value',\\n//         //         expr: aNode.children[0].textExpr\\n//         //     });\\n//         // }\\n// \\n//         elementSourceCompiler.tagStart(\\n//             sourceBuffer,\\n//             aNode.tagName,\\n//             aNode.props,\\n//             extra.prop\\n//         );\\n// \\n//         elementSourceCompiler.inner(sourceBuffer, aNode, owner);\\n//         elementSourceCompiler.tagEnd(sourceBuffer, aNode.tagName);\\n//     },\\n// \\n//     /**\\n//      * 编译组件节点\\n//      *\\n//      * @param {ANode} aNode 节点对象\\n//      * @param {CompileSourceBuffer} sourceBuffer 编译源码的中间buffer\\n//      * @param {Component} owner 所属组件实例环境\\n//      * @param {Object} extra 编译所需的一些额外信息\\n//      * @param {Function} extra.ComponentClass 对应组件类\\n//      */\\n//     compileComponent: function (aNode, sourceBuffer, owner, extra) {\\n//         if (aNode) {\\n//             sourceBuffer.addRaw('var $slotName = null;');\\n//             sourceBuffer.addRaw('var $givenSlots = [];');\\n//             each(aNode.children, function (child) {\\n//                 var slotBind = !child.textExpr && getANodeProp(child, 'slot');\\n//                 if (slotBind) {\\n//                     sourceBuffer.addRaw('$slotName = ' + compileExprSource.expr(slotBind.expr) + ';');\\n//                     sourceBuffer.addRaw('$givenSlots.push([function (componentCtx) {');\\n//                     sourceBuffer.addRaw('  var html = \\\"\\\";');\\n//                     sourceBuffer.addRaw(aNodeCompiler.compile(child, sourceBuffer, owner));\\n//                     sourceBuffer.addRaw('  return html;');\\n//                     sourceBuffer.addRaw('}, $slotName]);');\\n//                 }\\n//                 else {\\n//                     sourceBuffer.addRaw('$givenSlots.push([function (componentCtx) {');\\n//                     sourceBuffer.addRaw('  var html = \\\"\\\";');\\n//                     sourceBuffer.addRaw(aNodeCompiler.compile(child, sourceBuffer, owner));\\n//                     sourceBuffer.addRaw('  return html;');\\n//                     sourceBuffer.addRaw('}]);');\\n//                 }\\n//             });\\n//         }\\n// \\n//         var ComponentClass = extra.ComponentClass;\\n//         var component = new ComponentClass({\\n//             aNode: aNode,\\n//             owner: owner,\\n//             subTag: aNode.tagName\\n//         });\\n// \\n//         var givenData = [];\\n// \\n//         each(component.binds, function (prop) {\\n//             givenData.push(\\n//                 compileExprSource.stringLiteralize(prop.name)\\n//                 + ':'\\n//                 + compileExprSource.expr(prop.expr)\\n//             );\\n//         });\\n// \\n//         sourceBuffer.addRaw('html += (');\\n//         sourceBuffer.addRendererStart();\\n//         compileComponentSource(sourceBuffer, component, extra && extra.prop);\\n//         sourceBuffer.addRendererEnd();\\n//         sourceBuffer.addRaw(')({' + givenData.join(',\\\\n') + '}, componentCtx, $givenSlots);');\\n//         sourceBuffer.addRaw('$givenSlots = null;');\\n//     }\\n// };\\n// /* eslint-disable guard-for-in */\\n// \\n// /**\\n//  * 生成组件 renderer 时 ctx 对象构建的代码\\n//  *\\n//  * @inner\\n//  * @param {CompileSourceBuffer} sourceBuffer 编译源码的中间buffer\\n//  * @param {Object} component 组件实例\\n//  * @param {string?} extraProp 额外的属性串\\n//  */\\n// function compileComponentSource(sourceBuffer, component, extraProp) {\\n//     sourceBuffer.addRaw(genComponentContextCode(component));\\n//     sourceBuffer.addRaw('componentCtx.owner = parentCtx;');\\n//     sourceBuffer.addRaw('componentCtx.givenSlots = givenSlots;');\\n// \\n// \\n//     sourceBuffer.addRaw('data = extend(componentCtx.data, data);');\\n//     sourceBuffer.addRaw('for (var $i = 0; $i < componentCtx.computedNames.length; $i++) {');\\n//     sourceBuffer.addRaw('  var $computedName = componentCtx.computedNames[$i];');\\n//     sourceBuffer.addRaw('  data[$computedName] = componentCtx.computed[$computedName]();');\\n//     sourceBuffer.addRaw('}');\\n// \\n//     extraProp = extraProp || '';\\n// \\n//     var eventDeclarations = [];\\n//     for (var key in component.listeners) {\\n//         each(component.listeners[key], function (listener) {\\n//             if (listener.declaration) {\\n//                 eventDeclarations.push(listener.declaration);\\n//             }\\n//         });\\n//     }\\n// \\n//     elementSourceCompiler.tagStart(\\n//         sourceBuffer,\\n//         component.tagName,\\n//         component.aNode.props,\\n//         extraProp\\n//     );\\n// \\n//     if (!component.owner) {\\n//         sourceBuffer.joinString('\\x3c!--s-data:');\\n//         sourceBuffer.joinDataStringify();\\n//         sourceBuffer.joinString('--\\x3e');\\n//     }\\n// \\n// \\n// \\n//     elementSourceCompiler.inner(sourceBuffer, component.aNode, component);\\n//     elementSourceCompiler.tagEnd(sourceBuffer, component.tagName);\\n// }\\n// \\n// var stringifier = {\\n//     obj: function (source) {\\n//         var prefixComma;\\n//         var result = '{';\\n// \\n//         for (var key in source) {\\n//             if (typeof source[key] === 'undefined') {\\n//                 continue;\\n//             }\\n// \\n//             if (prefixComma) {\\n//                 result += ',';\\n//             }\\n//             prefixComma = 1;\\n// \\n//             result += compileExprSource.stringLiteralize(key) + ':' + stringifier.any(source[key]);\\n//         }\\n// \\n//         return result + '}';\\n//     },\\n// \\n//     arr: function (source) {\\n//         var prefixComma;\\n//         var result = '[';\\n// \\n//         each(source, function (value) {\\n//             if (prefixComma) {\\n//                 result += ',';\\n//             }\\n//             prefixComma = 1;\\n// \\n//             result += stringifier.any(value);\\n//         });\\n// \\n//         return result + ']';\\n//     },\\n// \\n//     str: function (source) {\\n//         return compileExprSource.stringLiteralize(source);\\n//     },\\n// \\n//     date: function (source) {\\n//         return 'new Date(' + source.getTime() + ')';\\n//     },\\n// \\n//     any: function (source) {\\n//         switch (typeof source) {\\n//             case 'string':\\n//                 return stringifier.str(source);\\n// \\n//             case 'number':\\n//                 return '' + source;\\n// \\n//             case 'boolean':\\n//                 return source ? 'true' : 'false';\\n// \\n//             case 'object':\\n//                 if (!source) {\\n//                     return null;\\n//                 }\\n// \\n//                 if (source instanceof Array) {\\n//                     return stringifier.arr(source);\\n//                 }\\n// \\n//                 if (source instanceof Date) {\\n//                     return stringifier.date(source);\\n//                 }\\n// \\n//                 return stringifier.obj(source);\\n//         }\\n// \\n//         throw new Error('Cannot Stringify:' + source);\\n//     }\\n// };\\n// \\n// /**\\n//  * 生成组件 renderer 时 ctx 对象构建的代码\\n//  *\\n//  * @inner\\n//  * @param {Object} component 组件实例\\n//  * @return {string}\\n//  */\\n// function genComponentContextCode(component) {\\n//     var code = ['var componentCtx = {'];\\n// \\n//     // given anode\\n//     code.push('givenSlots: [],');\\n// \\n//     // filters\\n//     code.push('filters: {');\\n//     var filterCode = [];\\n//     for (var key in component.filters) {\\n//         var filter = component.filters[key];\\n// \\n//         if (typeof filter === 'function') {\\n//             filterCode.push(key + ': ' + filter.toString());\\n//         }\\n//     }\\n//     code.push(filterCode.join(','));\\n//     code.push('},');\\n// \\n//     code.push(\\n//         'callFilter: function (name, args) {',\\n//         '    var filter = this.filters[name] || DEFAULT_FILTERS[name];',\\n//         '    if (typeof filter === \\\"function\\\") {',\\n//         '        return filter.apply(this, args);',\\n//         '    }',\\n//         '},'\\n//     );\\n// \\n//     /* eslint-disable no-redeclare */\\n//     // computed obj\\n//     code.push('computed: {');\\n//     var computedCode = [];\\n//     for (var key in component.computed) {\\n//         var computed = component.computed[key];\\n// \\n//         if (typeof computed === 'function') {\\n//             computedCode.push(key + ': '\\n//                 + computed.toString().replace(\\n//                     /this.data.get\\\\(([^\\\\)]+)\\\\)/g,\\n//                     function (match, exprLiteral) {\\n//                         var exprStr = (new Function('return ' + exprLiteral))();\\n//                         var expr = parseExpr(exprStr);\\n// \\n//                         return compileExprSource.expr(expr);\\n//                     })\\n//             );\\n//         }\\n//     }\\n//     code.push(computedCode.join(','));\\n//     code.push('},');\\n// \\n//     // computed names\\n//     code.push('computedNames: [');\\n//     computedCode = [];\\n//     for (var key in component.computed) {\\n//         var computed = component.computed[key];\\n// \\n//         if (typeof computed === 'function') {\\n//             computedCode.push('\\\"' + key + '\\\"');\\n//         }\\n//     }\\n//     code.push(computedCode.join(','));\\n//     code.push('],');\\n//     /* eslint-enable no-redeclare */\\n// \\n//     // data\\n//     code.push('data: ' + stringifier.any(component.data.get()) + ',');\\n// \\n//     // tagName\\n//     code.push('tagName: \\\"' + component.tagName + '\\\"');\\n//     code.push('};');\\n// \\n//     return code.join('\\\\n');\\n// }\\n// \\n// /* eslint-enable guard-for-in */\\n// \\n// /* eslint-disable no-unused-vars */\\n// /* eslint-disable fecs-camelcase */\\n// \\n// /**\\n//  * 组件编译的模板函数\\n//  *\\n//  * @inner\\n//  */\\n// function componentCompilePreCode() {\\n//     var $version = '3.5.7';\\n// \\n//     function extend(target, source) {\\n//         if (source) {\\n//             Object.keys(source).forEach(function (key) {\\n//                 let value = source[key];\\n//                 if (typeof value !== 'undefined') {\\n//                     target[key] = value;\\n//                 }\\n//             });\\n//         }\\n// \\n//         return target;\\n//     }\\n// \\n//     function each(array, iterator) {\\n//         if (array && array.length > 0) {\\n//             for (var i = 0, l = array.length; i < l; i++) {\\n//                 if (iterator(array[i], i) === false) {\\n//                     break;\\n//                 }\\n//             }\\n//         }\\n//     }\\n// \\n//     function contains(array, value) {\\n//         var result;\\n//         each(array, function (item) {\\n//             result = item === value;\\n//             return !result;\\n//         });\\n// \\n//         return result;\\n//     }\\n// \\n//     var HTML_ENTITY = {\\n//         /* jshint ignore:start */\\n//         '&': '&amp;',\\n//         '<': '&lt;',\\n//         '>': '&gt;',\\n//         '\\\"': '&quot;',\\n//         /* eslint-disable quotes */\\n//         \\\"'\\\": '&#39;'\\n//         /* eslint-enable quotes */\\n//         /* jshint ignore:end */\\n//     };\\n// \\n//     function htmlFilterReplacer(c) {\\n//         return HTML_ENTITY[c];\\n//     }\\n// \\n//     function escapeHTML(source) {\\n//         if (source == null) {\\n//             return '';\\n//         }\\n// \\n//         return String(source).replace(/[&<>\\\"']/g, htmlFilterReplacer);\\n//     }\\n// \\n//     var DEFAULT_FILTERS = {\\n//         url: encodeURIComponent,\\n//         _class: function (source) {\\n//             if (source instanceof Array) {\\n//                 return source.join(' ');\\n//             }\\n// \\n//             return source;\\n//         },\\n//         _style: function (source) {\\n//             if (typeof source === 'object') {\\n//                 var result = '';\\n//                 if (source) {\\n//                     Object.keys(source).forEach(function (key) {\\n//                         result += key + ':' + source[key] + ';';\\n//                     });\\n//                 }\\n// \\n//                 return result;\\n//             }\\n// \\n//             return source || '';\\n//         },\\n//         _sep: function (source, sep) {\\n//             return source ? sep + source : '';\\n//         }\\n//     };\\n// \\n//     function attrFilter(name, value) {\\n//         if (value) {\\n//             return ' ' + name + '=\\\"' + value + '\\\"';\\n//         }\\n// \\n//         return '';\\n//     }\\n// \\n//     function boolAttrFilter(name, value) {\\n//         if (value && value !== 'false' && value !== '0') {\\n//             return ' ' + name;\\n//         }\\n// \\n//         return '';\\n//     }\\n// \\n//     function stringLiteralize(source) {\\n//         return '\\\"'\\n//             + source\\n//                 .replace(/\\\\x5C/g, '\\\\\\\\\\\\\\\\')\\n//                 .replace(/\\\"/g, '\\\\\\\\\\\"')\\n//                 .replace(/\\\\x0A/g, '\\\\\\\\n')\\n//                 .replace(/\\\\x09/g, '\\\\\\\\t')\\n//                 .replace(/\\\\x0D/g, '\\\\\\\\r')\\n//             + '\\\"';\\n//     }\\n// \\n//     var stringifier = {\\n//         obj: function (source) {\\n//             var prefixComma;\\n//             var result = '{';\\n// \\n//             Object.keys(source).forEach(function (key) {\\n//                 if (typeof source[key] === 'undefined') {\\n//                     return;\\n//                 }\\n// \\n//                 if (prefixComma) {\\n//                     result += ',';\\n//                 }\\n//                 prefixComma = 1;\\n// \\n//                 result += stringLiteralize(key) + ':' + stringifier.any(source[key]);\\n//             });\\n// \\n//             return result + '}';\\n//         },\\n// \\n//         arr: function (source) {\\n//             var prefixComma;\\n//             var result = '[';\\n// \\n//             each(source, function (value) {\\n//                 if (prefixComma) {\\n//                     result += ',';\\n//                 }\\n//                 prefixComma = 1;\\n// \\n//                 result += stringifier.any(value);\\n//             });\\n// \\n//             return result + ']';\\n//         },\\n// \\n//         str: function (source) {\\n//             return stringLiteralize(source);\\n//         },\\n// \\n//         date: function (source) {\\n//             return 'new Date(' + source.getTime() + ')';\\n//         },\\n// \\n//         any: function (source) {\\n//             switch (typeof source) {\\n//                 case 'string':\\n//                     return stringifier.str(source);\\n// \\n//                 case 'number':\\n//                     return '' + source;\\n// \\n//                 case 'boolean':\\n//                     return source ? 'true' : 'false';\\n// \\n//                 case 'object':\\n//                     if (!source) {\\n//                         return null;\\n//                     }\\n// \\n//                     if (source instanceof Array) {\\n//                         return stringifier.arr(source);\\n//                     }\\n// \\n//                     if (source instanceof Date) {\\n//                         return stringifier.date(source);\\n//                     }\\n// \\n//                     return stringifier.obj(source);\\n//             }\\n// \\n//             throw new Error('Cannot Stringify:' + source);\\n//         }\\n//     };\\n// }\\n// /* eslint-enable no-unused-vars */\\n// /* eslint-enable fecs-camelcase */\\n// \\n// /**\\n//  * 将组件编译成 render 方法的 js 源码\\n//  *\\n//  * @param {Function} ComponentClass 组件类\\n//  * @return {string}\\n//  */\\n// function compileJSSource(ComponentClass) {\\n//     var sourceBuffer = new CompileSourceBuffer();\\n// \\n//     sourceBuffer.addRendererStart();\\n//     sourceBuffer.addRaw(\\n//         componentCompilePreCode.toString()\\n//             .split('\\\\n')\\n//             .slice(1)\\n//             .join('\\\\n')\\n//             .replace(/\\\\}\\\\s*$/, '')\\n//     );\\n// \\n//     // 先初始化个实例，让模板编译成 ANode，并且能获得初始化数据\\n//     var component = new ComponentClass();\\n// \\n//     compileComponentSource(sourceBuffer, component);\\n//     sourceBuffer.addRendererEnd();\\n//     return sourceBuffer.toCode();\\n// }\\n// #[end]\\n\\n// exports = module.exports = compileJSSource;\\n\\n    /* eslint-disable no-unused-vars */\\n//     var nextTick = require('./util/next-tick');\\n//     var inherits = require('./util/inherits');\\n//     var parseTemplate = require('./parser/parse-template');\\n//     var parseExpr = require('./parser/parse-expr');\\n//     var ExprType = require('./parser/expr-type');\\n//     var LifeCycle = require('./view/life-cycle');\\n//     var NodeType = require('./view/node-type');\\n//     var Component = require('./view/component');\\n//     var compileComponent = require('./view/compile-component');\\n//     var defineComponent = require('./view/define-component');\\n//     var emitDevtool = require('./util/emit-devtool');\\n//     var compileJSSource = require('./view/compile-js-source');\\n//     var Data = require('./runtime/data');\\n//     var evalExpr = require('./runtime/eval-expr');\\n//     var DataTypes = require('./util/data-types');\\n\\n\\n    var san = {\\n        /**\\n         * san版本号\\n         *\\n         * @type {string}\\n         */\\n        version: '3.5.7',\\n\\n        // #[begin] devtool\\n        /**\\n         * 是否开启调试。开启调试时 devtool 会工作\\n         *\\n         * @type {boolean}\\n         */\\n        debug: true,\\n        // #[end]\\n\\n        // #[begin] ssr\\n//         /**\\n//          * 将组件类编译成 renderer 方法\\n//          *\\n//          * @param {Function} ComponentClass 组件类\\n//          * @return {function(Object):string}\\n//          */\\n//         compileToRenderer: function (ComponentClass) {\\n//             var renderer = ComponentClass.__ssrRenderer;\\n// \\n//             if (!renderer) {\\n//                 var code = compileJSSource(ComponentClass);\\n//                 renderer = (new Function('return ' + code))();\\n//                 ComponentClass.__ssrRenderer = renderer;\\n//             }\\n// \\n//             return renderer;\\n//         },\\n// \\n//         /**\\n//          * 将组件类编译成 renderer 方法的源文件\\n//          *\\n//          * @param {Function} ComponentClass 组件类\\n//          * @return {string}\\n//          */\\n//         compileToSource: compileJSSource,\\n        // #[end]\\n\\n        /**\\n         * 组件基类\\n         *\\n         * @type {Function}\\n         */\\n        Component: Component,\\n\\n        /**\\n         * 创建组件类\\n         *\\n         * @param {Object} proto 组件类的方法表\\n         * @return {Function}\\n         */\\n        defineComponent: defineComponent,\\n\\n        /**\\n         * 编译组件类。预解析template和components\\n         *\\n         * @param {Function} ComponentClass 组件类\\n         */\\n        compileComponent: compileComponent,\\n\\n        /**\\n         * 解析 template\\n         *\\n         * @inner\\n         * @param {string} source template 源码\\n         * @return {ANode}\\n         */\\n        parseTemplate: parseTemplate,\\n\\n        /**\\n         * 解析表达式\\n         *\\n         * @param {string} source 源码\\n         * @return {Object}\\n         */\\n        parseExpr: parseExpr,\\n\\n        /**\\n         * 表达式类型枚举\\n         *\\n         * @const\\n         * @type {Object}\\n         */\\n        ExprType: ExprType,\\n\\n        /**\\n         * 生命周期\\n         */\\n        LifeCycle: LifeCycle,\\n\\n        /**\\n         * 节点类型\\n         *\\n         * @const\\n         * @type {Object}\\n         */\\n        NodeType: NodeType,\\n\\n        /**\\n         * 在下一个更新周期运行函数\\n         *\\n         * @param {Function} fn 要运行的函数\\n         */\\n        nextTick: nextTick,\\n\\n        /**\\n         * 数据类\\n         *\\n         * @class\\n         * @param {Object?} data 初始数据\\n         * @param {Data?} parent 父级数据对象\\n         */\\n        Data: Data,\\n\\n        /**\\n         * 计算表达式的值\\n         *\\n         * @param {Object} expr 表达式对象\\n         * @param {Data} data 数据对象\\n         * @param {Component=} owner 组件对象，用于表达式中filter的执行\\n         * @return {*}\\n         */\\n        evalExpr: evalExpr,\\n\\n        /**\\n         * 构建类之间的继承关系\\n         *\\n         * @param {Function} subClass 子类函数\\n         * @param {Function} superClass 父类函数\\n         */\\n        inherits: inherits,\\n\\n        /**\\n         * DataTypes\\n         *\\n         * @type {Object}\\n         */\\n        DataTypes: DataTypes\\n    };\\n\\n    // export\\n    if (true) {\\n        // For CommonJS\\n        exports = module.exports = san;\\n    }\\n    else {}\\n\\n    // #[begin] devtool\\n    emitDevtool.start(san);\\n    // #[end]\\n})(this);\\n\\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(14).setImmediate))//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\\n//# sourceURL=webpack-internal:///3\\n\")},function(module,exports){eval('module.exports = \"\\\\n<div class=\\\\\"hello\\\\\">hello {{msg}}</div>\\\\n\";//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvaGVsbG8uc2FuPzJhNzkiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsaURBQWlELEtBQUsiLCJmaWxlIjoiNC5qcyIsInNvdXJjZXNDb250ZW50IjpbIm1vZHVsZS5leHBvcnRzID0gXCJcXG48ZGl2IGNsYXNzPVxcXCJoZWxsb1xcXCI+aGVsbG8ge3ttc2d9fTwvZGl2PlxcblwiOyJdLCJzb3VyY2VSb290IjoiIn0=\\n//# sourceURL=webpack-internal:///4\\n')},function(module,exports,__webpack_require__){\"use strict\";eval('\\n\\nObject.defineProperty(exports, \"__esModule\", {\\n    value: true\\n});\\n// <template>\\n//     <div class=\"hello\">hello {{msg}}</div>\\n// </template>\\n//\\n// <script>\\nexports.default = {\\n    initData: function initData() {\\n        return {\\n            msg: \\'world~~~~~\\'\\n        };\\n    }\\n};\\n// <\\/script>\\n//\\n// <style>\\n//     .hello {\\n//         color: blue;\\n//     }\\n// </style>\\n/* generated by san-loader *///# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vaGVsbG8uc2FuPzg0MTkiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBS0E7O2tDQUVBOztpQkFHQTtBQUZBO0FBR0E7QUFMQSIsImZpbGUiOiI1LmpzIiwic291cmNlc0NvbnRlbnQiOlsiPHRlbXBsYXRlPlxuICAgIDxkaXYgY2xhc3M9XCJoZWxsb1wiPmhlbGxvIHt7bXNnfX08L2Rpdj5cbjwvdGVtcGxhdGU+XG5cbjxzY3JpcHQ+XG4gICAgZXhwb3J0IGRlZmF1bHQge1xuICAgICAgICBpbml0RGF0YSAoKSB7XG4gICAgICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgICAgIG1zZzogJ3dvcmxkfn5+fn4nXG4gICAgICAgICAgICB9O1xuICAgICAgICB9XG4gICAgfVxuPC9zY3JpcHQ+XG5cbjxzdHlsZT5cbiAgICAuaGVsbG8ge1xuICAgICAgICBjb2xvcjogYmx1ZTtcbiAgICB9XG48L3N0eWxlPiJdLCJzb3VyY2VSb290IjoiIn0=\\n//# sourceURL=webpack-internal:///5\\n')},function(module,exports,__webpack_require__){eval('exports = module.exports = __webpack_require__(1)(true);\\n// imports\\n\\n\\n// module\\nexports.push([module.i, \"\\\\n\\\\n\\\\n\\\\n\\\\n\\\\n\\\\n\\\\n\\\\n\\\\n\\\\n\\\\n\\\\n\\\\n\\\\n.hello {\\\\n    color: blue;\\\\n}\\\\n\", \"\", {\"version\":3,\"sources\":[\"/Users/liyuze/WebstormProjects/WebpackAndSan/src/hello.san?104008bc\"],\"names\":[],\"mappings\":\";;;;;;;;;;;;;;;AAeA;IACA,YAAA;CACA\",\"file\":\"hello.san\",\"sourcesContent\":[\"<template>\\\\n    <div class=\\\\\"hello\\\\\">hello {{msg}}</div>\\\\n</template>\\\\n\\\\n<script>\\\\n    export default {\\\\n        initData () {\\\\n            return {\\\\n                msg: \\'world~~~~~\\'\\\\n            };\\\\n        }\\\\n    }\\\\n<\\/script>\\\\n\\\\n<style>\\\\n    .hello {\\\\n        color: blue;\\\\n    }\\\\n</style>\"],\"sourceRoot\":\"\"}]);\\n\\n// exports\\n//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvaGVsbG8uc2FuP2NiYTAiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTs7O0FBR0E7QUFDQSwrREFBZ0Usa0JBQWtCLEdBQUcsVUFBVSxvSUFBb0ksS0FBSyxVQUFVLHlGQUF5RixLQUFLLHFEQUFxRCx1QkFBdUIsc0JBQXNCLG1EQUFtRCxXQUFXLE9BQU8sb0NBQW9DLHNCQUFzQixPQUFPLDZCQUE2Qjs7QUFFcmxCIiwiZmlsZSI6IjYuanMiLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnRzID0gbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKFwiLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvbGliL2Nzcy1iYXNlLmpzXCIpKHRydWUpO1xuLy8gaW1wb3J0c1xuXG5cbi8vIG1vZHVsZVxuZXhwb3J0cy5wdXNoKFttb2R1bGUuaWQsIFwiXFxuXFxuXFxuXFxuXFxuXFxuXFxuXFxuXFxuXFxuXFxuXFxuXFxuXFxuXFxuLmhlbGxvIHtcXG4gICAgY29sb3I6IGJsdWU7XFxufVxcblwiLCBcIlwiLCB7XCJ2ZXJzaW9uXCI6MyxcInNvdXJjZXNcIjpbXCIvVXNlcnMvbGl5dXplL1dlYnN0b3JtUHJvamVjdHMvV2VicGFja0FuZFNhbi9zcmMvaGVsbG8uc2FuPzEwNDAwOGJjXCJdLFwibmFtZXNcIjpbXSxcIm1hcHBpbmdzXCI6XCI7Ozs7Ozs7Ozs7Ozs7OztBQWVBO0lBQ0EsWUFBQTtDQUNBXCIsXCJmaWxlXCI6XCJoZWxsby5zYW5cIixcInNvdXJjZXNDb250ZW50XCI6W1wiPHRlbXBsYXRlPlxcbiAgICA8ZGl2IGNsYXNzPVxcXCJoZWxsb1xcXCI+aGVsbG8ge3ttc2d9fTwvZGl2PlxcbjwvdGVtcGxhdGU+XFxuXFxuPHNjcmlwdD5cXG4gICAgZXhwb3J0IGRlZmF1bHQge1xcbiAgICAgICAgaW5pdERhdGEgKCkge1xcbiAgICAgICAgICAgIHJldHVybiB7XFxuICAgICAgICAgICAgICAgIG1zZzogJ3dvcmxkfn5+fn4nXFxuICAgICAgICAgICAgfTtcXG4gICAgICAgIH1cXG4gICAgfVxcbjwvc2NyaXB0PlxcblxcbjxzdHlsZT5cXG4gICAgLmhlbGxvIHtcXG4gICAgICAgIGNvbG9yOiBibHVlO1xcbiAgICB9XFxuPC9zdHlsZT5cIl0sXCJzb3VyY2VSb290XCI6XCJcIn1dKTtcblxuLy8gZXhwb3J0c1xuIl0sInNvdXJjZVJvb3QiOiIifQ==\\n//# sourceURL=webpack-internal:///6\\n')},function(module,exports,__webpack_require__){eval(\"\\nvar content = __webpack_require__(6);\\n\\nif(typeof content === 'string') content = [[module.i, content, '']];\\n\\nvar transform;\\nvar insertInto;\\n\\n\\n\\nvar options = {\\\"hmr\\\":true}\\n\\noptions.transform = transform\\noptions.insertInto = undefined;\\n\\nvar update = __webpack_require__(0)(content, options);\\n\\nif(content.locals) module.exports = content.locals;\\n\\nif(false) {}//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvaGVsbG8uc2FuP2M0OGQiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUNBOztBQUVBOztBQUVBO0FBQ0E7Ozs7QUFJQSxlQUFlOztBQUVmO0FBQ0E7O0FBRUE7O0FBRUE7O0FBRUEiLCJmaWxlIjoiNy5qcyIsInNvdXJjZXNDb250ZW50IjpbIlxudmFyIGNvbnRlbnQgPSByZXF1aXJlKFwiISEuLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9pbmRleC5qcz9zb3VyY2VNYXAhLi4vbm9kZV9tb2R1bGVzL3Nhbi1sb2FkZXIvbGliL3N0eWxlLXJld3JpdGVyLmpzIS4uL25vZGVfbW9kdWxlcy9zYW4tbG9hZGVyL2xpYi9zZWxlY3Rvci5qcz90eXBlPXN0eWxlJmluZGV4PTAhLi9oZWxsby5zYW5cIik7XG5cbmlmKHR5cGVvZiBjb250ZW50ID09PSAnc3RyaW5nJykgY29udGVudCA9IFtbbW9kdWxlLmlkLCBjb250ZW50LCAnJ11dO1xuXG52YXIgdHJhbnNmb3JtO1xudmFyIGluc2VydEludG87XG5cblxuXG52YXIgb3B0aW9ucyA9IHtcImhtclwiOnRydWV9XG5cbm9wdGlvbnMudHJhbnNmb3JtID0gdHJhbnNmb3JtXG5vcHRpb25zLmluc2VydEludG8gPSB1bmRlZmluZWQ7XG5cbnZhciB1cGRhdGUgPSByZXF1aXJlKFwiIS4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvbGliL2FkZFN0eWxlcy5qc1wiKShjb250ZW50LCBvcHRpb25zKTtcblxuaWYoY29udGVudC5sb2NhbHMpIG1vZHVsZS5leHBvcnRzID0gY29udGVudC5sb2NhbHM7XG5cbmlmKG1vZHVsZS5ob3QpIHtcblx0bW9kdWxlLmhvdC5hY2NlcHQoXCIhIS4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2luZGV4LmpzP3NvdXJjZU1hcCEuLi9ub2RlX21vZHVsZXMvc2FuLWxvYWRlci9saWIvc3R5bGUtcmV3cml0ZXIuanMhLi4vbm9kZV9tb2R1bGVzL3Nhbi1sb2FkZXIvbGliL3NlbGVjdG9yLmpzP3R5cGU9c3R5bGUmaW5kZXg9MCEuL2hlbGxvLnNhblwiLCBmdW5jdGlvbigpIHtcblx0XHR2YXIgbmV3Q29udGVudCA9IHJlcXVpcmUoXCIhIS4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2luZGV4LmpzP3NvdXJjZU1hcCEuLi9ub2RlX21vZHVsZXMvc2FuLWxvYWRlci9saWIvc3R5bGUtcmV3cml0ZXIuanMhLi4vbm9kZV9tb2R1bGVzL3Nhbi1sb2FkZXIvbGliL3NlbGVjdG9yLmpzP3R5cGU9c3R5bGUmaW5kZXg9MCEuL2hlbGxvLnNhblwiKTtcblxuXHRcdGlmKHR5cGVvZiBuZXdDb250ZW50ID09PSAnc3RyaW5nJykgbmV3Q29udGVudCA9IFtbbW9kdWxlLmlkLCBuZXdDb250ZW50LCAnJ11dO1xuXG5cdFx0dmFyIGxvY2FscyA9IChmdW5jdGlvbihhLCBiKSB7XG5cdFx0XHR2YXIga2V5LCBpZHggPSAwO1xuXG5cdFx0XHRmb3Ioa2V5IGluIGEpIHtcblx0XHRcdFx0aWYoIWIgfHwgYVtrZXldICE9PSBiW2tleV0pIHJldHVybiBmYWxzZTtcblx0XHRcdFx0aWR4Kys7XG5cdFx0XHR9XG5cblx0XHRcdGZvcihrZXkgaW4gYikgaWR4LS07XG5cblx0XHRcdHJldHVybiBpZHggPT09IDA7XG5cdFx0fShjb250ZW50LmxvY2FscywgbmV3Q29udGVudC5sb2NhbHMpKTtcblxuXHRcdGlmKCFsb2NhbHMpIHRocm93IG5ldyBFcnJvcignQWJvcnRpbmcgQ1NTIEhNUiBkdWUgdG8gY2hhbmdlZCBjc3MtbW9kdWxlcyBsb2NhbHMuJyk7XG5cblx0XHR1cGRhdGUobmV3Q29udGVudCk7XG5cdH0pO1xuXG5cdG1vZHVsZS5ob3QuZGlzcG9zZShmdW5jdGlvbigpIHsgdXBkYXRlKCk7IH0pO1xufSJdLCJzb3VyY2VSb290IjoiIn0=\\n//# sourceURL=webpack-internal:///7\\n\")},function(module,exports,__webpack_require__){eval(\"var __san_script__, __san_template__\\nvar __san_styles__ = {}\\n__webpack_require__(7)\\n__san_script__ = __webpack_require__(5)\\nif (__san_script__ &&\\n    __san_script__.__esModule &&\\n    Object.keys(__san_script__).length > 1) {\\n  console.warn(\\\"[san-loader] src/hello.san: named exports in *.san files are ignored.\\\")}\\n__san_template__ = __webpack_require__(4)\\nvar __san_proto__ = {}\\nif (__san_script__) {\\n  __san_proto__ = __san_script__.__esModule\\n    ? __san_script__['default']\\n    : __san_script__\\n}\\nif (__san_template__) {\\n  __san_proto__.template = __san_template__\\n}\\nvar san = __webpack_require__(3)\\nvar __san_exports__ = san.defineComponent(__san_proto__)\\nmodule.exports = __san_exports__\\nif (module.exports.__esModule) module.exports = module.exports['default']\\nif (!__san_exports__.computed) __san_exports__.computed = {}\\nObject.keys(__san_styles__).forEach(function (key) {\\nvar module = __san_styles__[key]\\n__san_exports__.computed[key] = function () { return module }\\n})\\n//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvaGVsbG8uc2FuPzFkYjkiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw2Q0FBNkM7QUFDN0MsQ0FBQyIsImZpbGUiOiI4LmpzIiwic291cmNlc0NvbnRlbnQiOlsidmFyIF9fc2FuX3NjcmlwdF9fLCBfX3Nhbl90ZW1wbGF0ZV9fXG52YXIgX19zYW5fc3R5bGVzX18gPSB7fVxucmVxdWlyZShcIiEhc3R5bGUtbG9hZGVyIWNzcy1sb2FkZXI/c291cmNlTWFwIS4uL25vZGVfbW9kdWxlcy9zYW4tbG9hZGVyL2xpYi9zdHlsZS1yZXdyaXRlci5qcyEuLi9ub2RlX21vZHVsZXMvc2FuLWxvYWRlci9saWIvc2VsZWN0b3IuanM/dHlwZT1zdHlsZSZpbmRleD0wIS4vaGVsbG8uc2FuXCIpXG5fX3Nhbl9zY3JpcHRfXyA9IHJlcXVpcmUoXCIhIWJhYmVsLWxvYWRlciEuLi9ub2RlX21vZHVsZXMvc2FuLWxvYWRlci9saWIvc2VsZWN0b3IuanM/dHlwZT1zY3JpcHQmaW5kZXg9MCEuL2hlbGxvLnNhblwiKVxuaWYgKF9fc2FuX3NjcmlwdF9fICYmXG4gICAgX19zYW5fc2NyaXB0X18uX19lc01vZHVsZSAmJlxuICAgIE9iamVjdC5rZXlzKF9fc2FuX3NjcmlwdF9fKS5sZW5ndGggPiAxKSB7XG4gIGNvbnNvbGUud2FybihcIltzYW4tbG9hZGVyXSBzcmMvaGVsbG8uc2FuOiBuYW1lZCBleHBvcnRzIGluICouc2FuIGZpbGVzIGFyZSBpZ25vcmVkLlwiKX1cbl9fc2FuX3RlbXBsYXRlX18gPSByZXF1aXJlKFwiISFodG1sLWxvYWRlcj9taW5pbWl6ZT1mYWxzZSEuLi9ub2RlX21vZHVsZXMvc2FuLWxvYWRlci9saWIvc2VsZWN0b3IuanM/dHlwZT10ZW1wbGF0ZSZpbmRleD0wIS4vaGVsbG8uc2FuXCIpXG52YXIgX19zYW5fcHJvdG9fXyA9IHt9XG5pZiAoX19zYW5fc2NyaXB0X18pIHtcbiAgX19zYW5fcHJvdG9fXyA9IF9fc2FuX3NjcmlwdF9fLl9fZXNNb2R1bGVcbiAgICA/IF9fc2FuX3NjcmlwdF9fWydkZWZhdWx0J11cbiAgICA6IF9fc2FuX3NjcmlwdF9fXG59XG5pZiAoX19zYW5fdGVtcGxhdGVfXykge1xuICBfX3Nhbl9wcm90b19fLnRlbXBsYXRlID0gX19zYW5fdGVtcGxhdGVfX1xufVxudmFyIHNhbiA9IHJlcXVpcmUoXCJzYW5cIilcbnZhciBfX3Nhbl9leHBvcnRzX18gPSBzYW4uZGVmaW5lQ29tcG9uZW50KF9fc2FuX3Byb3RvX18pXG5tb2R1bGUuZXhwb3J0cyA9IF9fc2FuX2V4cG9ydHNfX1xuaWYgKG1vZHVsZS5leHBvcnRzLl9fZXNNb2R1bGUpIG1vZHVsZS5leHBvcnRzID0gbW9kdWxlLmV4cG9ydHNbJ2RlZmF1bHQnXVxuaWYgKCFfX3Nhbl9leHBvcnRzX18uY29tcHV0ZWQpIF9fc2FuX2V4cG9ydHNfXy5jb21wdXRlZCA9IHt9XG5PYmplY3Qua2V5cyhfX3Nhbl9zdHlsZXNfXykuZm9yRWFjaChmdW5jdGlvbiAoa2V5KSB7XG52YXIgbW9kdWxlID0gX19zYW5fc3R5bGVzX19ba2V5XVxuX19zYW5fZXhwb3J0c19fLmNvbXB1dGVkW2tleV0gPSBmdW5jdGlvbiAoKSB7IHJldHVybiBtb2R1bGUgfVxufSlcbiJdLCJzb3VyY2VSb290IjoiIn0=\\n//# sourceURL=webpack-internal:///8\\n\")},function(module,exports){eval('\\n/**\\n * When source maps are enabled, `style-loader` uses a link element with a data-uri to\\n * embed the css on the page. This breaks all relative urls because now they are relative to a\\n * bundle instead of the current page.\\n *\\n * One solution is to only use full urls, but that may be impossible.\\n *\\n * Instead, this function \"fixes\" the relative urls to be absolute according to the current page location.\\n *\\n * A rudimentary test suite is located at `test/fixUrls.js` and can be run via the `npm test` command.\\n *\\n */\\n\\nmodule.exports = function (css) {\\n  // get current location\\n  var location = typeof window !== \"undefined\" && window.location;\\n\\n  if (!location) {\\n    throw new Error(\"fixUrls requires window.location\");\\n  }\\n\\n\\t// blank or null?\\n\\tif (!css || typeof css !== \"string\") {\\n\\t  return css;\\n  }\\n\\n  var baseUrl = location.protocol + \"//\" + location.host;\\n  var currentDir = baseUrl + location.pathname.replace(/\\\\/[^\\\\/]*$/, \"/\");\\n\\n\\t// convert each url(...)\\n\\t/*\\n\\tThis regular expression is just a way to recursively match brackets within\\n\\ta string.\\n\\n\\t /url\\\\s*\\\\(  = Match on the word \"url\" with any whitespace after it and then a parens\\n\\t   (  = Start a capturing group\\n\\t     (?:  = Start a non-capturing group\\n\\t         [^)(]  = Match anything that isn\\'t a parentheses\\n\\t         |  = OR\\n\\t         \\\\(  = Match a start parentheses\\n\\t             (?:  = Start another non-capturing groups\\n\\t                 [^)(]+  = Match anything that isn\\'t a parentheses\\n\\t                 |  = OR\\n\\t                 \\\\(  = Match a start parentheses\\n\\t                     [^)(]*  = Match anything that isn\\'t a parentheses\\n\\t                 \\\\)  = Match a end parentheses\\n\\t             )  = End Group\\n              *\\\\) = Match anything and then a close parens\\n          )  = Close non-capturing group\\n          *  = Match anything\\n       )  = Close capturing group\\n\\t \\\\)  = Match a close parens\\n\\n\\t /gi  = Get all matches, not the first.  Be case insensitive.\\n\\t */\\n\\tvar fixedCss = css.replace(/url\\\\s*\\\\(((?:[^)(]|\\\\((?:[^)(]+|\\\\([^)(]*\\\\))*\\\\))*)\\\\)/gi, function(fullMatch, origUrl) {\\n\\t\\t// strip quotes (if they exist)\\n\\t\\tvar unquotedOrigUrl = origUrl\\n\\t\\t\\t.trim()\\n\\t\\t\\t.replace(/^\"(.*)\"$/, function(o, $1){ return $1; })\\n\\t\\t\\t.replace(/^\\'(.*)\\'$/, function(o, $1){ return $1; });\\n\\n\\t\\t// already a full url? no change\\n\\t\\tif (/^(#|data:|http:\\\\/\\\\/|https:\\\\/\\\\/|file:\\\\/\\\\/\\\\/|\\\\s*$)/i.test(unquotedOrigUrl)) {\\n\\t\\t  return fullMatch;\\n\\t\\t}\\n\\n\\t\\t// convert the url to a full url\\n\\t\\tvar newUrl;\\n\\n\\t\\tif (unquotedOrigUrl.indexOf(\"//\") === 0) {\\n\\t\\t  \\t//TODO: should we add protocol?\\n\\t\\t\\tnewUrl = unquotedOrigUrl;\\n\\t\\t} else if (unquotedOrigUrl.indexOf(\"/\") === 0) {\\n\\t\\t\\t// path should be relative to the base url\\n\\t\\t\\tnewUrl = baseUrl + unquotedOrigUrl; // already starts with \\'/\\'\\n\\t\\t} else {\\n\\t\\t\\t// path should be relative to current directory\\n\\t\\t\\tnewUrl = currentDir + unquotedOrigUrl.replace(/^\\\\.\\\\//, \"\"); // Strip leading \\'./\\'\\n\\t\\t}\\n\\n\\t\\t// send back the fixed url(...)\\n\\t\\treturn \"url(\" + JSON.stringify(newUrl) + \")\";\\n\\t});\\n\\n\\t// send back the fixed css\\n\\treturn fixedCss;\\n};\\n//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2xpYi91cmxzLmpzP2Y2ZDMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHdDQUF3QyxXQUFXLEVBQUU7QUFDckQsd0NBQXdDLFdBQVcsRUFBRTs7QUFFckQ7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQSxzQ0FBc0M7QUFDdEMsR0FBRztBQUNIO0FBQ0EsOERBQThEO0FBQzlEOztBQUVBO0FBQ0E7QUFDQSxFQUFFOztBQUVGO0FBQ0E7QUFDQSIsImZpbGUiOiI5LmpzIiwic291cmNlc0NvbnRlbnQiOlsiXG4vKipcbiAqIFdoZW4gc291cmNlIG1hcHMgYXJlIGVuYWJsZWQsIGBzdHlsZS1sb2FkZXJgIHVzZXMgYSBsaW5rIGVsZW1lbnQgd2l0aCBhIGRhdGEtdXJpIHRvXG4gKiBlbWJlZCB0aGUgY3NzIG9uIHRoZSBwYWdlLiBUaGlzIGJyZWFrcyBhbGwgcmVsYXRpdmUgdXJscyBiZWNhdXNlIG5vdyB0aGV5IGFyZSByZWxhdGl2ZSB0byBhXG4gKiBidW5kbGUgaW5zdGVhZCBvZiB0aGUgY3VycmVudCBwYWdlLlxuICpcbiAqIE9uZSBzb2x1dGlvbiBpcyB0byBvbmx5IHVzZSBmdWxsIHVybHMsIGJ1dCB0aGF0IG1heSBiZSBpbXBvc3NpYmxlLlxuICpcbiAqIEluc3RlYWQsIHRoaXMgZnVuY3Rpb24gXCJmaXhlc1wiIHRoZSByZWxhdGl2ZSB1cmxzIHRvIGJlIGFic29sdXRlIGFjY29yZGluZyB0byB0aGUgY3VycmVudCBwYWdlIGxvY2F0aW9uLlxuICpcbiAqIEEgcnVkaW1lbnRhcnkgdGVzdCBzdWl0ZSBpcyBsb2NhdGVkIGF0IGB0ZXN0L2ZpeFVybHMuanNgIGFuZCBjYW4gYmUgcnVuIHZpYSB0aGUgYG5wbSB0ZXN0YCBjb21tYW5kLlxuICpcbiAqL1xuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChjc3MpIHtcbiAgLy8gZ2V0IGN1cnJlbnQgbG9jYXRpb25cbiAgdmFyIGxvY2F0aW9uID0gdHlwZW9mIHdpbmRvdyAhPT0gXCJ1bmRlZmluZWRcIiAmJiB3aW5kb3cubG9jYXRpb247XG5cbiAgaWYgKCFsb2NhdGlvbikge1xuICAgIHRocm93IG5ldyBFcnJvcihcImZpeFVybHMgcmVxdWlyZXMgd2luZG93LmxvY2F0aW9uXCIpO1xuICB9XG5cblx0Ly8gYmxhbmsgb3IgbnVsbD9cblx0aWYgKCFjc3MgfHwgdHlwZW9mIGNzcyAhPT0gXCJzdHJpbmdcIikge1xuXHQgIHJldHVybiBjc3M7XG4gIH1cblxuICB2YXIgYmFzZVVybCA9IGxvY2F0aW9uLnByb3RvY29sICsgXCIvL1wiICsgbG9jYXRpb24uaG9zdDtcbiAgdmFyIGN1cnJlbnREaXIgPSBiYXNlVXJsICsgbG9jYXRpb24ucGF0aG5hbWUucmVwbGFjZSgvXFwvW15cXC9dKiQvLCBcIi9cIik7XG5cblx0Ly8gY29udmVydCBlYWNoIHVybCguLi4pXG5cdC8qXG5cdFRoaXMgcmVndWxhciBleHByZXNzaW9uIGlzIGp1c3QgYSB3YXkgdG8gcmVjdXJzaXZlbHkgbWF0Y2ggYnJhY2tldHMgd2l0aGluXG5cdGEgc3RyaW5nLlxuXG5cdCAvdXJsXFxzKlxcKCAgPSBNYXRjaCBvbiB0aGUgd29yZCBcInVybFwiIHdpdGggYW55IHdoaXRlc3BhY2UgYWZ0ZXIgaXQgYW5kIHRoZW4gYSBwYXJlbnNcblx0ICAgKCAgPSBTdGFydCBhIGNhcHR1cmluZyBncm91cFxuXHQgICAgICg/OiAgPSBTdGFydCBhIG5vbi1jYXB0dXJpbmcgZ3JvdXBcblx0ICAgICAgICAgW14pKF0gID0gTWF0Y2ggYW55dGhpbmcgdGhhdCBpc24ndCBhIHBhcmVudGhlc2VzXG5cdCAgICAgICAgIHwgID0gT1Jcblx0ICAgICAgICAgXFwoICA9IE1hdGNoIGEgc3RhcnQgcGFyZW50aGVzZXNcblx0ICAgICAgICAgICAgICg/OiAgPSBTdGFydCBhbm90aGVyIG5vbi1jYXB0dXJpbmcgZ3JvdXBzXG5cdCAgICAgICAgICAgICAgICAgW14pKF0rICA9IE1hdGNoIGFueXRoaW5nIHRoYXQgaXNuJ3QgYSBwYXJlbnRoZXNlc1xuXHQgICAgICAgICAgICAgICAgIHwgID0gT1Jcblx0ICAgICAgICAgICAgICAgICBcXCggID0gTWF0Y2ggYSBzdGFydCBwYXJlbnRoZXNlc1xuXHQgICAgICAgICAgICAgICAgICAgICBbXikoXSogID0gTWF0Y2ggYW55dGhpbmcgdGhhdCBpc24ndCBhIHBhcmVudGhlc2VzXG5cdCAgICAgICAgICAgICAgICAgXFwpICA9IE1hdGNoIGEgZW5kIHBhcmVudGhlc2VzXG5cdCAgICAgICAgICAgICApICA9IEVuZCBHcm91cFxuICAgICAgICAgICAgICAqXFwpID0gTWF0Y2ggYW55dGhpbmcgYW5kIHRoZW4gYSBjbG9zZSBwYXJlbnNcbiAgICAgICAgICApICA9IENsb3NlIG5vbi1jYXB0dXJpbmcgZ3JvdXBcbiAgICAgICAgICAqICA9IE1hdGNoIGFueXRoaW5nXG4gICAgICAgKSAgPSBDbG9zZSBjYXB0dXJpbmcgZ3JvdXBcblx0IFxcKSAgPSBNYXRjaCBhIGNsb3NlIHBhcmVuc1xuXG5cdCAvZ2kgID0gR2V0IGFsbCBtYXRjaGVzLCBub3QgdGhlIGZpcnN0LiAgQmUgY2FzZSBpbnNlbnNpdGl2ZS5cblx0ICovXG5cdHZhciBmaXhlZENzcyA9IGNzcy5yZXBsYWNlKC91cmxcXHMqXFwoKCg/OlteKShdfFxcKCg/OlteKShdK3xcXChbXikoXSpcXCkpKlxcKSkqKVxcKS9naSwgZnVuY3Rpb24oZnVsbE1hdGNoLCBvcmlnVXJsKSB7XG5cdFx0Ly8gc3RyaXAgcXVvdGVzIChpZiB0aGV5IGV4aXN0KVxuXHRcdHZhciB1bnF1b3RlZE9yaWdVcmwgPSBvcmlnVXJsXG5cdFx0XHQudHJpbSgpXG5cdFx0XHQucmVwbGFjZSgvXlwiKC4qKVwiJC8sIGZ1bmN0aW9uKG8sICQxKXsgcmV0dXJuICQxOyB9KVxuXHRcdFx0LnJlcGxhY2UoL14nKC4qKSckLywgZnVuY3Rpb24obywgJDEpeyByZXR1cm4gJDE7IH0pO1xuXG5cdFx0Ly8gYWxyZWFkeSBhIGZ1bGwgdXJsPyBubyBjaGFuZ2Vcblx0XHRpZiAoL14oI3xkYXRhOnxodHRwOlxcL1xcL3xodHRwczpcXC9cXC98ZmlsZTpcXC9cXC9cXC98XFxzKiQpL2kudGVzdCh1bnF1b3RlZE9yaWdVcmwpKSB7XG5cdFx0ICByZXR1cm4gZnVsbE1hdGNoO1xuXHRcdH1cblxuXHRcdC8vIGNvbnZlcnQgdGhlIHVybCB0byBhIGZ1bGwgdXJsXG5cdFx0dmFyIG5ld1VybDtcblxuXHRcdGlmICh1bnF1b3RlZE9yaWdVcmwuaW5kZXhPZihcIi8vXCIpID09PSAwKSB7XG5cdFx0ICBcdC8vVE9ETzogc2hvdWxkIHdlIGFkZCBwcm90b2NvbD9cblx0XHRcdG5ld1VybCA9IHVucXVvdGVkT3JpZ1VybDtcblx0XHR9IGVsc2UgaWYgKHVucXVvdGVkT3JpZ1VybC5pbmRleE9mKFwiL1wiKSA9PT0gMCkge1xuXHRcdFx0Ly8gcGF0aCBzaG91bGQgYmUgcmVsYXRpdmUgdG8gdGhlIGJhc2UgdXJsXG5cdFx0XHRuZXdVcmwgPSBiYXNlVXJsICsgdW5xdW90ZWRPcmlnVXJsOyAvLyBhbHJlYWR5IHN0YXJ0cyB3aXRoICcvJ1xuXHRcdH0gZWxzZSB7XG5cdFx0XHQvLyBwYXRoIHNob3VsZCBiZSByZWxhdGl2ZSB0byBjdXJyZW50IGRpcmVjdG9yeVxuXHRcdFx0bmV3VXJsID0gY3VycmVudERpciArIHVucXVvdGVkT3JpZ1VybC5yZXBsYWNlKC9eXFwuXFwvLywgXCJcIik7IC8vIFN0cmlwIGxlYWRpbmcgJy4vJ1xuXHRcdH1cblxuXHRcdC8vIHNlbmQgYmFjayB0aGUgZml4ZWQgdXJsKC4uLilcblx0XHRyZXR1cm4gXCJ1cmwoXCIgKyBKU09OLnN0cmluZ2lmeShuZXdVcmwpICsgXCIpXCI7XG5cdH0pO1xuXG5cdC8vIHNlbmQgYmFjayB0aGUgZml4ZWQgY3NzXG5cdHJldHVybiBmaXhlZENzcztcbn07XG4iXSwic291cmNlUm9vdCI6IiJ9\\n//# sourceURL=webpack-internal:///9\\n')},function(module,exports,__webpack_require__){eval('exports = module.exports = __webpack_require__(1)(false);\\n// imports\\n\\n\\n// module\\nexports.push([module.i, \"/* main.css */\\\\nhtml {\\\\n  box-sizing: border-box;\\\\n  -ms-text-size-adjust: 100%;\\\\n  -webkit-text-size-adjust: 100%;\\\\n}\\\\n\\\\n*, *:before, *:after {\\\\n  box-sizing: inherit;\\\\n}\\\\n\\\\nbody {\\\\n  margin: 0;\\\\n  font-family: \\'Helvetica Neue\\', Helvetica, Arial, sans-serif;\\\\n}\\\\n\\\\nh1, h2, h3, h4, h5, h6, p, ul {\\\\n  margin: 0;\\\\n  padding: 0;\\\\n}\", \"\"]);\\n\\n// exports\\n//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvbWFpbi5jc3M/NGI3YSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBOzs7QUFHQTtBQUNBLCtDQUFnRCwyQkFBMkIsK0JBQStCLG1DQUFtQyxHQUFHLDBCQUEwQix3QkFBd0IsR0FBRyxVQUFVLGNBQWMsZ0VBQWdFLEdBQUcsbUNBQW1DLGNBQWMsZUFBZSxHQUFHOztBQUVuVyIsImZpbGUiOiIxMC5qcyIsInNvdXJjZXNDb250ZW50IjpbImV4cG9ydHMgPSBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoXCIuLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9saWIvY3NzLWJhc2UuanNcIikoZmFsc2UpO1xuLy8gaW1wb3J0c1xuXG5cbi8vIG1vZHVsZVxuZXhwb3J0cy5wdXNoKFttb2R1bGUuaWQsIFwiLyogbWFpbi5jc3MgKi9cXG5odG1sIHtcXG4gIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XFxuICAtbXMtdGV4dC1zaXplLWFkanVzdDogMTAwJTtcXG4gIC13ZWJraXQtdGV4dC1zaXplLWFkanVzdDogMTAwJTtcXG59XFxuXFxuKiwgKjpiZWZvcmUsICo6YWZ0ZXIge1xcbiAgYm94LXNpemluZzogaW5oZXJpdDtcXG59XFxuXFxuYm9keSB7XFxuICBtYXJnaW46IDA7XFxuICBmb250LWZhbWlseTogJ0hlbHZldGljYSBOZXVlJywgSGVsdmV0aWNhLCBBcmlhbCwgc2Fucy1zZXJpZjtcXG59XFxuXFxuaDEsIGgyLCBoMywgaDQsIGg1LCBoNiwgcCwgdWwge1xcbiAgbWFyZ2luOiAwO1xcbiAgcGFkZGluZzogMDtcXG59XCIsIFwiXCJdKTtcblxuLy8gZXhwb3J0c1xuIl0sInNvdXJjZVJvb3QiOiIifQ==\\n//# sourceURL=webpack-internal:///10\\n')},function(module,exports,__webpack_require__){eval(\"\\nvar content = __webpack_require__(10);\\n\\nif(typeof content === 'string') content = [[module.i, content, '']];\\n\\nvar transform;\\nvar insertInto;\\n\\n\\n\\nvar options = {\\\"hmr\\\":true}\\n\\noptions.transform = transform\\noptions.insertInto = undefined;\\n\\nvar update = __webpack_require__(0)(content, options);\\n\\nif(content.locals) module.exports = content.locals;\\n\\nif(false) {}//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvbWFpbi5jc3M/ZTBkMyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTs7OztBQUlBLGVBQWU7O0FBRWY7QUFDQTs7QUFFQTs7QUFFQTs7QUFFQSIsImZpbGUiOiIxMS5qcyIsInNvdXJjZXNDb250ZW50IjpbIlxudmFyIGNvbnRlbnQgPSByZXF1aXJlKFwiISEuLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9pbmRleC5qcyEuL21haW4uY3NzXCIpO1xuXG5pZih0eXBlb2YgY29udGVudCA9PT0gJ3N0cmluZycpIGNvbnRlbnQgPSBbW21vZHVsZS5pZCwgY29udGVudCwgJyddXTtcblxudmFyIHRyYW5zZm9ybTtcbnZhciBpbnNlcnRJbnRvO1xuXG5cblxudmFyIG9wdGlvbnMgPSB7XCJobXJcIjp0cnVlfVxuXG5vcHRpb25zLnRyYW5zZm9ybSA9IHRyYW5zZm9ybVxub3B0aW9ucy5pbnNlcnRJbnRvID0gdW5kZWZpbmVkO1xuXG52YXIgdXBkYXRlID0gcmVxdWlyZShcIiEuLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2xpYi9hZGRTdHlsZXMuanNcIikoY29udGVudCwgb3B0aW9ucyk7XG5cbmlmKGNvbnRlbnQubG9jYWxzKSBtb2R1bGUuZXhwb3J0cyA9IGNvbnRlbnQubG9jYWxzO1xuXG5pZihtb2R1bGUuaG90KSB7XG5cdG1vZHVsZS5ob3QuYWNjZXB0KFwiISEuLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9pbmRleC5qcyEuL21haW4uY3NzXCIsIGZ1bmN0aW9uKCkge1xuXHRcdHZhciBuZXdDb250ZW50ID0gcmVxdWlyZShcIiEhLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvaW5kZXguanMhLi9tYWluLmNzc1wiKTtcblxuXHRcdGlmKHR5cGVvZiBuZXdDb250ZW50ID09PSAnc3RyaW5nJykgbmV3Q29udGVudCA9IFtbbW9kdWxlLmlkLCBuZXdDb250ZW50LCAnJ11dO1xuXG5cdFx0dmFyIGxvY2FscyA9IChmdW5jdGlvbihhLCBiKSB7XG5cdFx0XHR2YXIga2V5LCBpZHggPSAwO1xuXG5cdFx0XHRmb3Ioa2V5IGluIGEpIHtcblx0XHRcdFx0aWYoIWIgfHwgYVtrZXldICE9PSBiW2tleV0pIHJldHVybiBmYWxzZTtcblx0XHRcdFx0aWR4Kys7XG5cdFx0XHR9XG5cblx0XHRcdGZvcihrZXkgaW4gYikgaWR4LS07XG5cblx0XHRcdHJldHVybiBpZHggPT09IDA7XG5cdFx0fShjb250ZW50LmxvY2FscywgbmV3Q29udGVudC5sb2NhbHMpKTtcblxuXHRcdGlmKCFsb2NhbHMpIHRocm93IG5ldyBFcnJvcignQWJvcnRpbmcgQ1NTIEhNUiBkdWUgdG8gY2hhbmdlZCBjc3MtbW9kdWxlcyBsb2NhbHMuJyk7XG5cblx0XHR1cGRhdGUobmV3Q29udGVudCk7XG5cdH0pO1xuXG5cdG1vZHVsZS5ob3QuZGlzcG9zZShmdW5jdGlvbigpIHsgdXBkYXRlKCk7IH0pO1xufSJdLCJzb3VyY2VSb290IjoiIn0=\\n//# sourceURL=webpack-internal:///11\\n\")},function(module,exports){eval(\"// shim for using process in browser\\nvar process = module.exports = {};\\n\\n// cached from whatever global is present so that test runners that stub it\\n// don't break things.  But we need to wrap it in a try catch in case it is\\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\\n// function because try/catches deoptimize in certain engines.\\n\\nvar cachedSetTimeout;\\nvar cachedClearTimeout;\\n\\nfunction defaultSetTimout() {\\n    throw new Error('setTimeout has not been defined');\\n}\\nfunction defaultClearTimeout () {\\n    throw new Error('clearTimeout has not been defined');\\n}\\n(function () {\\n    try {\\n        if (typeof setTimeout === 'function') {\\n            cachedSetTimeout = setTimeout;\\n        } else {\\n            cachedSetTimeout = defaultSetTimout;\\n        }\\n    } catch (e) {\\n        cachedSetTimeout = defaultSetTimout;\\n    }\\n    try {\\n        if (typeof clearTimeout === 'function') {\\n            cachedClearTimeout = clearTimeout;\\n        } else {\\n            cachedClearTimeout = defaultClearTimeout;\\n        }\\n    } catch (e) {\\n        cachedClearTimeout = defaultClearTimeout;\\n    }\\n} ())\\nfunction runTimeout(fun) {\\n    if (cachedSetTimeout === setTimeout) {\\n        //normal enviroments in sane situations\\n        return setTimeout(fun, 0);\\n    }\\n    // if setTimeout wasn't available but was latter defined\\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\\n        cachedSetTimeout = setTimeout;\\n        return setTimeout(fun, 0);\\n    }\\n    try {\\n        // when when somebody has screwed with setTimeout but no I.E. maddness\\n        return cachedSetTimeout(fun, 0);\\n    } catch(e){\\n        try {\\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\\n            return cachedSetTimeout.call(null, fun, 0);\\n        } catch(e){\\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\\n            return cachedSetTimeout.call(this, fun, 0);\\n        }\\n    }\\n\\n\\n}\\nfunction runClearTimeout(marker) {\\n    if (cachedClearTimeout === clearTimeout) {\\n        //normal enviroments in sane situations\\n        return clearTimeout(marker);\\n    }\\n    // if clearTimeout wasn't available but was latter defined\\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\\n        cachedClearTimeout = clearTimeout;\\n        return clearTimeout(marker);\\n    }\\n    try {\\n        // when when somebody has screwed with setTimeout but no I.E. maddness\\n        return cachedClearTimeout(marker);\\n    } catch (e){\\n        try {\\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\\n            return cachedClearTimeout.call(null, marker);\\n        } catch (e){\\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\\n            return cachedClearTimeout.call(this, marker);\\n        }\\n    }\\n\\n\\n\\n}\\nvar queue = [];\\nvar draining = false;\\nvar currentQueue;\\nvar queueIndex = -1;\\n\\nfunction cleanUpNextTick() {\\n    if (!draining || !currentQueue) {\\n        return;\\n    }\\n    draining = false;\\n    if (currentQueue.length) {\\n        queue = currentQueue.concat(queue);\\n    } else {\\n        queueIndex = -1;\\n    }\\n    if (queue.length) {\\n        drainQueue();\\n    }\\n}\\n\\nfunction drainQueue() {\\n    if (draining) {\\n        return;\\n    }\\n    var timeout = runTimeout(cleanUpNextTick);\\n    draining = true;\\n\\n    var len = queue.length;\\n    while(len) {\\n        currentQueue = queue;\\n        queue = [];\\n        while (++queueIndex < len) {\\n            if (currentQueue) {\\n                currentQueue[queueIndex].run();\\n            }\\n        }\\n        queueIndex = -1;\\n        len = queue.length;\\n    }\\n    currentQueue = null;\\n    draining = false;\\n    runClearTimeout(timeout);\\n}\\n\\nprocess.nextTick = function (fun) {\\n    var args = new Array(arguments.length - 1);\\n    if (arguments.length > 1) {\\n        for (var i = 1; i < arguments.length; i++) {\\n            args[i - 1] = arguments[i];\\n        }\\n    }\\n    queue.push(new Item(fun, args));\\n    if (queue.length === 1 && !draining) {\\n        runTimeout(drainQueue);\\n    }\\n};\\n\\n// v8 likes predictible objects\\nfunction Item(fun, array) {\\n    this.fun = fun;\\n    this.array = array;\\n}\\nItem.prototype.run = function () {\\n    this.fun.apply(null, this.array);\\n};\\nprocess.title = 'browser';\\nprocess.browser = true;\\nprocess.env = {};\\nprocess.argv = [];\\nprocess.version = ''; // empty string to avoid regexp issues\\nprocess.versions = {};\\n\\nfunction noop() {}\\n\\nprocess.on = noop;\\nprocess.addListener = noop;\\nprocess.once = noop;\\nprocess.off = noop;\\nprocess.removeListener = noop;\\nprocess.removeAllListeners = noop;\\nprocess.emit = noop;\\nprocess.prependListener = noop;\\nprocess.prependOnceListener = noop;\\n\\nprocess.listeners = function (name) { return [] }\\n\\nprocess.binding = function (name) {\\n    throw new Error('process.binding is not supported');\\n};\\n\\nprocess.cwd = function () { return '/' };\\nprocess.chdir = function (dir) {\\n    throw new Error('process.chdir is not supported');\\n};\\nprocess.umask = function() { return 0; };\\n//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\\n//# sourceURL=webpack-internal:///12\\n\")},function(module,exports,__webpack_require__){eval('/* WEBPACK VAR INJECTION */(function(global, process) {(function (global, undefined) {\\n    \"use strict\";\\n\\n    if (global.setImmediate) {\\n        return;\\n    }\\n\\n    var nextHandle = 1; // Spec says greater than zero\\n    var tasksByHandle = {};\\n    var currentlyRunningATask = false;\\n    var doc = global.document;\\n    var registerImmediate;\\n\\n    function setImmediate(callback) {\\n      // Callback can either be a function or a string\\n      if (typeof callback !== \"function\") {\\n        callback = new Function(\"\" + callback);\\n      }\\n      // Copy function arguments\\n      var args = new Array(arguments.length - 1);\\n      for (var i = 0; i < args.length; i++) {\\n          args[i] = arguments[i + 1];\\n      }\\n      // Store and register the task\\n      var task = { callback: callback, args: args };\\n      tasksByHandle[nextHandle] = task;\\n      registerImmediate(nextHandle);\\n      return nextHandle++;\\n    }\\n\\n    function clearImmediate(handle) {\\n        delete tasksByHandle[handle];\\n    }\\n\\n    function run(task) {\\n        var callback = task.callback;\\n        var args = task.args;\\n        switch (args.length) {\\n        case 0:\\n            callback();\\n            break;\\n        case 1:\\n            callback(args[0]);\\n            break;\\n        case 2:\\n            callback(args[0], args[1]);\\n            break;\\n        case 3:\\n            callback(args[0], args[1], args[2]);\\n            break;\\n        default:\\n            callback.apply(undefined, args);\\n            break;\\n        }\\n    }\\n\\n    function runIfPresent(handle) {\\n        // From the spec: \"Wait until any invocations of this algorithm started before this one have completed.\"\\n        // So if we\\'re currently running a task, we\\'ll need to delay this invocation.\\n        if (currentlyRunningATask) {\\n            // Delay by doing a setTimeout. setImmediate was tried instead, but in Firefox 7 it generated a\\n            // \"too much recursion\" error.\\n            setTimeout(runIfPresent, 0, handle);\\n        } else {\\n            var task = tasksByHandle[handle];\\n            if (task) {\\n                currentlyRunningATask = true;\\n                try {\\n                    run(task);\\n                } finally {\\n                    clearImmediate(handle);\\n                    currentlyRunningATask = false;\\n                }\\n            }\\n        }\\n    }\\n\\n    function installNextTickImplementation() {\\n        registerImmediate = function(handle) {\\n            process.nextTick(function () { runIfPresent(handle); });\\n        };\\n    }\\n\\n    function canUsePostMessage() {\\n        // The test against `importScripts` prevents this implementation from being installed inside a web worker,\\n        // where `global.postMessage` means something completely different and can\\'t be used for this purpose.\\n        if (global.postMessage && !global.importScripts) {\\n            var postMessageIsAsynchronous = true;\\n            var oldOnMessage = global.onmessage;\\n            global.onmessage = function() {\\n                postMessageIsAsynchronous = false;\\n            };\\n            global.postMessage(\"\", \"*\");\\n            global.onmessage = oldOnMessage;\\n            return postMessageIsAsynchronous;\\n        }\\n    }\\n\\n    function installPostMessageImplementation() {\\n        // Installs an event handler on `global` for the `message` event: see\\n        // * https://developer.mozilla.org/en/DOM/window.postMessage\\n        // * http://www.whatwg.org/specs/web-apps/current-work/multipage/comms.html#crossDocumentMessages\\n\\n        var messagePrefix = \"setImmediate$\" + Math.random() + \"$\";\\n        var onGlobalMessage = function(event) {\\n            if (event.source === global &&\\n                typeof event.data === \"string\" &&\\n                event.data.indexOf(messagePrefix) === 0) {\\n                runIfPresent(+event.data.slice(messagePrefix.length));\\n            }\\n        };\\n\\n        if (global.addEventListener) {\\n            global.addEventListener(\"message\", onGlobalMessage, false);\\n        } else {\\n            global.attachEvent(\"onmessage\", onGlobalMessage);\\n        }\\n\\n        registerImmediate = function(handle) {\\n            global.postMessage(messagePrefix + handle, \"*\");\\n        };\\n    }\\n\\n    function installMessageChannelImplementation() {\\n        var channel = new MessageChannel();\\n        channel.port1.onmessage = function(event) {\\n            var handle = event.data;\\n            runIfPresent(handle);\\n        };\\n\\n        registerImmediate = function(handle) {\\n            channel.port2.postMessage(handle);\\n        };\\n    }\\n\\n    function installReadyStateChangeImplementation() {\\n        var html = doc.documentElement;\\n        registerImmediate = function(handle) {\\n            // Create a <script> element; its readystatechange event will be fired asynchronously once it is inserted\\n            // into the document. Do so, thus queuing up the task. Remember to clean up once it\\'s been called.\\n            var script = doc.createElement(\"script\");\\n            script.onreadystatechange = function () {\\n                runIfPresent(handle);\\n                script.onreadystatechange = null;\\n                html.removeChild(script);\\n                script = null;\\n            };\\n            html.appendChild(script);\\n        };\\n    }\\n\\n    function installSetTimeoutImplementation() {\\n        registerImmediate = function(handle) {\\n            setTimeout(runIfPresent, 0, handle);\\n        };\\n    }\\n\\n    // If supported, we should attach to the prototype of global, since that is where setTimeout et al. live.\\n    var attachTo = Object.getPrototypeOf && Object.getPrototypeOf(global);\\n    attachTo = attachTo && attachTo.setTimeout ? attachTo : global;\\n\\n    // Don\\'t get fooled by e.g. browserify environments.\\n    if ({}.toString.call(global.process) === \"[object process]\") {\\n        // For Node.js before 0.9\\n        installNextTickImplementation();\\n\\n    } else if (canUsePostMessage()) {\\n        // For non-IE10 modern browsers\\n        installPostMessageImplementation();\\n\\n    } else if (global.MessageChannel) {\\n        // For web workers, where supported\\n        installMessageChannelImplementation();\\n\\n    } else if (doc && \"onreadystatechange\" in doc.createElement(\"script\")) {\\n        // For IE 6–8\\n        installReadyStateChangeImplementation();\\n\\n    } else {\\n        // For older browsers\\n        installSetTimeoutImplementation();\\n    }\\n\\n    attachTo.setImmediate = setImmediate;\\n    attachTo.clearImmediate = clearImmediate;\\n}(typeof self === \"undefined\" ? typeof global === \"undefined\" ? this : global : self));\\n\\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(2), __webpack_require__(12)))//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\\n//# sourceURL=webpack-internal:///13\\n')},function(module,exports,__webpack_require__){eval('/* WEBPACK VAR INJECTION */(function(global) {var scope = (typeof global !== \"undefined\" && global) ||\\n            (typeof self !== \"undefined\" && self) ||\\n            window;\\nvar apply = Function.prototype.apply;\\n\\n// DOM APIs, for completeness\\n\\nexports.setTimeout = function() {\\n  return new Timeout(apply.call(setTimeout, scope, arguments), clearTimeout);\\n};\\nexports.setInterval = function() {\\n  return new Timeout(apply.call(setInterval, scope, arguments), clearInterval);\\n};\\nexports.clearTimeout =\\nexports.clearInterval = function(timeout) {\\n  if (timeout) {\\n    timeout.close();\\n  }\\n};\\n\\nfunction Timeout(id, clearFn) {\\n  this._id = id;\\n  this._clearFn = clearFn;\\n}\\nTimeout.prototype.unref = Timeout.prototype.ref = function() {};\\nTimeout.prototype.close = function() {\\n  this._clearFn.call(scope, this._id);\\n};\\n\\n// Does not start the time, just sets up the members needed.\\nexports.enroll = function(item, msecs) {\\n  clearTimeout(item._idleTimeoutId);\\n  item._idleTimeout = msecs;\\n};\\n\\nexports.unenroll = function(item) {\\n  clearTimeout(item._idleTimeoutId);\\n  item._idleTimeout = -1;\\n};\\n\\nexports._unrefActive = exports.active = function(item) {\\n  clearTimeout(item._idleTimeoutId);\\n\\n  var msecs = item._idleTimeout;\\n  if (msecs >= 0) {\\n    item._idleTimeoutId = setTimeout(function onTimeout() {\\n      if (item._onTimeout)\\n        item._onTimeout();\\n    }, msecs);\\n  }\\n};\\n\\n// setimmediate attaches itself to the global object\\n__webpack_require__(13);\\n// On some exotic environments, it\\'s not clear which object `setimmediate` was\\n// able to install onto.  Search each possibility in the same order as the\\n// `setimmediate` library.\\nexports.setImmediate = (typeof self !== \"undefined\" && self.setImmediate) ||\\n                       (typeof global !== \"undefined\" && global.setImmediate) ||\\n                       (this && this.setImmediate);\\nexports.clearImmediate = (typeof self !== \"undefined\" && self.clearImmediate) ||\\n                         (typeof global !== \"undefined\" && global.clearImmediate) ||\\n                         (this && this.clearImmediate);\\n\\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(2)))//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvdGltZXJzLWJyb3dzZXJpZnkvbWFpbi5qcz81MTE4Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsImZpbGUiOiIxNC5qcyIsInNvdXJjZXNDb250ZW50IjpbInZhciBzY29wZSA9ICh0eXBlb2YgZ2xvYmFsICE9PSBcInVuZGVmaW5lZFwiICYmIGdsb2JhbCkgfHxcbiAgICAgICAgICAgICh0eXBlb2Ygc2VsZiAhPT0gXCJ1bmRlZmluZWRcIiAmJiBzZWxmKSB8fFxuICAgICAgICAgICAgd2luZG93O1xudmFyIGFwcGx5ID0gRnVuY3Rpb24ucHJvdG90eXBlLmFwcGx5O1xuXG4vLyBET00gQVBJcywgZm9yIGNvbXBsZXRlbmVzc1xuXG5leHBvcnRzLnNldFRpbWVvdXQgPSBmdW5jdGlvbigpIHtcbiAgcmV0dXJuIG5ldyBUaW1lb3V0KGFwcGx5LmNhbGwoc2V0VGltZW91dCwgc2NvcGUsIGFyZ3VtZW50cyksIGNsZWFyVGltZW91dCk7XG59O1xuZXhwb3J0cy5zZXRJbnRlcnZhbCA9IGZ1bmN0aW9uKCkge1xuICByZXR1cm4gbmV3IFRpbWVvdXQoYXBwbHkuY2FsbChzZXRJbnRlcnZhbCwgc2NvcGUsIGFyZ3VtZW50cyksIGNsZWFySW50ZXJ2YWwpO1xufTtcbmV4cG9ydHMuY2xlYXJUaW1lb3V0ID1cbmV4cG9ydHMuY2xlYXJJbnRlcnZhbCA9IGZ1bmN0aW9uKHRpbWVvdXQpIHtcbiAgaWYgKHRpbWVvdXQpIHtcbiAgICB0aW1lb3V0LmNsb3NlKCk7XG4gIH1cbn07XG5cbmZ1bmN0aW9uIFRpbWVvdXQoaWQsIGNsZWFyRm4pIHtcbiAgdGhpcy5faWQgPSBpZDtcbiAgdGhpcy5fY2xlYXJGbiA9IGNsZWFyRm47XG59XG5UaW1lb3V0LnByb3RvdHlwZS51bnJlZiA9IFRpbWVvdXQucHJvdG90eXBlLnJlZiA9IGZ1bmN0aW9uKCkge307XG5UaW1lb3V0LnByb3RvdHlwZS5jbG9zZSA9IGZ1bmN0aW9uKCkge1xuICB0aGlzLl9jbGVhckZuLmNhbGwoc2NvcGUsIHRoaXMuX2lkKTtcbn07XG5cbi8vIERvZXMgbm90IHN0YXJ0IHRoZSB0aW1lLCBqdXN0IHNldHMgdXAgdGhlIG1lbWJlcnMgbmVlZGVkLlxuZXhwb3J0cy5lbnJvbGwgPSBmdW5jdGlvbihpdGVtLCBtc2Vjcykge1xuICBjbGVhclRpbWVvdXQoaXRlbS5faWRsZVRpbWVvdXRJZCk7XG4gIGl0ZW0uX2lkbGVUaW1lb3V0ID0gbXNlY3M7XG59O1xuXG5leHBvcnRzLnVuZW5yb2xsID0gZnVuY3Rpb24oaXRlbSkge1xuICBjbGVhclRpbWVvdXQoaXRlbS5faWRsZVRpbWVvdXRJZCk7XG4gIGl0ZW0uX2lkbGVUaW1lb3V0ID0gLTE7XG59O1xuXG5leHBvcnRzLl91bnJlZkFjdGl2ZSA9IGV4cG9ydHMuYWN0aXZlID0gZnVuY3Rpb24oaXRlbSkge1xuICBjbGVhclRpbWVvdXQoaXRlbS5faWRsZVRpbWVvdXRJZCk7XG5cbiAgdmFyIG1zZWNzID0gaXRlbS5faWRsZVRpbWVvdXQ7XG4gIGlmIChtc2VjcyA+PSAwKSB7XG4gICAgaXRlbS5faWRsZVRpbWVvdXRJZCA9IHNldFRpbWVvdXQoZnVuY3Rpb24gb25UaW1lb3V0KCkge1xuICAgICAgaWYgKGl0ZW0uX29uVGltZW91dClcbiAgICAgICAgaXRlbS5fb25UaW1lb3V0KCk7XG4gICAgfSwgbXNlY3MpO1xuICB9XG59O1xuXG4vLyBzZXRpbW1lZGlhdGUgYXR0YWNoZXMgaXRzZWxmIHRvIHRoZSBnbG9iYWwgb2JqZWN0XG5yZXF1aXJlKFwic2V0aW1tZWRpYXRlXCIpO1xuLy8gT24gc29tZSBleG90aWMgZW52aXJvbm1lbnRzLCBpdCdzIG5vdCBjbGVhciB3aGljaCBvYmplY3QgYHNldGltbWVkaWF0ZWAgd2FzXG4vLyBhYmxlIHRvIGluc3RhbGwgb250by4gIFNlYXJjaCBlYWNoIHBvc3NpYmlsaXR5IGluIHRoZSBzYW1lIG9yZGVyIGFzIHRoZVxuLy8gYHNldGltbWVkaWF0ZWAgbGlicmFyeS5cbmV4cG9ydHMuc2V0SW1tZWRpYXRlID0gKHR5cGVvZiBzZWxmICE9PSBcInVuZGVmaW5lZFwiICYmIHNlbGYuc2V0SW1tZWRpYXRlKSB8fFxuICAgICAgICAgICAgICAgICAgICAgICAodHlwZW9mIGdsb2JhbCAhPT0gXCJ1bmRlZmluZWRcIiAmJiBnbG9iYWwuc2V0SW1tZWRpYXRlKSB8fFxuICAgICAgICAgICAgICAgICAgICAgICAodGhpcyAmJiB0aGlzLnNldEltbWVkaWF0ZSk7XG5leHBvcnRzLmNsZWFySW1tZWRpYXRlID0gKHR5cGVvZiBzZWxmICE9PSBcInVuZGVmaW5lZFwiICYmIHNlbGYuY2xlYXJJbW1lZGlhdGUpIHx8XG4gICAgICAgICAgICAgICAgICAgICAgICAgKHR5cGVvZiBnbG9iYWwgIT09IFwidW5kZWZpbmVkXCIgJiYgZ2xvYmFsLmNsZWFySW1tZWRpYXRlKSB8fFxuICAgICAgICAgICAgICAgICAgICAgICAgICh0aGlzICYmIHRoaXMuY2xlYXJJbW1lZGlhdGUpO1xuIl0sInNvdXJjZVJvb3QiOiIifQ==\\n//# sourceURL=webpack-internal:///14\\n')},function(module,exports,__webpack_require__){\"use strict\";eval(\"\\n\\nvar _san = __webpack_require__(3);\\n\\nvar _san2 = _interopRequireDefault(_san);\\n\\n__webpack_require__(11);\\n\\nvar _hello = __webpack_require__(8);\\n\\nvar _hello2 = _interopRequireDefault(_hello);\\n\\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\\n\\nnew _hello2.default().attach(document.body);//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvbWFpbi5qcz81NmQ3Il0sIm5hbWVzIjpbImF0dGFjaCIsImRvY3VtZW50IiwiYm9keSJdLCJtYXBwaW5ncyI6Ijs7QUFBQTs7OztBQUNBOztBQUNBOzs7Ozs7QUFFQSxzQkFBZUEsTUFBZixDQUFzQkMsU0FBU0MsSUFBL0IiLCJmaWxlIjoiMTUuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgc2FuIGZyb20gXCJzYW5cIlxuaW1wb3J0IFwiLi9tYWluLmNzc1wiXG5pbXBvcnQgaGVsbG9zYW4gZnJvbSBcIi4vaGVsbG8uc2FuXCJcblxubmV3IGhlbGxvc2FuKCkuYXR0YWNoKGRvY3VtZW50LmJvZHkpO1xuIl0sInNvdXJjZVJvb3QiOiIifQ==\\n//# sourceURL=webpack-internal:///15\\n\")}]);","extractedComments":[]}